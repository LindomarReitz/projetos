package trabalho.desktop;

 import java.text.ParseException;  
 import javax.swing.JFormattedTextField;  
 import javax.swing.text.MaskFormatter;  
   
 /** 
 * 
 * @author  Marcelo 
 */  
 public class TesteData extends javax.swing.JFrame {  
       
     /** Creates new form TesteData */  
     public TesteData() {  
         initComponents();  
   
         // o try vc deverá colocar em todos os jFormatTxtField que usar esse método  
         //deixe sempre após o initComponents(), para evitar que sua máscara seje sobscrita  
         try {  
             maskData(jFormattedTextFieldData);  
         } catch (ParseException ex) {  
             ex.printStackTrace();  
         }  
   
     }  
       
       
     public MaskFormatter maskData(JFormattedTextField textfield) throws ParseException{  
         MaskFormatter mask = null;  
         // nessa linha abaixo vc define o formato, então ###.###.###-## seria para cpf  
         mask = new MaskFormatter("###.###.###-##");  
         //permite sobrescrever os caracteres padrão de separação das barras ( _ )  
         mask.setOverwriteMode(true);  
         //os caracteres permitidos para digitação  
         mask.setValidCharacters("0123456789");  
         //tipo de caracter que ficará nos espaços para serem preenchidos  
         mask.setPlaceholderCharacter('_');  
          //instala a mascara no maskFormat e retorna no return abaixo  
         mask.install(textfield);  
         return mask;  
     }  
   
   
 /** 
 *Não se preocupe com o código abaixo, é apenas o form 
 */  
   
    /** This method is called from within the constructor to 
      * initialize the form. 
      * WARNING: Do NOT modify this code. The content of this method is 
      * always regenerated by the Form Editor. 
      */  
     // <editor-fold defaultstate="collapsed" desc=" Código Gerado ">  
     private void initComponents() {  
         jFormattedTextFieldData = new javax.swing.JFormattedTextField();  
         jLabel1 = new javax.swing.JLabel();  
   
         setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);  
   

	jLabel1.setText("Formato de Data:");  
   
         javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());  
         getContentPane().setLayout(layout);  
         layout.setHorizontalGroup(  
             layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)  
             .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()  
                 .addContainerGap(162, Short.MAX_VALUE)  
                 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)  
                     .addComponent(jLabel1)  
                     .addComponent(jFormattedTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))  
                 .addGap(124, 124, 124))  
         );  
         layout.setVerticalGroup(  
             layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)  
             .addGroup(layout.createSequentialGroup()  
                 .addGap(93, 93, 93)  
                .addComponent(jLabel1)  
                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)  
                 .addComponent(jFormattedTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)  
                 .addContainerGap(167, Short.MAX_VALUE))  
         );  
         pack();  
     }// </editor-fold>  
       
     /** 
      * @param args the command line arguments 
      */  
     public static void main(String args[]) {  
         java.awt.EventQueue.invokeLater(new Runnable() {  
             public void run() {  
                 new TesteData().setVisible(true);  
             }  
         });  
     }  
      
    // Declaração de variáveis - não modifique  
    private javax.swing.JFormattedTextField jFormattedTextFieldData;  
     private javax.swing.JLabel jLabel1;  
     // Fim da declaração de variáveis  
       
 }  