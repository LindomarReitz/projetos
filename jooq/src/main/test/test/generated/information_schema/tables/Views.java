/**
 * This class is generated by jOOQ
 */
package test.generated.information_schema.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class Views extends org.jooq.impl.TableImpl<test.generated.information_schema.tables.records.ViewsRecord> {

	private static final long serialVersionUID = -273614645;

	/**
	 * The singleton instance of information_schema.views
	 */
	public static final test.generated.information_schema.tables.Views VIEWS = new test.generated.information_schema.tables.Views();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<test.generated.information_schema.tables.records.ViewsRecord> getRecordType() {
		return test.generated.information_schema.tables.records.ViewsRecord.class;
	}

	/**
	 * The table column <code>information_schema.views.table_catalog</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ViewsRecord, java.lang.String> TABLE_CATALOG = createField("table_catalog", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.views.table_schema</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ViewsRecord, java.lang.String> TABLE_SCHEMA = createField("table_schema", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.views.table_name</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ViewsRecord, java.lang.String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.views.view_definition</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ViewsRecord, java.lang.String> VIEW_DEFINITION = createField("view_definition", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.views.check_option</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ViewsRecord, java.lang.String> CHECK_OPTION = createField("check_option", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.views.is_updatable</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ViewsRecord, java.lang.String> IS_UPDATABLE = createField("is_updatable", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.views.is_insertable_into</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ViewsRecord, java.lang.String> IS_INSERTABLE_INTO = createField("is_insertable_into", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.views.is_trigger_updatable</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ViewsRecord, java.lang.String> IS_TRIGGER_UPDATABLE = createField("is_trigger_updatable", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.views.is_trigger_deletable</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ViewsRecord, java.lang.String> IS_TRIGGER_DELETABLE = createField("is_trigger_deletable", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.views.is_trigger_insertable_into</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ViewsRecord, java.lang.String> IS_TRIGGER_INSERTABLE_INTO = createField("is_trigger_insertable_into", org.jooq.impl.SQLDataType.VARCHAR, this);

	public Views() {
		super("views", test.generated.information_schema.InformationSchema.INFORMATION_SCHEMA);
	}

	public Views(java.lang.String alias) {
		super(alias, test.generated.information_schema.InformationSchema.INFORMATION_SCHEMA, test.generated.information_schema.tables.Views.VIEWS);
	}

	@Override
	public test.generated.information_schema.tables.Views as(java.lang.String alias) {
		return new test.generated.information_schema.tables.Views(alias);
	}
}
