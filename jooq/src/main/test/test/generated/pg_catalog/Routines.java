/**
 * This class is generated by jOOQ
 */
package test.generated.pg_catalog;

/**
 * This class is generated by jOOQ.
 *
 * Convenience access to all stored procedures and functions in pg_catalog
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public final class Routines {

	/**
	 * Call pg_catalog.abbrev
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String abbrev2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Abbrev2 f = new test.generated.pg_catalog.routines.Abbrev2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abbrev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> abbrev2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Abbrev2 f = new test.generated.pg_catalog.routines.Abbrev2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abbrev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> abbrev2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Abbrev2 f = new test.generated.pg_catalog.routines.Abbrev2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abbrev
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String abbrev1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Abbrev1 f = new test.generated.pg_catalog.routines.Abbrev1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abbrev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> abbrev1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Abbrev1 f = new test.generated.pg_catalog.routines.Abbrev1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abbrev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> abbrev1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Abbrev1 f = new test.generated.pg_catalog.routines.Abbrev1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abs
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float abs1(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Abs1 f = new test.generated.pg_catalog.routines.Abs1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> abs1(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Abs1 f = new test.generated.pg_catalog.routines.Abs1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> abs1(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Abs1 f = new test.generated.pg_catalog.routines.Abs1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abs
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal abs6(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Abs6 f = new test.generated.pg_catalog.routines.Abs6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> abs6(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Abs6 f = new test.generated.pg_catalog.routines.Abs6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> abs6(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Abs6 f = new test.generated.pg_catalog.routines.Abs6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abs
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double abs2(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Abs2 f = new test.generated.pg_catalog.routines.Abs2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> abs2(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Abs2 f = new test.generated.pg_catalog.routines.Abs2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> abs2(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Abs2 f = new test.generated.pg_catalog.routines.Abs2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abs
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short abs5(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Abs5 f = new test.generated.pg_catalog.routines.Abs5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> abs5(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Abs5 f = new test.generated.pg_catalog.routines.Abs5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> abs5(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Abs5 f = new test.generated.pg_catalog.routines.Abs5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abs
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer abs4(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Abs4 f = new test.generated.pg_catalog.routines.Abs4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> abs4(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Abs4 f = new test.generated.pg_catalog.routines.Abs4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> abs4(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Abs4 f = new test.generated.pg_catalog.routines.Abs4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abs
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long abs3(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Abs3 f = new test.generated.pg_catalog.routines.Abs3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> abs3(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Abs3 f = new test.generated.pg_catalog.routines.Abs3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> abs3(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Abs3 f = new test.generated.pg_catalog.routines.Abs3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abstime
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object abstime1(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Abstime1 f = new test.generated.pg_catalog.routines.Abstime1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abstime as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> abstime1(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Abstime1 f = new test.generated.pg_catalog.routines.Abstime1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abstime as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> abstime1(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Abstime1 f = new test.generated.pg_catalog.routines.Abstime1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abstime
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object abstime2(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Abstime2 f = new test.generated.pg_catalog.routines.Abstime2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abstime as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> abstime2(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Abstime2 f = new test.generated.pg_catalog.routines.Abstime2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abstime as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> abstime2(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Abstime2 f = new test.generated.pg_catalog.routines.Abstime2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abstimeeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean abstimeeq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Abstimeeq f = new test.generated.pg_catalog.routines.Abstimeeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abstimeeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> abstimeeq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Abstimeeq f = new test.generated.pg_catalog.routines.Abstimeeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abstimeeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> abstimeeq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Abstimeeq f = new test.generated.pg_catalog.routines.Abstimeeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abstimege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean abstimege(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Abstimege f = new test.generated.pg_catalog.routines.Abstimege();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abstimege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> abstimege(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Abstimege f = new test.generated.pg_catalog.routines.Abstimege();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abstimege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> abstimege(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Abstimege f = new test.generated.pg_catalog.routines.Abstimege();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abstimegt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean abstimegt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Abstimegt f = new test.generated.pg_catalog.routines.Abstimegt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abstimegt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> abstimegt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Abstimegt f = new test.generated.pg_catalog.routines.Abstimegt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abstimegt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> abstimegt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Abstimegt f = new test.generated.pg_catalog.routines.Abstimegt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abstimein
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object abstimein(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Abstimein f = new test.generated.pg_catalog.routines.Abstimein();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abstimein as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> abstimein(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Abstimein f = new test.generated.pg_catalog.routines.Abstimein();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abstimein as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> abstimein(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Abstimein f = new test.generated.pg_catalog.routines.Abstimein();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abstimele
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean abstimele(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Abstimele f = new test.generated.pg_catalog.routines.Abstimele();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abstimele as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> abstimele(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Abstimele f = new test.generated.pg_catalog.routines.Abstimele();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abstimele as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> abstimele(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Abstimele f = new test.generated.pg_catalog.routines.Abstimele();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abstimelt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean abstimelt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Abstimelt f = new test.generated.pg_catalog.routines.Abstimelt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abstimelt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> abstimelt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Abstimelt f = new test.generated.pg_catalog.routines.Abstimelt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abstimelt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> abstimelt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Abstimelt f = new test.generated.pg_catalog.routines.Abstimelt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abstimene
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean abstimene(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Abstimene f = new test.generated.pg_catalog.routines.Abstimene();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abstimene as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> abstimene(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Abstimene f = new test.generated.pg_catalog.routines.Abstimene();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abstimene as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> abstimene(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Abstimene f = new test.generated.pg_catalog.routines.Abstimene();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abstimeout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object abstimeout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Abstimeout f = new test.generated.pg_catalog.routines.Abstimeout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abstimeout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> abstimeout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Abstimeout f = new test.generated.pg_catalog.routines.Abstimeout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abstimeout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> abstimeout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Abstimeout f = new test.generated.pg_catalog.routines.Abstimeout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abstimerecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object abstimerecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Abstimerecv f = new test.generated.pg_catalog.routines.Abstimerecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abstimerecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> abstimerecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Abstimerecv f = new test.generated.pg_catalog.routines.Abstimerecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abstimerecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> abstimerecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Abstimerecv f = new test.generated.pg_catalog.routines.Abstimerecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.abstimesend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] abstimesend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Abstimesend f = new test.generated.pg_catalog.routines.Abstimesend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.abstimesend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> abstimesend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Abstimesend f = new test.generated.pg_catalog.routines.Abstimesend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.abstimesend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> abstimesend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Abstimesend f = new test.generated.pg_catalog.routines.Abstimesend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.aclcontains
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean aclcontains(org.jooq.Configuration configuration, java.lang.String[] __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Aclcontains f = new test.generated.pg_catalog.routines.Aclcontains();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.aclcontains as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> aclcontains(java.lang.String[] __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Aclcontains f = new test.generated.pg_catalog.routines.Aclcontains();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.aclcontains as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> aclcontains(org.jooq.Field<java.lang.String[]> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Aclcontains f = new test.generated.pg_catalog.routines.Aclcontains();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.aclexplode
	 *
	 * @param acl IN parameter
	 * @param grantor OUT parameter
	 * @param grantee OUT parameter
	 * @param privilegeType OUT parameter
	 * @param isGrantable OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.Aclexplode aclexplode(org.jooq.Configuration configuration, java.lang.String[] acl) {
		test.generated.pg_catalog.routines.Aclexplode p = new test.generated.pg_catalog.routines.Aclexplode();
		p.setAcl(acl);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.aclinsert
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String[] aclinsert(org.jooq.Configuration configuration, java.lang.String[] __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Aclinsert f = new test.generated.pg_catalog.routines.Aclinsert();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.aclinsert as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String[]> aclinsert(java.lang.String[] __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Aclinsert f = new test.generated.pg_catalog.routines.Aclinsert();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.aclinsert as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String[]> aclinsert(org.jooq.Field<java.lang.String[]> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Aclinsert f = new test.generated.pg_catalog.routines.Aclinsert();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.aclitemeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean aclitemeq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Aclitemeq f = new test.generated.pg_catalog.routines.Aclitemeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.aclitemeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> aclitemeq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Aclitemeq f = new test.generated.pg_catalog.routines.Aclitemeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.aclitemeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> aclitemeq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Aclitemeq f = new test.generated.pg_catalog.routines.Aclitemeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.aclitemin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String aclitemin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Aclitemin f = new test.generated.pg_catalog.routines.Aclitemin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.aclitemin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> aclitemin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Aclitemin f = new test.generated.pg_catalog.routines.Aclitemin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.aclitemin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> aclitemin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Aclitemin f = new test.generated.pg_catalog.routines.Aclitemin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.aclitemout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object aclitemout(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Aclitemout f = new test.generated.pg_catalog.routines.Aclitemout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.aclitemout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> aclitemout(java.lang.String __1) {
		test.generated.pg_catalog.routines.Aclitemout f = new test.generated.pg_catalog.routines.Aclitemout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.aclitemout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> aclitemout(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Aclitemout f = new test.generated.pg_catalog.routines.Aclitemout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.aclremove
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String[] aclremove(org.jooq.Configuration configuration, java.lang.String[] __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Aclremove f = new test.generated.pg_catalog.routines.Aclremove();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.aclremove as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String[]> aclremove(java.lang.String[] __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Aclremove f = new test.generated.pg_catalog.routines.Aclremove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.aclremove as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String[]> aclremove(org.jooq.Field<java.lang.String[]> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Aclremove f = new test.generated.pg_catalog.routines.Aclremove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.acos
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double acos(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Acos f = new test.generated.pg_catalog.routines.Acos();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.acos as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> acos(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Acos f = new test.generated.pg_catalog.routines.Acos();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.acos as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> acos(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Acos f = new test.generated.pg_catalog.routines.Acos();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.age
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object age3(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Age3 f = new test.generated.pg_catalog.routines.Age3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.age as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> age3(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Age3 f = new test.generated.pg_catalog.routines.Age3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.age as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> age3(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Age3 f = new test.generated.pg_catalog.routines.Age3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.age
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object age5(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Age5 f = new test.generated.pg_catalog.routines.Age5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.age as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> age5(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Age5 f = new test.generated.pg_catalog.routines.Age5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.age as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> age5(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Age5 f = new test.generated.pg_catalog.routines.Age5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.age
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer age1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Age1 f = new test.generated.pg_catalog.routines.Age1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.age as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> age1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Age1 f = new test.generated.pg_catalog.routines.Age1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.age as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> age1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Age1 f = new test.generated.pg_catalog.routines.Age1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.age
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object age2(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.Age2 f = new test.generated.pg_catalog.routines.Age2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.age as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> age2(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.Age2 f = new test.generated.pg_catalog.routines.Age2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.age as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> age2(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.Age2 f = new test.generated.pg_catalog.routines.Age2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.age
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object age4(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.Age4 f = new test.generated.pg_catalog.routines.Age4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.age as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> age4(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.Age4 f = new test.generated.pg_catalog.routines.Age4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.age as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> age4(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.Age4 f = new test.generated.pg_catalog.routines.Age4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.any_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object anyIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyIn f = new test.generated.pg_catalog.routines.AnyIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.any_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyIn f = new test.generated.pg_catalog.routines.AnyIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.any_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.AnyIn f = new test.generated.pg_catalog.routines.AnyIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.any_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object anyOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyOut f = new test.generated.pg_catalog.routines.AnyOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.any_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyOut f = new test.generated.pg_catalog.routines.AnyOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.any_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.AnyOut f = new test.generated.pg_catalog.routines.AnyOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.anyarray_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object anyarrayIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyarrayIn f = new test.generated.pg_catalog.routines.AnyarrayIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.anyarray_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyarrayIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyarrayIn f = new test.generated.pg_catalog.routines.AnyarrayIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.anyarray_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyarrayIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.AnyarrayIn f = new test.generated.pg_catalog.routines.AnyarrayIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.anyarray_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object anyarrayOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyarrayOut f = new test.generated.pg_catalog.routines.AnyarrayOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.anyarray_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyarrayOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyarrayOut f = new test.generated.pg_catalog.routines.AnyarrayOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.anyarray_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyarrayOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.AnyarrayOut f = new test.generated.pg_catalog.routines.AnyarrayOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.anyarray_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object anyarrayRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyarrayRecv f = new test.generated.pg_catalog.routines.AnyarrayRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.anyarray_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyarrayRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyarrayRecv f = new test.generated.pg_catalog.routines.AnyarrayRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.anyarray_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyarrayRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.AnyarrayRecv f = new test.generated.pg_catalog.routines.AnyarrayRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.anyarray_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] anyarraySend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyarraySend f = new test.generated.pg_catalog.routines.AnyarraySend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.anyarray_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> anyarraySend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyarraySend f = new test.generated.pg_catalog.routines.AnyarraySend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.anyarray_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> anyarraySend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.AnyarraySend f = new test.generated.pg_catalog.routines.AnyarraySend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.anyelement_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object anyelementIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyelementIn f = new test.generated.pg_catalog.routines.AnyelementIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.anyelement_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyelementIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyelementIn f = new test.generated.pg_catalog.routines.AnyelementIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.anyelement_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyelementIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.AnyelementIn f = new test.generated.pg_catalog.routines.AnyelementIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.anyelement_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object anyelementOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyelementOut f = new test.generated.pg_catalog.routines.AnyelementOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.anyelement_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyelementOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyelementOut f = new test.generated.pg_catalog.routines.AnyelementOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.anyelement_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyelementOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.AnyelementOut f = new test.generated.pg_catalog.routines.AnyelementOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.anyenum_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object anyenumIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyenumIn f = new test.generated.pg_catalog.routines.AnyenumIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.anyenum_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyenumIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyenumIn f = new test.generated.pg_catalog.routines.AnyenumIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.anyenum_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyenumIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.AnyenumIn f = new test.generated.pg_catalog.routines.AnyenumIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.anyenum_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object anyenumOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyenumOut f = new test.generated.pg_catalog.routines.AnyenumOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.anyenum_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyenumOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnyenumOut f = new test.generated.pg_catalog.routines.AnyenumOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.anyenum_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anyenumOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.AnyenumOut f = new test.generated.pg_catalog.routines.AnyenumOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.anynonarray_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object anynonarrayIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnynonarrayIn f = new test.generated.pg_catalog.routines.AnynonarrayIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.anynonarray_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anynonarrayIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnynonarrayIn f = new test.generated.pg_catalog.routines.AnynonarrayIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.anynonarray_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anynonarrayIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.AnynonarrayIn f = new test.generated.pg_catalog.routines.AnynonarrayIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.anynonarray_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object anynonarrayOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnynonarrayOut f = new test.generated.pg_catalog.routines.AnynonarrayOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.anynonarray_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anynonarrayOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.AnynonarrayOut f = new test.generated.pg_catalog.routines.AnynonarrayOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.anynonarray_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> anynonarrayOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.AnynonarrayOut f = new test.generated.pg_catalog.routines.AnynonarrayOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.anytextcat
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String anytextcat(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Anytextcat f = new test.generated.pg_catalog.routines.Anytextcat();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.anytextcat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> anytextcat(java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Anytextcat f = new test.generated.pg_catalog.routines.Anytextcat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.anytextcat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> anytextcat(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Anytextcat f = new test.generated.pg_catalog.routines.Anytextcat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.area
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double area1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Area1 f = new test.generated.pg_catalog.routines.Area1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.area as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> area1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Area1 f = new test.generated.pg_catalog.routines.Area1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.area as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> area1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Area1 f = new test.generated.pg_catalog.routines.Area1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.area
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double area3(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Area3 f = new test.generated.pg_catalog.routines.Area3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.area as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> area3(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Area3 f = new test.generated.pg_catalog.routines.Area3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.area as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> area3(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Area3 f = new test.generated.pg_catalog.routines.Area3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.area
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double area2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Area2 f = new test.generated.pg_catalog.routines.Area2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.area as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> area2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Area2 f = new test.generated.pg_catalog.routines.Area2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.area as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> area2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Area2 f = new test.generated.pg_catalog.routines.Area2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.areajoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double areajoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Areajoinsel f = new test.generated.pg_catalog.routines.Areajoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.areajoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> areajoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Areajoinsel f = new test.generated.pg_catalog.routines.Areajoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.areajoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> areajoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Areajoinsel f = new test.generated.pg_catalog.routines.Areajoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.areasel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double areasel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Areasel f = new test.generated.pg_catalog.routines.Areasel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.areasel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> areasel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Areasel f = new test.generated.pg_catalog.routines.Areasel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.areasel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> areasel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Areasel f = new test.generated.pg_catalog.routines.Areasel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_agg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arrayAgg(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.ArrayAgg f = new test.generated.pg_catalog.routines.ArrayAgg();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_agg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> arrayAgg(java.lang.Object __1) {
		test.generated.pg_catalog.routines.ArrayAgg f = new test.generated.pg_catalog.routines.ArrayAgg();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_agg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> arrayAgg(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.ArrayAgg f = new test.generated.pg_catalog.routines.ArrayAgg();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_agg_finalfn
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arrayAggFinalfn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.ArrayAggFinalfn f = new test.generated.pg_catalog.routines.ArrayAggFinalfn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_agg_finalfn as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> arrayAggFinalfn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.ArrayAggFinalfn f = new test.generated.pg_catalog.routines.ArrayAggFinalfn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_agg_finalfn as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> arrayAggFinalfn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.ArrayAggFinalfn f = new test.generated.pg_catalog.routines.ArrayAggFinalfn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_agg_transfn
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arrayAggTransfn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayAggTransfn f = new test.generated.pg_catalog.routines.ArrayAggTransfn();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_agg_transfn as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arrayAggTransfn(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayAggTransfn f = new test.generated.pg_catalog.routines.ArrayAggTransfn();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_agg_transfn as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arrayAggTransfn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ArrayAggTransfn f = new test.generated.pg_catalog.routines.ArrayAggTransfn();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_append
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arrayAppend(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayAppend f = new test.generated.pg_catalog.routines.ArrayAppend();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_append as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arrayAppend(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayAppend f = new test.generated.pg_catalog.routines.ArrayAppend();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_append as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arrayAppend(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ArrayAppend f = new test.generated.pg_catalog.routines.ArrayAppend();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_cat
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arrayCat(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayCat f = new test.generated.pg_catalog.routines.ArrayCat();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_cat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arrayCat(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayCat f = new test.generated.pg_catalog.routines.ArrayCat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_cat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arrayCat(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ArrayCat f = new test.generated.pg_catalog.routines.ArrayCat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_dims
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String arrayDims(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.ArrayDims f = new test.generated.pg_catalog.routines.ArrayDims();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_dims as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> arrayDims(java.lang.Object __1) {
		test.generated.pg_catalog.routines.ArrayDims f = new test.generated.pg_catalog.routines.ArrayDims();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_dims as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> arrayDims(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.ArrayDims f = new test.generated.pg_catalog.routines.ArrayDims();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean arrayEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayEq f = new test.generated.pg_catalog.routines.ArrayEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayEq f = new test.generated.pg_catalog.routines.ArrayEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ArrayEq f = new test.generated.pg_catalog.routines.ArrayEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_fill
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arrayFill2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer[] __2, java.lang.Integer[] __3) {
		test.generated.pg_catalog.routines.ArrayFill2 f = new test.generated.pg_catalog.routines.ArrayFill2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_fill as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> arrayFill2(java.lang.Object __1, java.lang.Integer[] __2, java.lang.Integer[] __3) {
		test.generated.pg_catalog.routines.ArrayFill2 f = new test.generated.pg_catalog.routines.ArrayFill2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_fill as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> arrayFill2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer[]> __2, org.jooq.Field<java.lang.Integer[]> __3) {
		test.generated.pg_catalog.routines.ArrayFill2 f = new test.generated.pg_catalog.routines.ArrayFill2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_fill
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arrayFill1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer[] __2) {
		test.generated.pg_catalog.routines.ArrayFill1 f = new test.generated.pg_catalog.routines.ArrayFill1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_fill as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arrayFill1(java.lang.Object __1, java.lang.Integer[] __2) {
		test.generated.pg_catalog.routines.ArrayFill1 f = new test.generated.pg_catalog.routines.ArrayFill1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_fill as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arrayFill1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer[]> __2) {
		test.generated.pg_catalog.routines.ArrayFill1 f = new test.generated.pg_catalog.routines.ArrayFill1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean arrayGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayGe f = new test.generated.pg_catalog.routines.ArrayGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayGe f = new test.generated.pg_catalog.routines.ArrayGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ArrayGe f = new test.generated.pg_catalog.routines.ArrayGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean arrayGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayGt f = new test.generated.pg_catalog.routines.ArrayGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayGt f = new test.generated.pg_catalog.routines.ArrayGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ArrayGt f = new test.generated.pg_catalog.routines.ArrayGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_in
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arrayIn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.ArrayIn f = new test.generated.pg_catalog.routines.ArrayIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> arrayIn(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.ArrayIn f = new test.generated.pg_catalog.routines.ArrayIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> arrayIn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.ArrayIn f = new test.generated.pg_catalog.routines.ArrayIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arrayLarger(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayLarger f = new test.generated.pg_catalog.routines.ArrayLarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arrayLarger(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayLarger f = new test.generated.pg_catalog.routines.ArrayLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arrayLarger(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ArrayLarger f = new test.generated.pg_catalog.routines.ArrayLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean arrayLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayLe f = new test.generated.pg_catalog.routines.ArrayLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayLe f = new test.generated.pg_catalog.routines.ArrayLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ArrayLe f = new test.generated.pg_catalog.routines.ArrayLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_length
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer arrayLength(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.ArrayLength f = new test.generated.pg_catalog.routines.ArrayLength();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_length as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> arrayLength(java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.ArrayLength f = new test.generated.pg_catalog.routines.ArrayLength();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_length as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> arrayLength(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.ArrayLength f = new test.generated.pg_catalog.routines.ArrayLength();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_lower
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer arrayLower(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.ArrayLower f = new test.generated.pg_catalog.routines.ArrayLower();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_lower as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> arrayLower(java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.ArrayLower f = new test.generated.pg_catalog.routines.ArrayLower();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_lower as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> arrayLower(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.ArrayLower f = new test.generated.pg_catalog.routines.ArrayLower();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean arrayLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayLt f = new test.generated.pg_catalog.routines.ArrayLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayLt f = new test.generated.pg_catalog.routines.ArrayLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ArrayLt f = new test.generated.pg_catalog.routines.ArrayLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_ndims
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer arrayNdims(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.ArrayNdims f = new test.generated.pg_catalog.routines.ArrayNdims();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_ndims as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> arrayNdims(java.lang.Object __1) {
		test.generated.pg_catalog.routines.ArrayNdims f = new test.generated.pg_catalog.routines.ArrayNdims();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_ndims as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> arrayNdims(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.ArrayNdims f = new test.generated.pg_catalog.routines.ArrayNdims();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean arrayNe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayNe f = new test.generated.pg_catalog.routines.ArrayNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayNe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayNe f = new test.generated.pg_catalog.routines.ArrayNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayNe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ArrayNe f = new test.generated.pg_catalog.routines.ArrayNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arrayOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.ArrayOut f = new test.generated.pg_catalog.routines.ArrayOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> arrayOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.ArrayOut f = new test.generated.pg_catalog.routines.ArrayOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> arrayOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.ArrayOut f = new test.generated.pg_catalog.routines.ArrayOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_prepend
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arrayPrepend(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayPrepend f = new test.generated.pg_catalog.routines.ArrayPrepend();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_prepend as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arrayPrepend(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArrayPrepend f = new test.generated.pg_catalog.routines.ArrayPrepend();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_prepend as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arrayPrepend(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ArrayPrepend f = new test.generated.pg_catalog.routines.ArrayPrepend();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_recv
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arrayRecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.ArrayRecv f = new test.generated.pg_catalog.routines.ArrayRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> arrayRecv(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.ArrayRecv f = new test.generated.pg_catalog.routines.ArrayRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> arrayRecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.ArrayRecv f = new test.generated.pg_catalog.routines.ArrayRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] arraySend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.ArraySend f = new test.generated.pg_catalog.routines.ArraySend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> arraySend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.ArraySend f = new test.generated.pg_catalog.routines.ArraySend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> arraySend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.ArraySend f = new test.generated.pg_catalog.routines.ArraySend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object arraySmaller(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArraySmaller f = new test.generated.pg_catalog.routines.ArraySmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arraySmaller(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ArraySmaller f = new test.generated.pg_catalog.routines.ArraySmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> arraySmaller(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ArraySmaller f = new test.generated.pg_catalog.routines.ArraySmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_to_string
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String arrayToString(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ArrayToString f = new test.generated.pg_catalog.routines.ArrayToString();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_to_string as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> arrayToString(java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ArrayToString f = new test.generated.pg_catalog.routines.ArrayToString();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_to_string as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> arrayToString(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ArrayToString f = new test.generated.pg_catalog.routines.ArrayToString();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.array_upper
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer arrayUpper(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.ArrayUpper f = new test.generated.pg_catalog.routines.ArrayUpper();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.array_upper as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> arrayUpper(java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.ArrayUpper f = new test.generated.pg_catalog.routines.ArrayUpper();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.array_upper as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> arrayUpper(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.ArrayUpper f = new test.generated.pg_catalog.routines.ArrayUpper();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.arraycontained
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean arraycontained(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Arraycontained f = new test.generated.pg_catalog.routines.Arraycontained();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.arraycontained as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arraycontained(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Arraycontained f = new test.generated.pg_catalog.routines.Arraycontained();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.arraycontained as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arraycontained(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Arraycontained f = new test.generated.pg_catalog.routines.Arraycontained();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.arraycontains
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean arraycontains(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Arraycontains f = new test.generated.pg_catalog.routines.Arraycontains();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.arraycontains as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arraycontains(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Arraycontains f = new test.generated.pg_catalog.routines.Arraycontains();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.arraycontains as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arraycontains(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Arraycontains f = new test.generated.pg_catalog.routines.Arraycontains();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.arrayoverlap
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean arrayoverlap(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Arrayoverlap f = new test.generated.pg_catalog.routines.Arrayoverlap();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.arrayoverlap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayoverlap(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Arrayoverlap f = new test.generated.pg_catalog.routines.Arrayoverlap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.arrayoverlap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> arrayoverlap(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Arrayoverlap f = new test.generated.pg_catalog.routines.Arrayoverlap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ascii
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer ascii(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Ascii f = new test.generated.pg_catalog.routines.Ascii();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ascii as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> ascii(java.lang.String __1) {
		test.generated.pg_catalog.routines.Ascii f = new test.generated.pg_catalog.routines.Ascii();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ascii as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> ascii(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Ascii f = new test.generated.pg_catalog.routines.Ascii();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ascii_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void asciiToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.AsciiToMic p = new test.generated.pg_catalog.routines.AsciiToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.ascii_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void asciiToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.AsciiToUtf8 p = new test.generated.pg_catalog.routines.AsciiToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.asin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double asin(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Asin f = new test.generated.pg_catalog.routines.Asin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.asin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> asin(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Asin f = new test.generated.pg_catalog.routines.Asin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.asin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> asin(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Asin f = new test.generated.pg_catalog.routines.Asin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.atan
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double atan(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Atan f = new test.generated.pg_catalog.routines.Atan();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.atan as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> atan(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Atan f = new test.generated.pg_catalog.routines.Atan();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.atan as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> atan(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Atan f = new test.generated.pg_catalog.routines.Atan();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.atan2
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double atan2(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Atan2 f = new test.generated.pg_catalog.routines.Atan2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.atan2 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> atan2(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Atan2 f = new test.generated.pg_catalog.routines.Atan2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.atan2 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> atan2(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Atan2 f = new test.generated.pg_catalog.routines.Atan2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.avg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double avg6(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Avg6 f = new test.generated.pg_catalog.routines.Avg6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> avg6(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Avg6 f = new test.generated.pg_catalog.routines.Avg6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> avg6(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Avg6 f = new test.generated.pg_catalog.routines.Avg6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.avg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double avg5(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Avg5 f = new test.generated.pg_catalog.routines.Avg5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> avg5(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Avg5 f = new test.generated.pg_catalog.routines.Avg5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> avg5(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Avg5 f = new test.generated.pg_catalog.routines.Avg5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.avg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal avg4(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Avg4 f = new test.generated.pg_catalog.routines.Avg4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> avg4(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Avg4 f = new test.generated.pg_catalog.routines.Avg4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> avg4(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Avg4 f = new test.generated.pg_catalog.routines.Avg4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.avg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object avg7(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Avg7 f = new test.generated.pg_catalog.routines.Avg7();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> avg7(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Avg7 f = new test.generated.pg_catalog.routines.Avg7();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> avg7(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Avg7 f = new test.generated.pg_catalog.routines.Avg7();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.avg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal avg2(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Avg2 f = new test.generated.pg_catalog.routines.Avg2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> avg2(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Avg2 f = new test.generated.pg_catalog.routines.Avg2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> avg2(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Avg2 f = new test.generated.pg_catalog.routines.Avg2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.avg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal avg1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Avg1 f = new test.generated.pg_catalog.routines.Avg1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> avg1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Avg1 f = new test.generated.pg_catalog.routines.Avg1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> avg1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Avg1 f = new test.generated.pg_catalog.routines.Avg1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.avg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal avg3(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Avg3 f = new test.generated.pg_catalog.routines.Avg3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> avg3(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Avg3 f = new test.generated.pg_catalog.routines.Avg3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> avg3(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Avg3 f = new test.generated.pg_catalog.routines.Avg3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.big5_to_euc_tw
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void big5ToEucTw(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Big5ToEucTw p = new test.generated.pg_catalog.routines.Big5ToEucTw();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.big5_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void big5ToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Big5ToMic p = new test.generated.pg_catalog.routines.Big5ToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.big5_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void big5ToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Big5ToUtf8 p = new test.generated.pg_catalog.routines.Big5ToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.bit
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bit3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Bit3 f = new test.generated.pg_catalog.routines.Bit3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bit3(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Bit3 f = new test.generated.pg_catalog.routines.Bit3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bit3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Bit3 f = new test.generated.pg_catalog.routines.Bit3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bit2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.Bit2 f = new test.generated.pg_catalog.routines.Bit2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> bit2(java.lang.String __1, java.lang.Integer __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.Bit2 f = new test.generated.pg_catalog.routines.Bit2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> bit2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Boolean> __3) {
		test.generated.pg_catalog.routines.Bit2 f = new test.generated.pg_catalog.routines.Bit2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bit1(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Bit1 f = new test.generated.pg_catalog.routines.Bit1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bit1(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Bit1 f = new test.generated.pg_catalog.routines.Bit1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bit1(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Bit1 f = new test.generated.pg_catalog.routines.Bit1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_and
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long bitAnd3(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.BitAnd3 f = new test.generated.pg_catalog.routines.BitAnd3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_and as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> bitAnd3(java.lang.Long __1) {
		test.generated.pg_catalog.routines.BitAnd3 f = new test.generated.pg_catalog.routines.BitAnd3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_and as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> bitAnd3(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.BitAnd3 f = new test.generated.pg_catalog.routines.BitAnd3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_and
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bitAnd4(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.BitAnd4 f = new test.generated.pg_catalog.routines.BitAnd4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_and as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> bitAnd4(java.lang.String __1) {
		test.generated.pg_catalog.routines.BitAnd4 f = new test.generated.pg_catalog.routines.BitAnd4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_and as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> bitAnd4(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.BitAnd4 f = new test.generated.pg_catalog.routines.BitAnd4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_and
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short bitAnd1(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.BitAnd1 f = new test.generated.pg_catalog.routines.BitAnd1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_and as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> bitAnd1(java.lang.Short __1) {
		test.generated.pg_catalog.routines.BitAnd1 f = new test.generated.pg_catalog.routines.BitAnd1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_and as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> bitAnd1(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.BitAnd1 f = new test.generated.pg_catalog.routines.BitAnd1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_and
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bitAnd2(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.BitAnd2 f = new test.generated.pg_catalog.routines.BitAnd2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_and as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bitAnd2(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.BitAnd2 f = new test.generated.pg_catalog.routines.BitAnd2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_and as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bitAnd2(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.BitAnd2 f = new test.generated.pg_catalog.routines.BitAnd2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_in
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bitIn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.BitIn f = new test.generated.pg_catalog.routines.BitIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> bitIn(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.BitIn f = new test.generated.pg_catalog.routines.BitIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> bitIn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.BitIn f = new test.generated.pg_catalog.routines.BitIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bitLength2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.BitLength2 f = new test.generated.pg_catalog.routines.BitLength2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bitLength2(java.lang.String __1) {
		test.generated.pg_catalog.routines.BitLength2 f = new test.generated.pg_catalog.routines.BitLength2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bitLength2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.BitLength2 f = new test.generated.pg_catalog.routines.BitLength2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bitLength3(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.BitLength3 f = new test.generated.pg_catalog.routines.BitLength3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bitLength3(java.lang.String __1) {
		test.generated.pg_catalog.routines.BitLength3 f = new test.generated.pg_catalog.routines.BitLength3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bitLength3(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.BitLength3 f = new test.generated.pg_catalog.routines.BitLength3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bitLength1(org.jooq.Configuration configuration, byte[] __1) {
		test.generated.pg_catalog.routines.BitLength1 f = new test.generated.pg_catalog.routines.BitLength1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bitLength1(byte[] __1) {
		test.generated.pg_catalog.routines.BitLength1 f = new test.generated.pg_catalog.routines.BitLength1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bitLength1(org.jooq.Field<byte[]> __1) {
		test.generated.pg_catalog.routines.BitLength1 f = new test.generated.pg_catalog.routines.BitLength1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_or
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short bitOr1(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.BitOr1 f = new test.generated.pg_catalog.routines.BitOr1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_or as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> bitOr1(java.lang.Short __1) {
		test.generated.pg_catalog.routines.BitOr1 f = new test.generated.pg_catalog.routines.BitOr1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_or as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> bitOr1(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.BitOr1 f = new test.generated.pg_catalog.routines.BitOr1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_or
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bitOr4(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.BitOr4 f = new test.generated.pg_catalog.routines.BitOr4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_or as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> bitOr4(java.lang.String __1) {
		test.generated.pg_catalog.routines.BitOr4 f = new test.generated.pg_catalog.routines.BitOr4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_or as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> bitOr4(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.BitOr4 f = new test.generated.pg_catalog.routines.BitOr4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_or
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long bitOr3(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.BitOr3 f = new test.generated.pg_catalog.routines.BitOr3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_or as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> bitOr3(java.lang.Long __1) {
		test.generated.pg_catalog.routines.BitOr3 f = new test.generated.pg_catalog.routines.BitOr3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_or as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> bitOr3(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.BitOr3 f = new test.generated.pg_catalog.routines.BitOr3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_or
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bitOr2(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.BitOr2 f = new test.generated.pg_catalog.routines.BitOr2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_or as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bitOr2(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.BitOr2 f = new test.generated.pg_catalog.routines.BitOr2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_or as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bitOr2(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.BitOr2 f = new test.generated.pg_catalog.routines.BitOr2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object bitOut(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.BitOut f = new test.generated.pg_catalog.routines.BitOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> bitOut(java.lang.String __1) {
		test.generated.pg_catalog.routines.BitOut f = new test.generated.pg_catalog.routines.BitOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> bitOut(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.BitOut f = new test.generated.pg_catalog.routines.BitOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_recv
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bitRecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.BitRecv f = new test.generated.pg_catalog.routines.BitRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> bitRecv(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.BitRecv f = new test.generated.pg_catalog.routines.BitRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> bitRecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.BitRecv f = new test.generated.pg_catalog.routines.BitRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bit_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] bitSend(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.BitSend f = new test.generated.pg_catalog.routines.BitSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bit_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> bitSend(java.lang.String __1) {
		test.generated.pg_catalog.routines.BitSend f = new test.generated.pg_catalog.routines.BitSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bit_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> bitSend(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.BitSend f = new test.generated.pg_catalog.routines.BitSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitand
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bitand(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitand f = new test.generated.pg_catalog.routines.Bitand();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitand as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bitand(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitand f = new test.generated.pg_catalog.routines.Bitand();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitand as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bitand(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bitand f = new test.generated.pg_catalog.routines.Bitand();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitcat
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bitcat(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitcat f = new test.generated.pg_catalog.routines.Bitcat();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitcat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bitcat(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitcat f = new test.generated.pg_catalog.routines.Bitcat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitcat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bitcat(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bitcat f = new test.generated.pg_catalog.routines.Bitcat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitcmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bitcmp(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitcmp f = new test.generated.pg_catalog.routines.Bitcmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> bitcmp(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitcmp f = new test.generated.pg_catalog.routines.Bitcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> bitcmp(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bitcmp f = new test.generated.pg_catalog.routines.Bitcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.biteq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean biteq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Biteq f = new test.generated.pg_catalog.routines.Biteq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.biteq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> biteq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Biteq f = new test.generated.pg_catalog.routines.Biteq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.biteq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> biteq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Biteq f = new test.generated.pg_catalog.routines.Biteq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bitge(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitge f = new test.generated.pg_catalog.routines.Bitge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bitge(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitge f = new test.generated.pg_catalog.routines.Bitge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bitge(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bitge f = new test.generated.pg_catalog.routines.Bitge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitgt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bitgt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitgt f = new test.generated.pg_catalog.routines.Bitgt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bitgt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitgt f = new test.generated.pg_catalog.routines.Bitgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bitgt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bitgt f = new test.generated.pg_catalog.routines.Bitgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitle
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bitle(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitle f = new test.generated.pg_catalog.routines.Bitle();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bitle(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitle f = new test.generated.pg_catalog.routines.Bitle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bitle(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bitle f = new test.generated.pg_catalog.routines.Bitle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitlt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bitlt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitlt f = new test.generated.pg_catalog.routines.Bitlt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bitlt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitlt f = new test.generated.pg_catalog.routines.Bitlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bitlt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bitlt f = new test.generated.pg_catalog.routines.Bitlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bitne(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitne f = new test.generated.pg_catalog.routines.Bitne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bitne(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitne f = new test.generated.pg_catalog.routines.Bitne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bitne(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bitne f = new test.generated.pg_catalog.routines.Bitne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitnot
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bitnot(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Bitnot f = new test.generated.pg_catalog.routines.Bitnot();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitnot as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> bitnot(java.lang.String __1) {
		test.generated.pg_catalog.routines.Bitnot f = new test.generated.pg_catalog.routines.Bitnot();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitnot as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> bitnot(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Bitnot f = new test.generated.pg_catalog.routines.Bitnot();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitor
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bitor(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitor f = new test.generated.pg_catalog.routines.Bitor();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitor as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bitor(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitor f = new test.generated.pg_catalog.routines.Bitor();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitor as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bitor(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bitor f = new test.generated.pg_catalog.routines.Bitor();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitshiftleft
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bitshiftleft(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Bitshiftleft f = new test.generated.pg_catalog.routines.Bitshiftleft();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitshiftleft as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bitshiftleft(java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Bitshiftleft f = new test.generated.pg_catalog.routines.Bitshiftleft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitshiftleft as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bitshiftleft(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Bitshiftleft f = new test.generated.pg_catalog.routines.Bitshiftleft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitshiftright
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bitshiftright(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Bitshiftright f = new test.generated.pg_catalog.routines.Bitshiftright();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitshiftright as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bitshiftright(java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Bitshiftright f = new test.generated.pg_catalog.routines.Bitshiftright();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitshiftright as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bitshiftright(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Bitshiftright f = new test.generated.pg_catalog.routines.Bitshiftright();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bittypmodin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bittypmodin(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Bittypmodin f = new test.generated.pg_catalog.routines.Bittypmodin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bittypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bittypmodin(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Bittypmodin f = new test.generated.pg_catalog.routines.Bittypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bittypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bittypmodin(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Bittypmodin f = new test.generated.pg_catalog.routines.Bittypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bittypmodout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object bittypmodout(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Bittypmodout f = new test.generated.pg_catalog.routines.Bittypmodout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bittypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> bittypmodout(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Bittypmodout f = new test.generated.pg_catalog.routines.Bittypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bittypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> bittypmodout(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Bittypmodout f = new test.generated.pg_catalog.routines.Bittypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bitxor
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bitxor(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitxor f = new test.generated.pg_catalog.routines.Bitxor();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bitxor as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bitxor(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bitxor f = new test.generated.pg_catalog.routines.Bitxor();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bitxor as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bitxor(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bitxor f = new test.generated.pg_catalog.routines.Bitxor();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bool
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bool(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Bool f = new test.generated.pg_catalog.routines.Bool();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bool as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> bool(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Bool f = new test.generated.pg_catalog.routines.Bool();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bool as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> bool(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Bool f = new test.generated.pg_catalog.routines.Bool();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bool_and
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boolAnd(org.jooq.Configuration configuration, java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.BoolAnd f = new test.generated.pg_catalog.routines.BoolAnd();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bool_and as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> boolAnd(java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.BoolAnd f = new test.generated.pg_catalog.routines.BoolAnd();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bool_and as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> boolAnd(org.jooq.Field<java.lang.Boolean> __1) {
		test.generated.pg_catalog.routines.BoolAnd f = new test.generated.pg_catalog.routines.BoolAnd();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bool_or
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boolOr(org.jooq.Configuration configuration, java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.BoolOr f = new test.generated.pg_catalog.routines.BoolOr();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bool_or as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> boolOr(java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.BoolOr f = new test.generated.pg_catalog.routines.BoolOr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bool_or as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> boolOr(org.jooq.Field<java.lang.Boolean> __1) {
		test.generated.pg_catalog.routines.BoolOr f = new test.generated.pg_catalog.routines.BoolOr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.booland_statefunc
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boolandStatefunc(org.jooq.Configuration configuration, java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.BoolandStatefunc f = new test.generated.pg_catalog.routines.BoolandStatefunc();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.booland_statefunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boolandStatefunc(java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.BoolandStatefunc f = new test.generated.pg_catalog.routines.BoolandStatefunc();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.booland_statefunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boolandStatefunc(org.jooq.Field<java.lang.Boolean> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.BoolandStatefunc f = new test.generated.pg_catalog.routines.BoolandStatefunc();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.booleq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean booleq(org.jooq.Configuration configuration, java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Booleq f = new test.generated.pg_catalog.routines.Booleq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.booleq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> booleq(java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Booleq f = new test.generated.pg_catalog.routines.Booleq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.booleq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> booleq(org.jooq.Field<java.lang.Boolean> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.Booleq f = new test.generated.pg_catalog.routines.Booleq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.boolge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boolge(org.jooq.Configuration configuration, java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Boolge f = new test.generated.pg_catalog.routines.Boolge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.boolge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boolge(java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Boolge f = new test.generated.pg_catalog.routines.Boolge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.boolge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boolge(org.jooq.Field<java.lang.Boolean> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.Boolge f = new test.generated.pg_catalog.routines.Boolge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.boolgt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boolgt(org.jooq.Configuration configuration, java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Boolgt f = new test.generated.pg_catalog.routines.Boolgt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.boolgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boolgt(java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Boolgt f = new test.generated.pg_catalog.routines.Boolgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.boolgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boolgt(org.jooq.Field<java.lang.Boolean> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.Boolgt f = new test.generated.pg_catalog.routines.Boolgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.boolin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boolin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Boolin f = new test.generated.pg_catalog.routines.Boolin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.boolin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> boolin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Boolin f = new test.generated.pg_catalog.routines.Boolin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.boolin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> boolin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Boolin f = new test.generated.pg_catalog.routines.Boolin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.boolle
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boolle(org.jooq.Configuration configuration, java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Boolle f = new test.generated.pg_catalog.routines.Boolle();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.boolle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boolle(java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Boolle f = new test.generated.pg_catalog.routines.Boolle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.boolle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boolle(org.jooq.Field<java.lang.Boolean> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.Boolle f = new test.generated.pg_catalog.routines.Boolle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.boollt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boollt(org.jooq.Configuration configuration, java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Boollt f = new test.generated.pg_catalog.routines.Boollt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.boollt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boollt(java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Boollt f = new test.generated.pg_catalog.routines.Boollt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.boollt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boollt(org.jooq.Field<java.lang.Boolean> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.Boollt f = new test.generated.pg_catalog.routines.Boollt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.boolne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boolne(org.jooq.Configuration configuration, java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Boolne f = new test.generated.pg_catalog.routines.Boolne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.boolne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boolne(java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Boolne f = new test.generated.pg_catalog.routines.Boolne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.boolne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boolne(org.jooq.Field<java.lang.Boolean> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.Boolne f = new test.generated.pg_catalog.routines.Boolne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.boolor_statefunc
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boolorStatefunc(org.jooq.Configuration configuration, java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.BoolorStatefunc f = new test.generated.pg_catalog.routines.BoolorStatefunc();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.boolor_statefunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boolorStatefunc(java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.BoolorStatefunc f = new test.generated.pg_catalog.routines.BoolorStatefunc();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.boolor_statefunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boolorStatefunc(org.jooq.Field<java.lang.Boolean> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.BoolorStatefunc f = new test.generated.pg_catalog.routines.BoolorStatefunc();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.boolout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object boolout(org.jooq.Configuration configuration, java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.Boolout f = new test.generated.pg_catalog.routines.Boolout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.boolout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> boolout(java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.Boolout f = new test.generated.pg_catalog.routines.Boolout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.boolout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> boolout(org.jooq.Field<java.lang.Boolean> __1) {
		test.generated.pg_catalog.routines.Boolout f = new test.generated.pg_catalog.routines.Boolout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.boolrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boolrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Boolrecv f = new test.generated.pg_catalog.routines.Boolrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.boolrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> boolrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Boolrecv f = new test.generated.pg_catalog.routines.Boolrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.boolrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> boolrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Boolrecv f = new test.generated.pg_catalog.routines.Boolrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.boolsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] boolsend(org.jooq.Configuration configuration, java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.Boolsend f = new test.generated.pg_catalog.routines.Boolsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.boolsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> boolsend(java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.Boolsend f = new test.generated.pg_catalog.routines.Boolsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.boolsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> boolsend(org.jooq.Field<java.lang.Boolean> __1) {
		test.generated.pg_catalog.routines.Boolsend f = new test.generated.pg_catalog.routines.Boolsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object box3(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Box3 f = new test.generated.pg_catalog.routines.Box3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> box3(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Box3 f = new test.generated.pg_catalog.routines.Box3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> box3(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Box3 f = new test.generated.pg_catalog.routines.Box3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object box1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Box1 f = new test.generated.pg_catalog.routines.Box1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> box1(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Box1 f = new test.generated.pg_catalog.routines.Box1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> box1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Box1 f = new test.generated.pg_catalog.routines.Box1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object box2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Box2 f = new test.generated.pg_catalog.routines.Box2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> box2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Box2 f = new test.generated.pg_catalog.routines.Box2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> box2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Box2 f = new test.generated.pg_catalog.routines.Box2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_above
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxAbove(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxAbove f = new test.generated.pg_catalog.routines.BoxAbove();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_above as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxAbove(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxAbove f = new test.generated.pg_catalog.routines.BoxAbove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_above as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxAbove(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxAbove f = new test.generated.pg_catalog.routines.BoxAbove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_above_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxAboveEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxAboveEq f = new test.generated.pg_catalog.routines.BoxAboveEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_above_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxAboveEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxAboveEq f = new test.generated.pg_catalog.routines.BoxAboveEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_above_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxAboveEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxAboveEq f = new test.generated.pg_catalog.routines.BoxAboveEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_add
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object boxAdd(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxAdd f = new test.generated.pg_catalog.routines.BoxAdd();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_add as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> boxAdd(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxAdd f = new test.generated.pg_catalog.routines.BoxAdd();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_add as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> boxAdd(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxAdd f = new test.generated.pg_catalog.routines.BoxAdd();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_below
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxBelow(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxBelow f = new test.generated.pg_catalog.routines.BoxBelow();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_below as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxBelow(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxBelow f = new test.generated.pg_catalog.routines.BoxBelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_below as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxBelow(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxBelow f = new test.generated.pg_catalog.routines.BoxBelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_below_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxBelowEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxBelowEq f = new test.generated.pg_catalog.routines.BoxBelowEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_below_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxBelowEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxBelowEq f = new test.generated.pg_catalog.routines.BoxBelowEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_below_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxBelowEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxBelowEq f = new test.generated.pg_catalog.routines.BoxBelowEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_center
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object boxCenter(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.BoxCenter f = new test.generated.pg_catalog.routines.BoxCenter();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> boxCenter(java.lang.Object __1) {
		test.generated.pg_catalog.routines.BoxCenter f = new test.generated.pg_catalog.routines.BoxCenter();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> boxCenter(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.BoxCenter f = new test.generated.pg_catalog.routines.BoxCenter();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_contain
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxContain(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxContain f = new test.generated.pg_catalog.routines.BoxContain();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_contain as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxContain(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxContain f = new test.generated.pg_catalog.routines.BoxContain();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_contain as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxContain(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxContain f = new test.generated.pg_catalog.routines.BoxContain();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_contain_pt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxContainPt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxContainPt f = new test.generated.pg_catalog.routines.BoxContainPt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_contain_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxContainPt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxContainPt f = new test.generated.pg_catalog.routines.BoxContainPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_contain_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxContainPt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxContainPt f = new test.generated.pg_catalog.routines.BoxContainPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_contained
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxContained(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxContained f = new test.generated.pg_catalog.routines.BoxContained();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_contained as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxContained(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxContained f = new test.generated.pg_catalog.routines.BoxContained();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_contained as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxContained(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxContained f = new test.generated.pg_catalog.routines.BoxContained();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_distance
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double boxDistance(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxDistance f = new test.generated.pg_catalog.routines.BoxDistance();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> boxDistance(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxDistance f = new test.generated.pg_catalog.routines.BoxDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> boxDistance(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxDistance f = new test.generated.pg_catalog.routines.BoxDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object boxDiv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxDiv f = new test.generated.pg_catalog.routines.BoxDiv();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> boxDiv(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxDiv f = new test.generated.pg_catalog.routines.BoxDiv();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> boxDiv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxDiv f = new test.generated.pg_catalog.routines.BoxDiv();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxEq f = new test.generated.pg_catalog.routines.BoxEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxEq f = new test.generated.pg_catalog.routines.BoxEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxEq f = new test.generated.pg_catalog.routines.BoxEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxGe f = new test.generated.pg_catalog.routines.BoxGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxGe f = new test.generated.pg_catalog.routines.BoxGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxGe f = new test.generated.pg_catalog.routines.BoxGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxGt f = new test.generated.pg_catalog.routines.BoxGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxGt f = new test.generated.pg_catalog.routines.BoxGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxGt f = new test.generated.pg_catalog.routines.BoxGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object boxIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.BoxIn f = new test.generated.pg_catalog.routines.BoxIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> boxIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.BoxIn f = new test.generated.pg_catalog.routines.BoxIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> boxIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.BoxIn f = new test.generated.pg_catalog.routines.BoxIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_intersect
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object boxIntersect(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxIntersect f = new test.generated.pg_catalog.routines.BoxIntersect();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_intersect as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> boxIntersect(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxIntersect f = new test.generated.pg_catalog.routines.BoxIntersect();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_intersect as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> boxIntersect(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxIntersect f = new test.generated.pg_catalog.routines.BoxIntersect();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxLe f = new test.generated.pg_catalog.routines.BoxLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxLe f = new test.generated.pg_catalog.routines.BoxLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxLe f = new test.generated.pg_catalog.routines.BoxLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_left
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxLeft(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxLeft f = new test.generated.pg_catalog.routines.BoxLeft();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_left as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxLeft(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxLeft f = new test.generated.pg_catalog.routines.BoxLeft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_left as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxLeft(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxLeft f = new test.generated.pg_catalog.routines.BoxLeft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxLt f = new test.generated.pg_catalog.routines.BoxLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxLt f = new test.generated.pg_catalog.routines.BoxLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxLt f = new test.generated.pg_catalog.routines.BoxLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object boxMul(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxMul f = new test.generated.pg_catalog.routines.BoxMul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> boxMul(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxMul f = new test.generated.pg_catalog.routines.BoxMul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> boxMul(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxMul f = new test.generated.pg_catalog.routines.BoxMul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object boxOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.BoxOut f = new test.generated.pg_catalog.routines.BoxOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> boxOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.BoxOut f = new test.generated.pg_catalog.routines.BoxOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> boxOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.BoxOut f = new test.generated.pg_catalog.routines.BoxOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_overabove
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxOverabove(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxOverabove f = new test.generated.pg_catalog.routines.BoxOverabove();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_overabove as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxOverabove(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxOverabove f = new test.generated.pg_catalog.routines.BoxOverabove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_overabove as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxOverabove(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxOverabove f = new test.generated.pg_catalog.routines.BoxOverabove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_overbelow
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxOverbelow(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxOverbelow f = new test.generated.pg_catalog.routines.BoxOverbelow();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_overbelow as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxOverbelow(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxOverbelow f = new test.generated.pg_catalog.routines.BoxOverbelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_overbelow as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxOverbelow(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxOverbelow f = new test.generated.pg_catalog.routines.BoxOverbelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_overlap
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxOverlap(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxOverlap f = new test.generated.pg_catalog.routines.BoxOverlap();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_overlap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxOverlap(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxOverlap f = new test.generated.pg_catalog.routines.BoxOverlap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_overlap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxOverlap(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxOverlap f = new test.generated.pg_catalog.routines.BoxOverlap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_overleft
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxOverleft(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxOverleft f = new test.generated.pg_catalog.routines.BoxOverleft();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_overleft as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxOverleft(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxOverleft f = new test.generated.pg_catalog.routines.BoxOverleft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_overleft as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxOverleft(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxOverleft f = new test.generated.pg_catalog.routines.BoxOverleft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_overright
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxOverright(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxOverright f = new test.generated.pg_catalog.routines.BoxOverright();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_overright as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxOverright(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxOverright f = new test.generated.pg_catalog.routines.BoxOverright();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_overright as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxOverright(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxOverright f = new test.generated.pg_catalog.routines.BoxOverright();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object boxRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.BoxRecv f = new test.generated.pg_catalog.routines.BoxRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> boxRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.BoxRecv f = new test.generated.pg_catalog.routines.BoxRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> boxRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.BoxRecv f = new test.generated.pg_catalog.routines.BoxRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_right
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxRight(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxRight f = new test.generated.pg_catalog.routines.BoxRight();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_right as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxRight(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxRight f = new test.generated.pg_catalog.routines.BoxRight();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_right as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxRight(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxRight f = new test.generated.pg_catalog.routines.BoxRight();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_same
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean boxSame(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxSame f = new test.generated.pg_catalog.routines.BoxSame();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_same as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxSame(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxSame f = new test.generated.pg_catalog.routines.BoxSame();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_same as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> boxSame(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxSame f = new test.generated.pg_catalog.routines.BoxSame();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] boxSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.BoxSend f = new test.generated.pg_catalog.routines.BoxSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> boxSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.BoxSend f = new test.generated.pg_catalog.routines.BoxSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> boxSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.BoxSend f = new test.generated.pg_catalog.routines.BoxSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.box_sub
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object boxSub(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxSub f = new test.generated.pg_catalog.routines.BoxSub();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.box_sub as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> boxSub(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.BoxSub f = new test.generated.pg_catalog.routines.BoxSub();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.box_sub as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> boxSub(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.BoxSub f = new test.generated.pg_catalog.routines.BoxSub();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchar
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bpchar3(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Bpchar3 f = new test.generated.pg_catalog.routines.Bpchar3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchar as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> bpchar3(java.lang.String __1) {
		test.generated.pg_catalog.routines.Bpchar3 f = new test.generated.pg_catalog.routines.Bpchar3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchar as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> bpchar3(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Bpchar3 f = new test.generated.pg_catalog.routines.Bpchar3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchar
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bpchar1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Bpchar1 f = new test.generated.pg_catalog.routines.Bpchar1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchar as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> bpchar1(java.lang.String __1) {
		test.generated.pg_catalog.routines.Bpchar1 f = new test.generated.pg_catalog.routines.Bpchar1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchar as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> bpchar1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Bpchar1 f = new test.generated.pg_catalog.routines.Bpchar1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchar
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bpchar2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.Bpchar2 f = new test.generated.pg_catalog.routines.Bpchar2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchar as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> bpchar2(java.lang.String __1, java.lang.Integer __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.Bpchar2 f = new test.generated.pg_catalog.routines.Bpchar2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchar as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> bpchar2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Boolean> __3) {
		test.generated.pg_catalog.routines.Bpchar2 f = new test.generated.pg_catalog.routines.Bpchar2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchar_larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bpcharLarger(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BpcharLarger f = new test.generated.pg_catalog.routines.BpcharLarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchar_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bpcharLarger(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BpcharLarger f = new test.generated.pg_catalog.routines.BpcharLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchar_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bpcharLarger(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.BpcharLarger f = new test.generated.pg_catalog.routines.BpcharLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchar_pattern_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharPatternGe(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BpcharPatternGe f = new test.generated.pg_catalog.routines.BpcharPatternGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchar_pattern_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharPatternGe(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BpcharPatternGe f = new test.generated.pg_catalog.routines.BpcharPatternGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchar_pattern_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharPatternGe(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.BpcharPatternGe f = new test.generated.pg_catalog.routines.BpcharPatternGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchar_pattern_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharPatternGt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BpcharPatternGt f = new test.generated.pg_catalog.routines.BpcharPatternGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchar_pattern_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharPatternGt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BpcharPatternGt f = new test.generated.pg_catalog.routines.BpcharPatternGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchar_pattern_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharPatternGt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.BpcharPatternGt f = new test.generated.pg_catalog.routines.BpcharPatternGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchar_pattern_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharPatternLe(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BpcharPatternLe f = new test.generated.pg_catalog.routines.BpcharPatternLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchar_pattern_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharPatternLe(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BpcharPatternLe f = new test.generated.pg_catalog.routines.BpcharPatternLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchar_pattern_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharPatternLe(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.BpcharPatternLe f = new test.generated.pg_catalog.routines.BpcharPatternLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchar_pattern_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharPatternLt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BpcharPatternLt f = new test.generated.pg_catalog.routines.BpcharPatternLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchar_pattern_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharPatternLt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BpcharPatternLt f = new test.generated.pg_catalog.routines.BpcharPatternLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchar_pattern_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharPatternLt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.BpcharPatternLt f = new test.generated.pg_catalog.routines.BpcharPatternLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchar_smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bpcharSmaller(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BpcharSmaller f = new test.generated.pg_catalog.routines.BpcharSmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchar_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bpcharSmaller(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BpcharSmaller f = new test.generated.pg_catalog.routines.BpcharSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchar_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> bpcharSmaller(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.BpcharSmaller f = new test.generated.pg_catalog.routines.BpcharSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharcmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bpcharcmp(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharcmp f = new test.generated.pg_catalog.routines.Bpcharcmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> bpcharcmp(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharcmp f = new test.generated.pg_catalog.routines.Bpcharcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> bpcharcmp(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpcharcmp f = new test.generated.pg_catalog.routines.Bpcharcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchareq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpchareq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpchareq f = new test.generated.pg_catalog.routines.Bpchareq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchareq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpchareq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpchareq f = new test.generated.pg_catalog.routines.Bpchareq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchareq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpchareq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpchareq f = new test.generated.pg_catalog.routines.Bpchareq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharge(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharge f = new test.generated.pg_catalog.routines.Bpcharge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharge(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharge f = new test.generated.pg_catalog.routines.Bpcharge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharge(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpcharge f = new test.generated.pg_catalog.routines.Bpcharge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchargt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpchargt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpchargt f = new test.generated.pg_catalog.routines.Bpchargt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchargt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpchargt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpchargt f = new test.generated.pg_catalog.routines.Bpchargt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchargt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpchargt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpchargt f = new test.generated.pg_catalog.routines.Bpchargt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchariclike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpchariclike(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpchariclike f = new test.generated.pg_catalog.routines.Bpchariclike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchariclike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpchariclike(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpchariclike f = new test.generated.pg_catalog.routines.Bpchariclike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchariclike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpchariclike(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpchariclike f = new test.generated.pg_catalog.routines.Bpchariclike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharicnlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharicnlike(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharicnlike f = new test.generated.pg_catalog.routines.Bpcharicnlike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharicnlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharicnlike(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharicnlike f = new test.generated.pg_catalog.routines.Bpcharicnlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharicnlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharicnlike(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpcharicnlike f = new test.generated.pg_catalog.routines.Bpcharicnlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharicregexeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharicregexeq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharicregexeq f = new test.generated.pg_catalog.routines.Bpcharicregexeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharicregexeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharicregexeq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharicregexeq f = new test.generated.pg_catalog.routines.Bpcharicregexeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharicregexeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharicregexeq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpcharicregexeq f = new test.generated.pg_catalog.routines.Bpcharicregexeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharicregexne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharicregexne(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharicregexne f = new test.generated.pg_catalog.routines.Bpcharicregexne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharicregexne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharicregexne(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharicregexne f = new test.generated.pg_catalog.routines.Bpcharicregexne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharicregexne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharicregexne(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpcharicregexne f = new test.generated.pg_catalog.routines.Bpcharicregexne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharin
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bpcharin(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Bpcharin f = new test.generated.pg_catalog.routines.Bpcharin();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharin as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> bpcharin(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Bpcharin f = new test.generated.pg_catalog.routines.Bpcharin();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharin as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> bpcharin(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.Bpcharin f = new test.generated.pg_catalog.routines.Bpcharin();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharle
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharle(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharle f = new test.generated.pg_catalog.routines.Bpcharle();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharle(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharle f = new test.generated.pg_catalog.routines.Bpcharle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharle(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpcharle f = new test.generated.pg_catalog.routines.Bpcharle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharlike(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharlike f = new test.generated.pg_catalog.routines.Bpcharlike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharlike(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharlike f = new test.generated.pg_catalog.routines.Bpcharlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharlike(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpcharlike f = new test.generated.pg_catalog.routines.Bpcharlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharlt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharlt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharlt f = new test.generated.pg_catalog.routines.Bpcharlt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharlt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharlt f = new test.generated.pg_catalog.routines.Bpcharlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharlt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpcharlt f = new test.generated.pg_catalog.routines.Bpcharlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharne(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharne f = new test.generated.pg_catalog.routines.Bpcharne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharne(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharne f = new test.generated.pg_catalog.routines.Bpcharne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharne(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpcharne f = new test.generated.pg_catalog.routines.Bpcharne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharnlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharnlike(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharnlike f = new test.generated.pg_catalog.routines.Bpcharnlike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharnlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharnlike(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharnlike f = new test.generated.pg_catalog.routines.Bpcharnlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharnlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharnlike(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpcharnlike f = new test.generated.pg_catalog.routines.Bpcharnlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object bpcharout(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Bpcharout f = new test.generated.pg_catalog.routines.Bpcharout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> bpcharout(java.lang.String __1) {
		test.generated.pg_catalog.routines.Bpcharout f = new test.generated.pg_catalog.routines.Bpcharout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> bpcharout(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Bpcharout f = new test.generated.pg_catalog.routines.Bpcharout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharrecv
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String bpcharrecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Bpcharrecv f = new test.generated.pg_catalog.routines.Bpcharrecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharrecv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> bpcharrecv(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Bpcharrecv f = new test.generated.pg_catalog.routines.Bpcharrecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharrecv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> bpcharrecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.Bpcharrecv f = new test.generated.pg_catalog.routines.Bpcharrecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharregexeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharregexeq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharregexeq f = new test.generated.pg_catalog.routines.Bpcharregexeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharregexeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharregexeq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharregexeq f = new test.generated.pg_catalog.routines.Bpcharregexeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharregexeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharregexeq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpcharregexeq f = new test.generated.pg_catalog.routines.Bpcharregexeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharregexne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bpcharregexne(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharregexne f = new test.generated.pg_catalog.routines.Bpcharregexne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharregexne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharregexne(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bpcharregexne f = new test.generated.pg_catalog.routines.Bpcharregexne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharregexne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bpcharregexne(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bpcharregexne f = new test.generated.pg_catalog.routines.Bpcharregexne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpcharsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] bpcharsend(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Bpcharsend f = new test.generated.pg_catalog.routines.Bpcharsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpcharsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> bpcharsend(java.lang.String __1) {
		test.generated.pg_catalog.routines.Bpcharsend f = new test.generated.pg_catalog.routines.Bpcharsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpcharsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> bpcharsend(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Bpcharsend f = new test.generated.pg_catalog.routines.Bpcharsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchartypmodin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bpchartypmodin(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Bpchartypmodin f = new test.generated.pg_catalog.routines.Bpchartypmodin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchartypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bpchartypmodin(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Bpchartypmodin f = new test.generated.pg_catalog.routines.Bpchartypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchartypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> bpchartypmodin(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Bpchartypmodin f = new test.generated.pg_catalog.routines.Bpchartypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bpchartypmodout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object bpchartypmodout(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Bpchartypmodout f = new test.generated.pg_catalog.routines.Bpchartypmodout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bpchartypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> bpchartypmodout(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Bpchartypmodout f = new test.generated.pg_catalog.routines.Bpchartypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bpchartypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> bpchartypmodout(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Bpchartypmodout f = new test.generated.pg_catalog.routines.Bpchartypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.broadcast
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object broadcast(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Broadcast f = new test.generated.pg_catalog.routines.Broadcast();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.broadcast as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> broadcast(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Broadcast f = new test.generated.pg_catalog.routines.Broadcast();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.broadcast as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> broadcast(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Broadcast f = new test.generated.pg_catalog.routines.Broadcast();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btabstimecmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btabstimecmp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btabstimecmp f = new test.generated.pg_catalog.routines.Btabstimecmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btabstimecmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btabstimecmp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btabstimecmp f = new test.generated.pg_catalog.routines.Btabstimecmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btabstimecmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btabstimecmp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Btabstimecmp f = new test.generated.pg_catalog.routines.Btabstimecmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btarraycmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btarraycmp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btarraycmp f = new test.generated.pg_catalog.routines.Btarraycmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btarraycmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btarraycmp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btarraycmp f = new test.generated.pg_catalog.routines.Btarraycmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btarraycmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btarraycmp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Btarraycmp f = new test.generated.pg_catalog.routines.Btarraycmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btbeginscan
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object btbeginscan(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Btbeginscan f = new test.generated.pg_catalog.routines.Btbeginscan();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btbeginscan as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> btbeginscan(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Btbeginscan f = new test.generated.pg_catalog.routines.Btbeginscan();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btbeginscan as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> btbeginscan(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.Btbeginscan f = new test.generated.pg_catalog.routines.Btbeginscan();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btboolcmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btboolcmp(org.jooq.Configuration configuration, java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Btboolcmp f = new test.generated.pg_catalog.routines.Btboolcmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btboolcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btboolcmp(java.lang.Boolean __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Btboolcmp f = new test.generated.pg_catalog.routines.Btboolcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btboolcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btboolcmp(org.jooq.Field<java.lang.Boolean> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.Btboolcmp f = new test.generated.pg_catalog.routines.Btboolcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btbpchar_pattern_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btbpcharPatternCmp(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BtbpcharPatternCmp f = new test.generated.pg_catalog.routines.BtbpcharPatternCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btbpchar_pattern_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btbpcharPatternCmp(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BtbpcharPatternCmp f = new test.generated.pg_catalog.routines.BtbpcharPatternCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btbpchar_pattern_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btbpcharPatternCmp(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.BtbpcharPatternCmp f = new test.generated.pg_catalog.routines.BtbpcharPatternCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btbuild
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object btbuild(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Btbuild f = new test.generated.pg_catalog.routines.Btbuild();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btbuild as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> btbuild(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Btbuild f = new test.generated.pg_catalog.routines.Btbuild();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btbuild as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> btbuild(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.Btbuild f = new test.generated.pg_catalog.routines.Btbuild();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btbulkdelete
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object btbulkdelete(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Btbulkdelete f = new test.generated.pg_catalog.routines.Btbulkdelete();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btbulkdelete as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> btbulkdelete(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Btbulkdelete f = new test.generated.pg_catalog.routines.Btbulkdelete();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btbulkdelete as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> btbulkdelete(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.Btbulkdelete f = new test.generated.pg_catalog.routines.Btbulkdelete();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btcharcmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btcharcmp(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Btcharcmp f = new test.generated.pg_catalog.routines.Btcharcmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btcharcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btcharcmp(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Btcharcmp f = new test.generated.pg_catalog.routines.Btcharcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btcharcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btcharcmp(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Btcharcmp f = new test.generated.pg_catalog.routines.Btcharcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btcostestimate
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @param __6 IN parameter
	 * @param __7 IN parameter
	 * @param __8 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void btcostestimate(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4, java.lang.Object __5, java.lang.Object __6, java.lang.Object __7, java.lang.Object __8) {
		test.generated.pg_catalog.routines.Btcostestimate p = new test.generated.pg_catalog.routines.Btcostestimate();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);
		p.set__6(__6);
		p.set__7(__7);
		p.set__8(__8);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.btendscan
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void btendscan(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Btendscan p = new test.generated.pg_catalog.routines.Btendscan();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.btfloat48cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btfloat48cmp(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Btfloat48cmp f = new test.generated.pg_catalog.routines.Btfloat48cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btfloat48cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btfloat48cmp(java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Btfloat48cmp f = new test.generated.pg_catalog.routines.Btfloat48cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btfloat48cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btfloat48cmp(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Btfloat48cmp f = new test.generated.pg_catalog.routines.Btfloat48cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btfloat4cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btfloat4cmp(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Btfloat4cmp f = new test.generated.pg_catalog.routines.Btfloat4cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btfloat4cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btfloat4cmp(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Btfloat4cmp f = new test.generated.pg_catalog.routines.Btfloat4cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btfloat4cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btfloat4cmp(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Btfloat4cmp f = new test.generated.pg_catalog.routines.Btfloat4cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btfloat84cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btfloat84cmp(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Btfloat84cmp f = new test.generated.pg_catalog.routines.Btfloat84cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btfloat84cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btfloat84cmp(java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Btfloat84cmp f = new test.generated.pg_catalog.routines.Btfloat84cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btfloat84cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btfloat84cmp(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Btfloat84cmp f = new test.generated.pg_catalog.routines.Btfloat84cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btfloat8cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btfloat8cmp(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Btfloat8cmp f = new test.generated.pg_catalog.routines.Btfloat8cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btfloat8cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btfloat8cmp(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Btfloat8cmp f = new test.generated.pg_catalog.routines.Btfloat8cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btfloat8cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btfloat8cmp(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Btfloat8cmp f = new test.generated.pg_catalog.routines.Btfloat8cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btgetbitmap
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long btgetbitmap(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btgetbitmap f = new test.generated.pg_catalog.routines.Btgetbitmap();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btgetbitmap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> btgetbitmap(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btgetbitmap f = new test.generated.pg_catalog.routines.Btgetbitmap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btgetbitmap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> btgetbitmap(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Btgetbitmap f = new test.generated.pg_catalog.routines.Btgetbitmap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btgettuple
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean btgettuple(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btgettuple f = new test.generated.pg_catalog.routines.Btgettuple();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btgettuple as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> btgettuple(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btgettuple f = new test.generated.pg_catalog.routines.Btgettuple();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btgettuple as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> btgettuple(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Btgettuple f = new test.generated.pg_catalog.routines.Btgettuple();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btinsert
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean btinsert(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4, java.lang.Object __5, java.lang.Object __6) {
		test.generated.pg_catalog.routines.Btinsert f = new test.generated.pg_catalog.routines.Btinsert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btinsert as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 */
	public static org.jooq.Field<java.lang.Boolean> btinsert(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4, java.lang.Object __5, java.lang.Object __6) {
		test.generated.pg_catalog.routines.Btinsert f = new test.generated.pg_catalog.routines.Btinsert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btinsert as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 */
	public static org.jooq.Field<java.lang.Boolean> btinsert(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4, org.jooq.Field<java.lang.Object> __5, org.jooq.Field<java.lang.Object> __6) {
		test.generated.pg_catalog.routines.Btinsert f = new test.generated.pg_catalog.routines.Btinsert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btint24cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btint24cmp(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Btint24cmp f = new test.generated.pg_catalog.routines.Btint24cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btint24cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint24cmp(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Btint24cmp f = new test.generated.pg_catalog.routines.Btint24cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btint24cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint24cmp(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Btint24cmp f = new test.generated.pg_catalog.routines.Btint24cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btint28cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btint28cmp(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Btint28cmp f = new test.generated.pg_catalog.routines.Btint28cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btint28cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint28cmp(java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Btint28cmp f = new test.generated.pg_catalog.routines.Btint28cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btint28cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint28cmp(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Btint28cmp f = new test.generated.pg_catalog.routines.Btint28cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btint2cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btint2cmp(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Btint2cmp f = new test.generated.pg_catalog.routines.Btint2cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btint2cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint2cmp(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Btint2cmp f = new test.generated.pg_catalog.routines.Btint2cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btint2cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint2cmp(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Btint2cmp f = new test.generated.pg_catalog.routines.Btint2cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btint42cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btint42cmp(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Btint42cmp f = new test.generated.pg_catalog.routines.Btint42cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btint42cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint42cmp(java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Btint42cmp f = new test.generated.pg_catalog.routines.Btint42cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btint42cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint42cmp(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Btint42cmp f = new test.generated.pg_catalog.routines.Btint42cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btint48cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btint48cmp(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Btint48cmp f = new test.generated.pg_catalog.routines.Btint48cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btint48cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint48cmp(java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Btint48cmp f = new test.generated.pg_catalog.routines.Btint48cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btint48cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint48cmp(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Btint48cmp f = new test.generated.pg_catalog.routines.Btint48cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btint4cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btint4cmp(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Btint4cmp f = new test.generated.pg_catalog.routines.Btint4cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btint4cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint4cmp(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Btint4cmp f = new test.generated.pg_catalog.routines.Btint4cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btint4cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint4cmp(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Btint4cmp f = new test.generated.pg_catalog.routines.Btint4cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btint82cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btint82cmp(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Btint82cmp f = new test.generated.pg_catalog.routines.Btint82cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btint82cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint82cmp(java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Btint82cmp f = new test.generated.pg_catalog.routines.Btint82cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btint82cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint82cmp(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Btint82cmp f = new test.generated.pg_catalog.routines.Btint82cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btint84cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btint84cmp(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Btint84cmp f = new test.generated.pg_catalog.routines.Btint84cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btint84cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint84cmp(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Btint84cmp f = new test.generated.pg_catalog.routines.Btint84cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btint84cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint84cmp(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Btint84cmp f = new test.generated.pg_catalog.routines.Btint84cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btint8cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btint8cmp(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Btint8cmp f = new test.generated.pg_catalog.routines.Btint8cmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btint8cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint8cmp(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Btint8cmp f = new test.generated.pg_catalog.routines.Btint8cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btint8cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btint8cmp(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Btint8cmp f = new test.generated.pg_catalog.routines.Btint8cmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btmarkpos
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void btmarkpos(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Btmarkpos p = new test.generated.pg_catalog.routines.Btmarkpos();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.btnamecmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btnamecmp(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Btnamecmp f = new test.generated.pg_catalog.routines.Btnamecmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btnamecmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btnamecmp(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Btnamecmp f = new test.generated.pg_catalog.routines.Btnamecmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btnamecmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btnamecmp(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Btnamecmp f = new test.generated.pg_catalog.routines.Btnamecmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btoidcmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btoidcmp(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Btoidcmp f = new test.generated.pg_catalog.routines.Btoidcmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btoidcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btoidcmp(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Btoidcmp f = new test.generated.pg_catalog.routines.Btoidcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btoidcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btoidcmp(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Btoidcmp f = new test.generated.pg_catalog.routines.Btoidcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btoidvectorcmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btoidvectorcmp(org.jooq.Configuration configuration, java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Btoidvectorcmp f = new test.generated.pg_catalog.routines.Btoidvectorcmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btoidvectorcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btoidvectorcmp(java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Btoidvectorcmp f = new test.generated.pg_catalog.routines.Btoidvectorcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btoidvectorcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btoidvectorcmp(org.jooq.Field<java.lang.Long[]> __1, org.jooq.Field<java.lang.Long[]> __2) {
		test.generated.pg_catalog.routines.Btoidvectorcmp f = new test.generated.pg_catalog.routines.Btoidvectorcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btoptions
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] btoptions(org.jooq.Configuration configuration, java.lang.String[] __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Btoptions f = new test.generated.pg_catalog.routines.Btoptions();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btoptions as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> btoptions(java.lang.String[] __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Btoptions f = new test.generated.pg_catalog.routines.Btoptions();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btoptions as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> btoptions(org.jooq.Field<java.lang.String[]> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.Btoptions f = new test.generated.pg_catalog.routines.Btoptions();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btrecordcmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btrecordcmp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btrecordcmp f = new test.generated.pg_catalog.routines.Btrecordcmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btrecordcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btrecordcmp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btrecordcmp f = new test.generated.pg_catalog.routines.Btrecordcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btrecordcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btrecordcmp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Btrecordcmp f = new test.generated.pg_catalog.routines.Btrecordcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btreltimecmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer btreltimecmp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btreltimecmp f = new test.generated.pg_catalog.routines.Btreltimecmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btreltimecmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btreltimecmp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btreltimecmp f = new test.generated.pg_catalog.routines.Btreltimecmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btreltimecmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> btreltimecmp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Btreltimecmp f = new test.generated.pg_catalog.routines.Btreltimecmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btrescan
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void btrescan(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btrescan p = new test.generated.pg_catalog.routines.Btrescan();
		p.set__1(__1);
		p.set__2(__2);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.btrestrpos
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void btrestrpos(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Btrestrpos p = new test.generated.pg_catalog.routines.Btrestrpos();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.btrim
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] btrim1(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Btrim1 f = new test.generated.pg_catalog.routines.Btrim1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btrim as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> btrim1(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Btrim1 f = new test.generated.pg_catalog.routines.Btrim1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btrim as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> btrim1(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Btrim1 f = new test.generated.pg_catalog.routines.Btrim1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btrim
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String btrim2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Btrim2 f = new test.generated.pg_catalog.routines.Btrim2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btrim as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> btrim2(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Btrim2 f = new test.generated.pg_catalog.routines.Btrim2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btrim as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> btrim2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Btrim2 f = new test.generated.pg_catalog.routines.Btrim2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btrim
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String btrim3(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Btrim3 f = new test.generated.pg_catalog.routines.Btrim3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btrim as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> btrim3(java.lang.String __1) {
		test.generated.pg_catalog.routines.Btrim3 f = new test.generated.pg_catalog.routines.Btrim3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btrim as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> btrim3(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Btrim3 f = new test.generated.pg_catalog.routines.Btrim3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bttext_pattern_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bttextPatternCmp(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BttextPatternCmp f = new test.generated.pg_catalog.routines.BttextPatternCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bttext_pattern_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> bttextPatternCmp(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.BttextPatternCmp f = new test.generated.pg_catalog.routines.BttextPatternCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bttext_pattern_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> bttextPatternCmp(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.BttextPatternCmp f = new test.generated.pg_catalog.routines.BttextPatternCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bttextcmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bttextcmp(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bttextcmp f = new test.generated.pg_catalog.routines.Bttextcmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bttextcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> bttextcmp(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Bttextcmp f = new test.generated.pg_catalog.routines.Bttextcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bttextcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> bttextcmp(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Bttextcmp f = new test.generated.pg_catalog.routines.Bttextcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bttidcmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bttidcmp(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Bttidcmp f = new test.generated.pg_catalog.routines.Bttidcmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bttidcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> bttidcmp(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Bttidcmp f = new test.generated.pg_catalog.routines.Bttidcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bttidcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> bttidcmp(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Bttidcmp f = new test.generated.pg_catalog.routines.Bttidcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bttintervalcmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer bttintervalcmp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Bttintervalcmp f = new test.generated.pg_catalog.routines.Bttintervalcmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bttintervalcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> bttintervalcmp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Bttintervalcmp f = new test.generated.pg_catalog.routines.Bttintervalcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bttintervalcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> bttintervalcmp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Bttintervalcmp f = new test.generated.pg_catalog.routines.Bttintervalcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.btvacuumcleanup
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object btvacuumcleanup(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btvacuumcleanup f = new test.generated.pg_catalog.routines.Btvacuumcleanup();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.btvacuumcleanup as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> btvacuumcleanup(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Btvacuumcleanup f = new test.generated.pg_catalog.routines.Btvacuumcleanup();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.btvacuumcleanup as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> btvacuumcleanup(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Btvacuumcleanup f = new test.generated.pg_catalog.routines.Btvacuumcleanup();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.byteacat
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] byteacat(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteacat f = new test.generated.pg_catalog.routines.Byteacat();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.byteacat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> byteacat(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteacat f = new test.generated.pg_catalog.routines.Byteacat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.byteacat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> byteacat(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Byteacat f = new test.generated.pg_catalog.routines.Byteacat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.byteacmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer byteacmp(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteacmp f = new test.generated.pg_catalog.routines.Byteacmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.byteacmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> byteacmp(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteacmp f = new test.generated.pg_catalog.routines.Byteacmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.byteacmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> byteacmp(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Byteacmp f = new test.generated.pg_catalog.routines.Byteacmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.byteaeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean byteaeq(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteaeq f = new test.generated.pg_catalog.routines.Byteaeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.byteaeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> byteaeq(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteaeq f = new test.generated.pg_catalog.routines.Byteaeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.byteaeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> byteaeq(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Byteaeq f = new test.generated.pg_catalog.routines.Byteaeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.byteage
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean byteage(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteage f = new test.generated.pg_catalog.routines.Byteage();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.byteage as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> byteage(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteage f = new test.generated.pg_catalog.routines.Byteage();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.byteage as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> byteage(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Byteage f = new test.generated.pg_catalog.routines.Byteage();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.byteagt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean byteagt(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteagt f = new test.generated.pg_catalog.routines.Byteagt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.byteagt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> byteagt(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteagt f = new test.generated.pg_catalog.routines.Byteagt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.byteagt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> byteagt(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Byteagt f = new test.generated.pg_catalog.routines.Byteagt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.byteain
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] byteain(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Byteain f = new test.generated.pg_catalog.routines.Byteain();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.byteain as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> byteain(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Byteain f = new test.generated.pg_catalog.routines.Byteain();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.byteain as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> byteain(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Byteain f = new test.generated.pg_catalog.routines.Byteain();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.byteale
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean byteale(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteale f = new test.generated.pg_catalog.routines.Byteale();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.byteale as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> byteale(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteale f = new test.generated.pg_catalog.routines.Byteale();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.byteale as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> byteale(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Byteale f = new test.generated.pg_catalog.routines.Byteale();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bytealike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bytealike(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Bytealike f = new test.generated.pg_catalog.routines.Bytealike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bytealike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bytealike(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Bytealike f = new test.generated.pg_catalog.routines.Bytealike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bytealike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bytealike(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Bytealike f = new test.generated.pg_catalog.routines.Bytealike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bytealt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean bytealt(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Bytealt f = new test.generated.pg_catalog.routines.Bytealt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bytealt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bytealt(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Bytealt f = new test.generated.pg_catalog.routines.Bytealt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bytealt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> bytealt(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Bytealt f = new test.generated.pg_catalog.routines.Bytealt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.byteane
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean byteane(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteane f = new test.generated.pg_catalog.routines.Byteane();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.byteane as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> byteane(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteane f = new test.generated.pg_catalog.routines.Byteane();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.byteane as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> byteane(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Byteane f = new test.generated.pg_catalog.routines.Byteane();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.byteanlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean byteanlike(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteanlike f = new test.generated.pg_catalog.routines.Byteanlike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.byteanlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> byteanlike(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Byteanlike f = new test.generated.pg_catalog.routines.Byteanlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.byteanlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> byteanlike(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Byteanlike f = new test.generated.pg_catalog.routines.Byteanlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.byteaout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object byteaout(org.jooq.Configuration configuration, byte[] __1) {
		test.generated.pg_catalog.routines.Byteaout f = new test.generated.pg_catalog.routines.Byteaout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.byteaout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> byteaout(byte[] __1) {
		test.generated.pg_catalog.routines.Byteaout f = new test.generated.pg_catalog.routines.Byteaout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.byteaout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> byteaout(org.jooq.Field<byte[]> __1) {
		test.generated.pg_catalog.routines.Byteaout f = new test.generated.pg_catalog.routines.Byteaout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.bytearecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] bytearecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Bytearecv f = new test.generated.pg_catalog.routines.Bytearecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.bytearecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> bytearecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Bytearecv f = new test.generated.pg_catalog.routines.Bytearecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.bytearecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> bytearecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Bytearecv f = new test.generated.pg_catalog.routines.Bytearecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.byteasend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] byteasend(org.jooq.Configuration configuration, byte[] __1) {
		test.generated.pg_catalog.routines.Byteasend f = new test.generated.pg_catalog.routines.Byteasend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.byteasend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> byteasend(byte[] __1) {
		test.generated.pg_catalog.routines.Byteasend f = new test.generated.pg_catalog.routines.Byteasend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.byteasend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> byteasend(org.jooq.Field<byte[]> __1) {
		test.generated.pg_catalog.routines.Byteasend f = new test.generated.pg_catalog.routines.Byteasend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer cashCmp(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashCmp f = new test.generated.pg_catalog.routines.CashCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> cashCmp(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashCmp f = new test.generated.pg_catalog.routines.CashCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> cashCmp(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.CashCmp f = new test.generated.pg_catalog.routines.CashCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_div_flt4
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashDivFlt4(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.CashDivFlt4 f = new test.generated.pg_catalog.routines.CashDivFlt4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_div_flt4 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashDivFlt4(java.math.BigDecimal __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.CashDivFlt4 f = new test.generated.pg_catalog.routines.CashDivFlt4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_div_flt4 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashDivFlt4(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.CashDivFlt4 f = new test.generated.pg_catalog.routines.CashDivFlt4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_div_flt8
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashDivFlt8(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.CashDivFlt8 f = new test.generated.pg_catalog.routines.CashDivFlt8();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_div_flt8 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashDivFlt8(java.math.BigDecimal __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.CashDivFlt8 f = new test.generated.pg_catalog.routines.CashDivFlt8();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_div_flt8 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashDivFlt8(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.CashDivFlt8 f = new test.generated.pg_catalog.routines.CashDivFlt8();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_div_int2
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashDivInt2(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.CashDivInt2 f = new test.generated.pg_catalog.routines.CashDivInt2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_div_int2 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashDivInt2(java.math.BigDecimal __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.CashDivInt2 f = new test.generated.pg_catalog.routines.CashDivInt2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_div_int2 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashDivInt2(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.CashDivInt2 f = new test.generated.pg_catalog.routines.CashDivInt2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_div_int4
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashDivInt4(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.CashDivInt4 f = new test.generated.pg_catalog.routines.CashDivInt4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_div_int4 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashDivInt4(java.math.BigDecimal __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.CashDivInt4 f = new test.generated.pg_catalog.routines.CashDivInt4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_div_int4 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashDivInt4(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.CashDivInt4 f = new test.generated.pg_catalog.routines.CashDivInt4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean cashEq(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashEq f = new test.generated.pg_catalog.routines.CashEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cashEq(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashEq f = new test.generated.pg_catalog.routines.CashEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cashEq(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.CashEq f = new test.generated.pg_catalog.routines.CashEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean cashGe(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashGe f = new test.generated.pg_catalog.routines.CashGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cashGe(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashGe f = new test.generated.pg_catalog.routines.CashGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cashGe(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.CashGe f = new test.generated.pg_catalog.routines.CashGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean cashGt(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashGt f = new test.generated.pg_catalog.routines.CashGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cashGt(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashGt f = new test.generated.pg_catalog.routines.CashGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cashGt(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.CashGt f = new test.generated.pg_catalog.routines.CashGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CashIn f = new test.generated.pg_catalog.routines.CashIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CashIn f = new test.generated.pg_catalog.routines.CashIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CashIn f = new test.generated.pg_catalog.routines.CashIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean cashLe(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashLe f = new test.generated.pg_catalog.routines.CashLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cashLe(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashLe f = new test.generated.pg_catalog.routines.CashLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cashLe(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.CashLe f = new test.generated.pg_catalog.routines.CashLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean cashLt(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashLt f = new test.generated.pg_catalog.routines.CashLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cashLt(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashLt f = new test.generated.pg_catalog.routines.CashLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cashLt(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.CashLt f = new test.generated.pg_catalog.routines.CashLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashMi(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashMi f = new test.generated.pg_catalog.routines.CashMi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashMi(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashMi f = new test.generated.pg_catalog.routines.CashMi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashMi(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.CashMi f = new test.generated.pg_catalog.routines.CashMi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_mul_flt4
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashMulFlt4(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.CashMulFlt4 f = new test.generated.pg_catalog.routines.CashMulFlt4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_mul_flt4 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashMulFlt4(java.math.BigDecimal __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.CashMulFlt4 f = new test.generated.pg_catalog.routines.CashMulFlt4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_mul_flt4 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashMulFlt4(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.CashMulFlt4 f = new test.generated.pg_catalog.routines.CashMulFlt4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_mul_flt8
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashMulFlt8(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.CashMulFlt8 f = new test.generated.pg_catalog.routines.CashMulFlt8();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_mul_flt8 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashMulFlt8(java.math.BigDecimal __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.CashMulFlt8 f = new test.generated.pg_catalog.routines.CashMulFlt8();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_mul_flt8 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashMulFlt8(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.CashMulFlt8 f = new test.generated.pg_catalog.routines.CashMulFlt8();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_mul_int2
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashMulInt2(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.CashMulInt2 f = new test.generated.pg_catalog.routines.CashMulInt2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_mul_int2 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashMulInt2(java.math.BigDecimal __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.CashMulInt2 f = new test.generated.pg_catalog.routines.CashMulInt2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_mul_int2 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashMulInt2(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.CashMulInt2 f = new test.generated.pg_catalog.routines.CashMulInt2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_mul_int4
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashMulInt4(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.CashMulInt4 f = new test.generated.pg_catalog.routines.CashMulInt4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_mul_int4 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashMulInt4(java.math.BigDecimal __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.CashMulInt4 f = new test.generated.pg_catalog.routines.CashMulInt4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_mul_int4 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashMulInt4(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.CashMulInt4 f = new test.generated.pg_catalog.routines.CashMulInt4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean cashNe(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashNe f = new test.generated.pg_catalog.routines.CashNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cashNe(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashNe f = new test.generated.pg_catalog.routines.CashNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cashNe(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.CashNe f = new test.generated.pg_catalog.routines.CashNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object cashOut(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.CashOut f = new test.generated.pg_catalog.routines.CashOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cashOut(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.CashOut f = new test.generated.pg_catalog.routines.CashOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cashOut(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.CashOut f = new test.generated.pg_catalog.routines.CashOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashPl(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashPl f = new test.generated.pg_catalog.routines.CashPl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashPl(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.CashPl f = new test.generated.pg_catalog.routines.CashPl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashPl(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.CashPl f = new test.generated.pg_catalog.routines.CashPl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CashRecv f = new test.generated.pg_catalog.routines.CashRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CashRecv f = new test.generated.pg_catalog.routines.CashRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CashRecv f = new test.generated.pg_catalog.routines.CashRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] cashSend(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.CashSend f = new test.generated.pg_catalog.routines.CashSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> cashSend(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.CashSend f = new test.generated.pg_catalog.routines.CashSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> cashSend(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.CashSend f = new test.generated.pg_catalog.routines.CashSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cash_words
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String cashWords(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.CashWords f = new test.generated.pg_catalog.routines.CashWords();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cash_words as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> cashWords(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.CashWords f = new test.generated.pg_catalog.routines.CashWords();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cash_words as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> cashWords(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.CashWords f = new test.generated.pg_catalog.routines.CashWords();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cashlarger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashlarger(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Cashlarger f = new test.generated.pg_catalog.routines.Cashlarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cashlarger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashlarger(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Cashlarger f = new test.generated.pg_catalog.routines.Cashlarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cashlarger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashlarger(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.Cashlarger f = new test.generated.pg_catalog.routines.Cashlarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cashsmaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal cashsmaller(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Cashsmaller f = new test.generated.pg_catalog.routines.Cashsmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cashsmaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashsmaller(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Cashsmaller f = new test.generated.pg_catalog.routines.Cashsmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cashsmaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> cashsmaller(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.Cashsmaller f = new test.generated.pg_catalog.routines.Cashsmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cbrt
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double cbrt(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Cbrt f = new test.generated.pg_catalog.routines.Cbrt();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cbrt as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> cbrt(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Cbrt f = new test.generated.pg_catalog.routines.Cbrt();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cbrt as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> cbrt(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Cbrt f = new test.generated.pg_catalog.routines.Cbrt();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ceil
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double ceil2(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Ceil2 f = new test.generated.pg_catalog.routines.Ceil2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ceil as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> ceil2(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Ceil2 f = new test.generated.pg_catalog.routines.Ceil2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ceil as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> ceil2(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Ceil2 f = new test.generated.pg_catalog.routines.Ceil2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ceil
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal ceil1(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Ceil1 f = new test.generated.pg_catalog.routines.Ceil1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ceil as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> ceil1(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Ceil1 f = new test.generated.pg_catalog.routines.Ceil1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ceil as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> ceil1(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Ceil1 f = new test.generated.pg_catalog.routines.Ceil1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ceiling
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double ceiling2(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Ceiling2 f = new test.generated.pg_catalog.routines.Ceiling2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ceiling as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> ceiling2(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Ceiling2 f = new test.generated.pg_catalog.routines.Ceiling2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ceiling as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> ceiling2(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Ceiling2 f = new test.generated.pg_catalog.routines.Ceiling2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ceiling
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal ceiling1(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Ceiling1 f = new test.generated.pg_catalog.routines.Ceiling1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ceiling as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> ceiling1(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Ceiling1 f = new test.generated.pg_catalog.routines.Ceiling1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ceiling as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> ceiling1(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Ceiling1 f = new test.generated.pg_catalog.routines.Ceiling1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.center
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object center1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Center1 f = new test.generated.pg_catalog.routines.Center1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> center1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Center1 f = new test.generated.pg_catalog.routines.Center1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> center1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Center1 f = new test.generated.pg_catalog.routines.Center1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.center
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object center2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Center2 f = new test.generated.pg_catalog.routines.Center2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> center2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Center2 f = new test.generated.pg_catalog.routines.Center2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> center2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Center2 f = new test.generated.pg_catalog.routines.Center2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.char
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String char2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Char2 f = new test.generated.pg_catalog.routines.Char2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.char as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> char2(java.lang.String __1) {
		test.generated.pg_catalog.routines.Char2 f = new test.generated.pg_catalog.routines.Char2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.char as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> char2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Char2 f = new test.generated.pg_catalog.routines.Char2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.char
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String char1(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Char1 f = new test.generated.pg_catalog.routines.Char1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.char as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> char1(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Char1 f = new test.generated.pg_catalog.routines.Char1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.char as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> char1(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Char1 f = new test.generated.pg_catalog.routines.Char1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.char_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer charLength2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.CharLength2 f = new test.generated.pg_catalog.routines.CharLength2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.char_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> charLength2(java.lang.String __1) {
		test.generated.pg_catalog.routines.CharLength2 f = new test.generated.pg_catalog.routines.CharLength2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.char_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> charLength2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.CharLength2 f = new test.generated.pg_catalog.routines.CharLength2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.char_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer charLength1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.CharLength1 f = new test.generated.pg_catalog.routines.CharLength1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.char_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> charLength1(java.lang.String __1) {
		test.generated.pg_catalog.routines.CharLength1 f = new test.generated.pg_catalog.routines.CharLength1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.char_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> charLength1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.CharLength1 f = new test.generated.pg_catalog.routines.CharLength1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.character_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer characterLength2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.CharacterLength2 f = new test.generated.pg_catalog.routines.CharacterLength2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.character_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> characterLength2(java.lang.String __1) {
		test.generated.pg_catalog.routines.CharacterLength2 f = new test.generated.pg_catalog.routines.CharacterLength2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.character_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> characterLength2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.CharacterLength2 f = new test.generated.pg_catalog.routines.CharacterLength2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.character_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer characterLength1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.CharacterLength1 f = new test.generated.pg_catalog.routines.CharacterLength1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.character_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> characterLength1(java.lang.String __1) {
		test.generated.pg_catalog.routines.CharacterLength1 f = new test.generated.pg_catalog.routines.CharacterLength1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.character_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> characterLength1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.CharacterLength1 f = new test.generated.pg_catalog.routines.CharacterLength1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.chareq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean chareq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Chareq f = new test.generated.pg_catalog.routines.Chareq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.chareq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> chareq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Chareq f = new test.generated.pg_catalog.routines.Chareq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.chareq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> chareq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Chareq f = new test.generated.pg_catalog.routines.Chareq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.charge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean charge(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Charge f = new test.generated.pg_catalog.routines.Charge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.charge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> charge(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Charge f = new test.generated.pg_catalog.routines.Charge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.charge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> charge(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Charge f = new test.generated.pg_catalog.routines.Charge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.chargt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean chargt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Chargt f = new test.generated.pg_catalog.routines.Chargt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.chargt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> chargt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Chargt f = new test.generated.pg_catalog.routines.Chargt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.chargt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> chargt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Chargt f = new test.generated.pg_catalog.routines.Chargt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.charin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String charin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Charin f = new test.generated.pg_catalog.routines.Charin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.charin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> charin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Charin f = new test.generated.pg_catalog.routines.Charin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.charin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> charin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Charin f = new test.generated.pg_catalog.routines.Charin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.charle
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean charle(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Charle f = new test.generated.pg_catalog.routines.Charle();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.charle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> charle(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Charle f = new test.generated.pg_catalog.routines.Charle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.charle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> charle(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Charle f = new test.generated.pg_catalog.routines.Charle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.charlt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean charlt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Charlt f = new test.generated.pg_catalog.routines.Charlt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.charlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> charlt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Charlt f = new test.generated.pg_catalog.routines.Charlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.charlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> charlt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Charlt f = new test.generated.pg_catalog.routines.Charlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.charne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean charne(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Charne f = new test.generated.pg_catalog.routines.Charne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.charne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> charne(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Charne f = new test.generated.pg_catalog.routines.Charne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.charne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> charne(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Charne f = new test.generated.pg_catalog.routines.Charne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.charout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object charout(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Charout f = new test.generated.pg_catalog.routines.Charout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.charout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> charout(java.lang.String __1) {
		test.generated.pg_catalog.routines.Charout f = new test.generated.pg_catalog.routines.Charout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.charout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> charout(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Charout f = new test.generated.pg_catalog.routines.Charout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.charrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String charrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Charrecv f = new test.generated.pg_catalog.routines.Charrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.charrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> charrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Charrecv f = new test.generated.pg_catalog.routines.Charrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.charrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> charrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Charrecv f = new test.generated.pg_catalog.routines.Charrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.charsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] charsend(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Charsend f = new test.generated.pg_catalog.routines.Charsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.charsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> charsend(java.lang.String __1) {
		test.generated.pg_catalog.routines.Charsend f = new test.generated.pg_catalog.routines.Charsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.charsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> charsend(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Charsend f = new test.generated.pg_catalog.routines.Charsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.chr
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String chr(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Chr f = new test.generated.pg_catalog.routines.Chr();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.chr as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> chr(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Chr f = new test.generated.pg_catalog.routines.Chr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.chr as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> chr(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Chr f = new test.generated.pg_catalog.routines.Chr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cideq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean cideq(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Cideq f = new test.generated.pg_catalog.routines.Cideq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cideq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cideq(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Cideq f = new test.generated.pg_catalog.routines.Cideq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cideq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> cideq(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Cideq f = new test.generated.pg_catalog.routines.Cideq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cidin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long cidin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Cidin f = new test.generated.pg_catalog.routines.Cidin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cidin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> cidin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Cidin f = new test.generated.pg_catalog.routines.Cidin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cidin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> cidin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Cidin f = new test.generated.pg_catalog.routines.Cidin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cidout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object cidout(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Cidout f = new test.generated.pg_catalog.routines.Cidout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cidout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cidout(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Cidout f = new test.generated.pg_catalog.routines.Cidout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cidout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cidout(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Cidout f = new test.generated.pg_catalog.routines.Cidout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cidr
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object cidr(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Cidr f = new test.generated.pg_catalog.routines.Cidr();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cidr as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cidr(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Cidr f = new test.generated.pg_catalog.routines.Cidr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cidr as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cidr(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Cidr f = new test.generated.pg_catalog.routines.Cidr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cidr_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object cidrIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CidrIn f = new test.generated.pg_catalog.routines.CidrIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cidr_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cidrIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CidrIn f = new test.generated.pg_catalog.routines.CidrIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cidr_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cidrIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CidrIn f = new test.generated.pg_catalog.routines.CidrIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cidr_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object cidrOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CidrOut f = new test.generated.pg_catalog.routines.CidrOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cidr_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cidrOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CidrOut f = new test.generated.pg_catalog.routines.CidrOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cidr_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cidrOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CidrOut f = new test.generated.pg_catalog.routines.CidrOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cidr_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object cidrRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CidrRecv f = new test.generated.pg_catalog.routines.CidrRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cidr_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cidrRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CidrRecv f = new test.generated.pg_catalog.routines.CidrRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cidr_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cidrRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CidrRecv f = new test.generated.pg_catalog.routines.CidrRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cidr_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] cidrSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CidrSend f = new test.generated.pg_catalog.routines.CidrSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cidr_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> cidrSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CidrSend f = new test.generated.pg_catalog.routines.CidrSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cidr_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> cidrSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CidrSend f = new test.generated.pg_catalog.routines.CidrSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cidrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long cidrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Cidrecv f = new test.generated.pg_catalog.routines.Cidrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cidrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> cidrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Cidrecv f = new test.generated.pg_catalog.routines.Cidrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cidrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> cidrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Cidrecv f = new test.generated.pg_catalog.routines.Cidrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cidsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] cidsend(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Cidsend f = new test.generated.pg_catalog.routines.Cidsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cidsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> cidsend(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Cidsend f = new test.generated.pg_catalog.routines.Cidsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cidsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> cidsend(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Cidsend f = new test.generated.pg_catalog.routines.Cidsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object circle1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Circle1 f = new test.generated.pg_catalog.routines.Circle1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> circle1(java.lang.Object __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Circle1 f = new test.generated.pg_catalog.routines.Circle1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> circle1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Circle1 f = new test.generated.pg_catalog.routines.Circle1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object circle2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Circle2 f = new test.generated.pg_catalog.routines.Circle2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> circle2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Circle2 f = new test.generated.pg_catalog.routines.Circle2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> circle2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Circle2 f = new test.generated.pg_catalog.routines.Circle2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object circle3(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Circle3 f = new test.generated.pg_catalog.routines.Circle3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> circle3(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Circle3 f = new test.generated.pg_catalog.routines.Circle3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> circle3(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Circle3 f = new test.generated.pg_catalog.routines.Circle3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_above
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleAbove(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleAbove f = new test.generated.pg_catalog.routines.CircleAbove();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_above as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleAbove(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleAbove f = new test.generated.pg_catalog.routines.CircleAbove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_above as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleAbove(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleAbove f = new test.generated.pg_catalog.routines.CircleAbove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_add_pt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object circleAddPt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleAddPt f = new test.generated.pg_catalog.routines.CircleAddPt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_add_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> circleAddPt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleAddPt f = new test.generated.pg_catalog.routines.CircleAddPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_add_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> circleAddPt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleAddPt f = new test.generated.pg_catalog.routines.CircleAddPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_below
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleBelow(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleBelow f = new test.generated.pg_catalog.routines.CircleBelow();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_below as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleBelow(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleBelow f = new test.generated.pg_catalog.routines.CircleBelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_below as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleBelow(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleBelow f = new test.generated.pg_catalog.routines.CircleBelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_center
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object circleCenter(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CircleCenter f = new test.generated.pg_catalog.routines.CircleCenter();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> circleCenter(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CircleCenter f = new test.generated.pg_catalog.routines.CircleCenter();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> circleCenter(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CircleCenter f = new test.generated.pg_catalog.routines.CircleCenter();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_contain
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleContain(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleContain f = new test.generated.pg_catalog.routines.CircleContain();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_contain as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleContain(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleContain f = new test.generated.pg_catalog.routines.CircleContain();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_contain as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleContain(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleContain f = new test.generated.pg_catalog.routines.CircleContain();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_contain_pt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleContainPt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleContainPt f = new test.generated.pg_catalog.routines.CircleContainPt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_contain_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleContainPt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleContainPt f = new test.generated.pg_catalog.routines.CircleContainPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_contain_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleContainPt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleContainPt f = new test.generated.pg_catalog.routines.CircleContainPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_contained
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleContained(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleContained f = new test.generated.pg_catalog.routines.CircleContained();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_contained as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleContained(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleContained f = new test.generated.pg_catalog.routines.CircleContained();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_contained as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleContained(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleContained f = new test.generated.pg_catalog.routines.CircleContained();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_distance
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double circleDistance(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleDistance f = new test.generated.pg_catalog.routines.CircleDistance();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> circleDistance(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleDistance f = new test.generated.pg_catalog.routines.CircleDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> circleDistance(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleDistance f = new test.generated.pg_catalog.routines.CircleDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_div_pt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object circleDivPt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleDivPt f = new test.generated.pg_catalog.routines.CircleDivPt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_div_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> circleDivPt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleDivPt f = new test.generated.pg_catalog.routines.CircleDivPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_div_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> circleDivPt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleDivPt f = new test.generated.pg_catalog.routines.CircleDivPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleEq f = new test.generated.pg_catalog.routines.CircleEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleEq f = new test.generated.pg_catalog.routines.CircleEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleEq f = new test.generated.pg_catalog.routines.CircleEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleGe f = new test.generated.pg_catalog.routines.CircleGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleGe f = new test.generated.pg_catalog.routines.CircleGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleGe f = new test.generated.pg_catalog.routines.CircleGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleGt f = new test.generated.pg_catalog.routines.CircleGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleGt f = new test.generated.pg_catalog.routines.CircleGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleGt f = new test.generated.pg_catalog.routines.CircleGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object circleIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CircleIn f = new test.generated.pg_catalog.routines.CircleIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> circleIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CircleIn f = new test.generated.pg_catalog.routines.CircleIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> circleIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CircleIn f = new test.generated.pg_catalog.routines.CircleIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleLe f = new test.generated.pg_catalog.routines.CircleLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleLe f = new test.generated.pg_catalog.routines.CircleLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleLe f = new test.generated.pg_catalog.routines.CircleLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_left
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleLeft(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleLeft f = new test.generated.pg_catalog.routines.CircleLeft();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_left as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleLeft(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleLeft f = new test.generated.pg_catalog.routines.CircleLeft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_left as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleLeft(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleLeft f = new test.generated.pg_catalog.routines.CircleLeft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleLt f = new test.generated.pg_catalog.routines.CircleLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleLt f = new test.generated.pg_catalog.routines.CircleLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleLt f = new test.generated.pg_catalog.routines.CircleLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_mul_pt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object circleMulPt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleMulPt f = new test.generated.pg_catalog.routines.CircleMulPt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_mul_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> circleMulPt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleMulPt f = new test.generated.pg_catalog.routines.CircleMulPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_mul_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> circleMulPt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleMulPt f = new test.generated.pg_catalog.routines.CircleMulPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleNe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleNe f = new test.generated.pg_catalog.routines.CircleNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleNe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleNe f = new test.generated.pg_catalog.routines.CircleNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleNe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleNe f = new test.generated.pg_catalog.routines.CircleNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object circleOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CircleOut f = new test.generated.pg_catalog.routines.CircleOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> circleOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CircleOut f = new test.generated.pg_catalog.routines.CircleOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> circleOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CircleOut f = new test.generated.pg_catalog.routines.CircleOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_overabove
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleOverabove(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleOverabove f = new test.generated.pg_catalog.routines.CircleOverabove();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_overabove as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleOverabove(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleOverabove f = new test.generated.pg_catalog.routines.CircleOverabove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_overabove as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleOverabove(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleOverabove f = new test.generated.pg_catalog.routines.CircleOverabove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_overbelow
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleOverbelow(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleOverbelow f = new test.generated.pg_catalog.routines.CircleOverbelow();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_overbelow as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleOverbelow(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleOverbelow f = new test.generated.pg_catalog.routines.CircleOverbelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_overbelow as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleOverbelow(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleOverbelow f = new test.generated.pg_catalog.routines.CircleOverbelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_overlap
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleOverlap(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleOverlap f = new test.generated.pg_catalog.routines.CircleOverlap();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_overlap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleOverlap(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleOverlap f = new test.generated.pg_catalog.routines.CircleOverlap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_overlap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleOverlap(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleOverlap f = new test.generated.pg_catalog.routines.CircleOverlap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_overleft
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleOverleft(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleOverleft f = new test.generated.pg_catalog.routines.CircleOverleft();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_overleft as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleOverleft(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleOverleft f = new test.generated.pg_catalog.routines.CircleOverleft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_overleft as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleOverleft(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleOverleft f = new test.generated.pg_catalog.routines.CircleOverleft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_overright
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleOverright(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleOverright f = new test.generated.pg_catalog.routines.CircleOverright();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_overright as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleOverright(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleOverright f = new test.generated.pg_catalog.routines.CircleOverright();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_overright as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleOverright(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleOverright f = new test.generated.pg_catalog.routines.CircleOverright();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object circleRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CircleRecv f = new test.generated.pg_catalog.routines.CircleRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> circleRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CircleRecv f = new test.generated.pg_catalog.routines.CircleRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> circleRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CircleRecv f = new test.generated.pg_catalog.routines.CircleRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_right
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleRight(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleRight f = new test.generated.pg_catalog.routines.CircleRight();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_right as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleRight(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleRight f = new test.generated.pg_catalog.routines.CircleRight();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_right as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleRight(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleRight f = new test.generated.pg_catalog.routines.CircleRight();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_same
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean circleSame(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleSame f = new test.generated.pg_catalog.routines.CircleSame();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_same as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleSame(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleSame f = new test.generated.pg_catalog.routines.CircleSame();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_same as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> circleSame(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleSame f = new test.generated.pg_catalog.routines.CircleSame();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] circleSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CircleSend f = new test.generated.pg_catalog.routines.CircleSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> circleSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CircleSend f = new test.generated.pg_catalog.routines.CircleSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> circleSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CircleSend f = new test.generated.pg_catalog.routines.CircleSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.circle_sub_pt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object circleSubPt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleSubPt f = new test.generated.pg_catalog.routines.CircleSubPt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.circle_sub_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> circleSubPt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CircleSubPt f = new test.generated.pg_catalog.routines.CircleSubPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.circle_sub_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> circleSubPt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CircleSubPt f = new test.generated.pg_catalog.routines.CircleSubPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.clock_timestamp
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp clockTimestamp(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.ClockTimestamp f = new test.generated.pg_catalog.routines.ClockTimestamp();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.clock_timestamp as a field
	 *
	 */
	public static org.jooq.Field<java.sql.Timestamp> clockTimestamp() {
		test.generated.pg_catalog.routines.ClockTimestamp f = new test.generated.pg_catalog.routines.ClockTimestamp();

		return f.asField();
	}

	/**
	 * Call pg_catalog.close_lb
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object closeLb(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CloseLb f = new test.generated.pg_catalog.routines.CloseLb();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.close_lb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closeLb(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CloseLb f = new test.generated.pg_catalog.routines.CloseLb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.close_lb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closeLb(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CloseLb f = new test.generated.pg_catalog.routines.CloseLb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.close_ls
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object closeLs(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CloseLs f = new test.generated.pg_catalog.routines.CloseLs();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.close_ls as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closeLs(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CloseLs f = new test.generated.pg_catalog.routines.CloseLs();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.close_ls as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closeLs(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CloseLs f = new test.generated.pg_catalog.routines.CloseLs();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.close_lseg
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object closeLseg(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CloseLseg f = new test.generated.pg_catalog.routines.CloseLseg();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.close_lseg as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closeLseg(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CloseLseg f = new test.generated.pg_catalog.routines.CloseLseg();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.close_lseg as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closeLseg(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CloseLseg f = new test.generated.pg_catalog.routines.CloseLseg();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.close_pb
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object closePb(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ClosePb f = new test.generated.pg_catalog.routines.ClosePb();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.close_pb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closePb(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ClosePb f = new test.generated.pg_catalog.routines.ClosePb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.close_pb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closePb(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ClosePb f = new test.generated.pg_catalog.routines.ClosePb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.close_pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object closePl(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ClosePl f = new test.generated.pg_catalog.routines.ClosePl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.close_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closePl(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ClosePl f = new test.generated.pg_catalog.routines.ClosePl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.close_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closePl(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ClosePl f = new test.generated.pg_catalog.routines.ClosePl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.close_ps
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object closePs(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ClosePs f = new test.generated.pg_catalog.routines.ClosePs();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.close_ps as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closePs(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.ClosePs f = new test.generated.pg_catalog.routines.ClosePs();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.close_ps as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closePs(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.ClosePs f = new test.generated.pg_catalog.routines.ClosePs();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.close_sb
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object closeSb(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CloseSb f = new test.generated.pg_catalog.routines.CloseSb();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.close_sb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closeSb(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CloseSb f = new test.generated.pg_catalog.routines.CloseSb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.close_sb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closeSb(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CloseSb f = new test.generated.pg_catalog.routines.CloseSb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.close_sl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object closeSl(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CloseSl f = new test.generated.pg_catalog.routines.CloseSl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.close_sl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closeSl(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.CloseSl f = new test.generated.pg_catalog.routines.CloseSl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.close_sl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> closeSl(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.CloseSl f = new test.generated.pg_catalog.routines.CloseSl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.col_description
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String colDescription(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.ColDescription f = new test.generated.pg_catalog.routines.ColDescription();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.col_description as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> colDescription(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.ColDescription f = new test.generated.pg_catalog.routines.ColDescription();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.col_description as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> colDescription(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.ColDescription f = new test.generated.pg_catalog.routines.ColDescription();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.contjoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double contjoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Contjoinsel f = new test.generated.pg_catalog.routines.Contjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.contjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> contjoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Contjoinsel f = new test.generated.pg_catalog.routines.Contjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.contjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> contjoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Contjoinsel f = new test.generated.pg_catalog.routines.Contjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.contsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double contsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Contsel f = new test.generated.pg_catalog.routines.Contsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.contsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> contsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Contsel f = new test.generated.pg_catalog.routines.Contsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.contsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> contsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Contsel f = new test.generated.pg_catalog.routines.Contsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.convert
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] convert(org.jooq.Configuration configuration, byte[] __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.Convert f = new test.generated.pg_catalog.routines.Convert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.convert as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<byte[]> convert(byte[] __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.Convert f = new test.generated.pg_catalog.routines.Convert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.convert as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<byte[]> convert(org.jooq.Field<byte[]> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.Convert f = new test.generated.pg_catalog.routines.Convert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.convert_from
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String convertFrom(org.jooq.Configuration configuration, byte[] __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ConvertFrom f = new test.generated.pg_catalog.routines.ConvertFrom();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.convert_from as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> convertFrom(byte[] __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ConvertFrom f = new test.generated.pg_catalog.routines.ConvertFrom();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.convert_from as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> convertFrom(org.jooq.Field<byte[]> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ConvertFrom f = new test.generated.pg_catalog.routines.ConvertFrom();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.convert_to
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] convertTo(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ConvertTo f = new test.generated.pg_catalog.routines.ConvertTo();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.convert_to as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> convertTo(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ConvertTo f = new test.generated.pg_catalog.routines.ConvertTo();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.convert_to as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> convertTo(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ConvertTo f = new test.generated.pg_catalog.routines.ConvertTo();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.corr
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double corr(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Corr f = new test.generated.pg_catalog.routines.Corr();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.corr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> corr(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Corr f = new test.generated.pg_catalog.routines.Corr();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.corr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> corr(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Corr f = new test.generated.pg_catalog.routines.Corr();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cos
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double cos(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Cos f = new test.generated.pg_catalog.routines.Cos();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cos as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> cos(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Cos f = new test.generated.pg_catalog.routines.Cos();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cos as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> cos(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Cos f = new test.generated.pg_catalog.routines.Cos();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cot
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double cot(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Cot f = new test.generated.pg_catalog.routines.Cot();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cot as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> cot(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Cot f = new test.generated.pg_catalog.routines.Cot();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cot as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> cot(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Cot f = new test.generated.pg_catalog.routines.Cot();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.count
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long count1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Count1 f = new test.generated.pg_catalog.routines.Count1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.count as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> count1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Count1 f = new test.generated.pg_catalog.routines.Count1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.count as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> count1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Count1 f = new test.generated.pg_catalog.routines.Count1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.count
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long count2(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.Count2 f = new test.generated.pg_catalog.routines.Count2();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.count as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> count2() {
		test.generated.pg_catalog.routines.Count2 f = new test.generated.pg_catalog.routines.Count2();

		return f.asField();
	}

	/**
	 * Call pg_catalog.covar_pop
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double covarPop(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.CovarPop f = new test.generated.pg_catalog.routines.CovarPop();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.covar_pop as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> covarPop(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.CovarPop f = new test.generated.pg_catalog.routines.CovarPop();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.covar_pop as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> covarPop(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.CovarPop f = new test.generated.pg_catalog.routines.CovarPop();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.covar_samp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double covarSamp(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.CovarSamp f = new test.generated.pg_catalog.routines.CovarSamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.covar_samp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> covarSamp(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.CovarSamp f = new test.generated.pg_catalog.routines.CovarSamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.covar_samp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> covarSamp(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.CovarSamp f = new test.generated.pg_catalog.routines.CovarSamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cstring_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object cstringIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CstringIn f = new test.generated.pg_catalog.routines.CstringIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cstring_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cstringIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CstringIn f = new test.generated.pg_catalog.routines.CstringIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cstring_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cstringIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CstringIn f = new test.generated.pg_catalog.routines.CstringIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cstring_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object cstringOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CstringOut f = new test.generated.pg_catalog.routines.CstringOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cstring_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cstringOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CstringOut f = new test.generated.pg_catalog.routines.CstringOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cstring_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cstringOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CstringOut f = new test.generated.pg_catalog.routines.CstringOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cstring_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object cstringRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CstringRecv f = new test.generated.pg_catalog.routines.CstringRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cstring_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cstringRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CstringRecv f = new test.generated.pg_catalog.routines.CstringRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cstring_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> cstringRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CstringRecv f = new test.generated.pg_catalog.routines.CstringRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cstring_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] cstringSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.CstringSend f = new test.generated.pg_catalog.routines.CstringSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cstring_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> cstringSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.CstringSend f = new test.generated.pg_catalog.routines.CstringSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cstring_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> cstringSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.CstringSend f = new test.generated.pg_catalog.routines.CstringSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cume_dist
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double cumeDist(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.CumeDist f = new test.generated.pg_catalog.routines.CumeDist();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cume_dist as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Double> cumeDist() {
		test.generated.pg_catalog.routines.CumeDist f = new test.generated.pg_catalog.routines.CumeDist();

		return f.asField();
	}

	/**
	 * Call pg_catalog.current_database
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String currentDatabase(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.CurrentDatabase f = new test.generated.pg_catalog.routines.CurrentDatabase();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.current_database as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> currentDatabase() {
		test.generated.pg_catalog.routines.CurrentDatabase f = new test.generated.pg_catalog.routines.CurrentDatabase();

		return f.asField();
	}

	/**
	 * Call pg_catalog.current_query
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String currentQuery(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.CurrentQuery f = new test.generated.pg_catalog.routines.CurrentQuery();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.current_query as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> currentQuery() {
		test.generated.pg_catalog.routines.CurrentQuery f = new test.generated.pg_catalog.routines.CurrentQuery();

		return f.asField();
	}

	/**
	 * Call pg_catalog.current_schema
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String currentSchema(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.CurrentSchema f = new test.generated.pg_catalog.routines.CurrentSchema();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.current_schema as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> currentSchema() {
		test.generated.pg_catalog.routines.CurrentSchema f = new test.generated.pg_catalog.routines.CurrentSchema();

		return f.asField();
	}

	/**
	 * Call pg_catalog.current_schemas
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String[] currentSchemas(org.jooq.Configuration configuration, java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.CurrentSchemas f = new test.generated.pg_catalog.routines.CurrentSchemas();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.current_schemas as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String[]> currentSchemas(java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.CurrentSchemas f = new test.generated.pg_catalog.routines.CurrentSchemas();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.current_schemas as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String[]> currentSchemas(org.jooq.Field<java.lang.Boolean> __1) {
		test.generated.pg_catalog.routines.CurrentSchemas f = new test.generated.pg_catalog.routines.CurrentSchemas();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.current_setting
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String currentSetting(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.CurrentSetting f = new test.generated.pg_catalog.routines.CurrentSetting();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.current_setting as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> currentSetting(java.lang.String __1) {
		test.generated.pg_catalog.routines.CurrentSetting f = new test.generated.pg_catalog.routines.CurrentSetting();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.current_setting as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> currentSetting(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.CurrentSetting f = new test.generated.pg_catalog.routines.CurrentSetting();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.current_user
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String currentUser(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.CurrentUser f = new test.generated.pg_catalog.routines.CurrentUser();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.current_user as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> currentUser() {
		test.generated.pg_catalog.routines.CurrentUser f = new test.generated.pg_catalog.routines.CurrentUser();

		return f.asField();
	}

	/**
	 * Call pg_catalog.currtid
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long currtid(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Currtid f = new test.generated.pg_catalog.routines.Currtid();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.currtid as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> currtid(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Currtid f = new test.generated.pg_catalog.routines.Currtid();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.currtid as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> currtid(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Currtid f = new test.generated.pg_catalog.routines.Currtid();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.currtid2
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long currtid2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Currtid2 f = new test.generated.pg_catalog.routines.Currtid2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.currtid2 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> currtid2(java.lang.String __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Currtid2 f = new test.generated.pg_catalog.routines.Currtid2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.currtid2 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> currtid2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Currtid2 f = new test.generated.pg_catalog.routines.Currtid2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.currval
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long currval(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Currval f = new test.generated.pg_catalog.routines.Currval();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.currval as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> currval(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Currval f = new test.generated.pg_catalog.routines.Currval();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.currval as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> currval(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Currval f = new test.generated.pg_catalog.routines.Currval();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cursor_to_xml
	 *
	 * @param cursor
	 * @param count
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object cursorToXml(org.jooq.Configuration configuration, org.jooq.Result<org.jooq.Record> cursor, java.lang.Integer count, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.CursorToXml f = new test.generated.pg_catalog.routines.CursorToXml();
		f.setCursor(cursor);
		f.setCount(count);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cursor_to_xml as a field
	 *
	 * @param cursor
	 * @param count
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> cursorToXml(org.jooq.Result<org.jooq.Record> cursor, java.lang.Integer count, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.CursorToXml f = new test.generated.pg_catalog.routines.CursorToXml();
		f.setCursor(cursor);
		f.setCount(count);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cursor_to_xml as a field
	 *
	 * @param cursor
	 * @param count
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> cursorToXml(org.jooq.Field<org.jooq.Result<org.jooq.Record>> cursor, org.jooq.Field<java.lang.Integer> count, org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.CursorToXml f = new test.generated.pg_catalog.routines.CursorToXml();
		f.setCursor(cursor);
		f.setCount(count);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.cursor_to_xmlschema
	 *
	 * @param cursor
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object cursorToXmlschema(org.jooq.Configuration configuration, org.jooq.Result<org.jooq.Record> cursor, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.CursorToXmlschema f = new test.generated.pg_catalog.routines.CursorToXmlschema();
		f.setCursor(cursor);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.cursor_to_xmlschema as a field
	 *
	 * @param cursor
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> cursorToXmlschema(org.jooq.Result<org.jooq.Record> cursor, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.CursorToXmlschema f = new test.generated.pg_catalog.routines.CursorToXmlschema();
		f.setCursor(cursor);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.cursor_to_xmlschema as a field
	 *
	 * @param cursor
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> cursorToXmlschema(org.jooq.Field<org.jooq.Result<org.jooq.Record>> cursor, org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.CursorToXmlschema f = new test.generated.pg_catalog.routines.CursorToXmlschema();
		f.setCursor(cursor);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.database_to_xml
	 *
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object databaseToXml(org.jooq.Configuration configuration, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.DatabaseToXml f = new test.generated.pg_catalog.routines.DatabaseToXml();
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.database_to_xml as a field
	 *
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> databaseToXml(java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.DatabaseToXml f = new test.generated.pg_catalog.routines.DatabaseToXml();
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.database_to_xml as a field
	 *
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> databaseToXml(org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.DatabaseToXml f = new test.generated.pg_catalog.routines.DatabaseToXml();
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.database_to_xml_and_xmlschema
	 *
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object databaseToXmlAndXmlschema(org.jooq.Configuration configuration, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.DatabaseToXmlAndXmlschema f = new test.generated.pg_catalog.routines.DatabaseToXmlAndXmlschema();
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.database_to_xml_and_xmlschema as a field
	 *
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> databaseToXmlAndXmlschema(java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.DatabaseToXmlAndXmlschema f = new test.generated.pg_catalog.routines.DatabaseToXmlAndXmlschema();
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.database_to_xml_and_xmlschema as a field
	 *
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> databaseToXmlAndXmlschema(org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.DatabaseToXmlAndXmlschema f = new test.generated.pg_catalog.routines.DatabaseToXmlAndXmlschema();
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.database_to_xmlschema
	 *
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object databaseToXmlschema(org.jooq.Configuration configuration, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.DatabaseToXmlschema f = new test.generated.pg_catalog.routines.DatabaseToXmlschema();
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.database_to_xmlschema as a field
	 *
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> databaseToXmlschema(java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.DatabaseToXmlschema f = new test.generated.pg_catalog.routines.DatabaseToXmlschema();
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.database_to_xmlschema as a field
	 *
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> databaseToXmlschema(org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.DatabaseToXmlschema f = new test.generated.pg_catalog.routines.DatabaseToXmlschema();
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date date3(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Date3 f = new test.generated.pg_catalog.routines.Date3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> date3(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Date3 f = new test.generated.pg_catalog.routines.Date3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> date3(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Date3 f = new test.generated.pg_catalog.routines.Date3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date date1(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Date1 f = new test.generated.pg_catalog.routines.Date1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> date1(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Date1 f = new test.generated.pg_catalog.routines.Date1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> date1(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Date1 f = new test.generated.pg_catalog.routines.Date1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date date2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Date2 f = new test.generated.pg_catalog.routines.Date2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> date2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Date2 f = new test.generated.pg_catalog.routines.Date2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> date2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Date2 f = new test.generated.pg_catalog.routines.Date2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer dateCmp(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateCmp f = new test.generated.pg_catalog.routines.DateCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> dateCmp(java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateCmp f = new test.generated.pg_catalog.routines.DateCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> dateCmp(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.DateCmp f = new test.generated.pg_catalog.routines.DateCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_cmp_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer dateCmpTimestamp(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateCmpTimestamp f = new test.generated.pg_catalog.routines.DateCmpTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_cmp_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> dateCmpTimestamp(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateCmpTimestamp f = new test.generated.pg_catalog.routines.DateCmpTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_cmp_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> dateCmpTimestamp(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateCmpTimestamp f = new test.generated.pg_catalog.routines.DateCmpTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_cmp_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer dateCmpTimestamptz(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateCmpTimestamptz f = new test.generated.pg_catalog.routines.DateCmpTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_cmp_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> dateCmpTimestamptz(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateCmpTimestamptz f = new test.generated.pg_catalog.routines.DateCmpTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_cmp_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> dateCmpTimestamptz(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateCmpTimestamptz f = new test.generated.pg_catalog.routines.DateCmpTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateEq(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateEq f = new test.generated.pg_catalog.routines.DateEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateEq(java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateEq f = new test.generated.pg_catalog.routines.DateEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateEq(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.DateEq f = new test.generated.pg_catalog.routines.DateEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_eq_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateEqTimestamp(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateEqTimestamp f = new test.generated.pg_catalog.routines.DateEqTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_eq_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateEqTimestamp(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateEqTimestamp f = new test.generated.pg_catalog.routines.DateEqTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_eq_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateEqTimestamp(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateEqTimestamp f = new test.generated.pg_catalog.routines.DateEqTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_eq_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateEqTimestamptz(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateEqTimestamptz f = new test.generated.pg_catalog.routines.DateEqTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_eq_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateEqTimestamptz(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateEqTimestamptz f = new test.generated.pg_catalog.routines.DateEqTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_eq_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateEqTimestamptz(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateEqTimestamptz f = new test.generated.pg_catalog.routines.DateEqTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateGe(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateGe f = new test.generated.pg_catalog.routines.DateGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateGe(java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateGe f = new test.generated.pg_catalog.routines.DateGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateGe(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.DateGe f = new test.generated.pg_catalog.routines.DateGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_ge_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateGeTimestamp(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateGeTimestamp f = new test.generated.pg_catalog.routines.DateGeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_ge_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateGeTimestamp(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateGeTimestamp f = new test.generated.pg_catalog.routines.DateGeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_ge_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateGeTimestamp(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateGeTimestamp f = new test.generated.pg_catalog.routines.DateGeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_ge_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateGeTimestamptz(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateGeTimestamptz f = new test.generated.pg_catalog.routines.DateGeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_ge_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateGeTimestamptz(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateGeTimestamptz f = new test.generated.pg_catalog.routines.DateGeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_ge_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateGeTimestamptz(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateGeTimestamptz f = new test.generated.pg_catalog.routines.DateGeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateGt(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateGt f = new test.generated.pg_catalog.routines.DateGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateGt(java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateGt f = new test.generated.pg_catalog.routines.DateGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateGt(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.DateGt f = new test.generated.pg_catalog.routines.DateGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_gt_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateGtTimestamp(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateGtTimestamp f = new test.generated.pg_catalog.routines.DateGtTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_gt_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateGtTimestamp(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateGtTimestamp f = new test.generated.pg_catalog.routines.DateGtTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_gt_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateGtTimestamp(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateGtTimestamp f = new test.generated.pg_catalog.routines.DateGtTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_gt_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateGtTimestamptz(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateGtTimestamptz f = new test.generated.pg_catalog.routines.DateGtTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_gt_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateGtTimestamptz(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateGtTimestamptz f = new test.generated.pg_catalog.routines.DateGtTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_gt_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateGtTimestamptz(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateGtTimestamptz f = new test.generated.pg_catalog.routines.DateGtTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date dateIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.DateIn f = new test.generated.pg_catalog.routines.DateIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> dateIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.DateIn f = new test.generated.pg_catalog.routines.DateIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> dateIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.DateIn f = new test.generated.pg_catalog.routines.DateIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date dateLarger(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateLarger f = new test.generated.pg_catalog.routines.DateLarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Date> dateLarger(java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateLarger f = new test.generated.pg_catalog.routines.DateLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Date> dateLarger(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.DateLarger f = new test.generated.pg_catalog.routines.DateLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateLe(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateLe f = new test.generated.pg_catalog.routines.DateLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateLe(java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateLe f = new test.generated.pg_catalog.routines.DateLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateLe(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.DateLe f = new test.generated.pg_catalog.routines.DateLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_le_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateLeTimestamp(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateLeTimestamp f = new test.generated.pg_catalog.routines.DateLeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_le_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateLeTimestamp(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateLeTimestamp f = new test.generated.pg_catalog.routines.DateLeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_le_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateLeTimestamp(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateLeTimestamp f = new test.generated.pg_catalog.routines.DateLeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_le_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateLeTimestamptz(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateLeTimestamptz f = new test.generated.pg_catalog.routines.DateLeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_le_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateLeTimestamptz(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateLeTimestamptz f = new test.generated.pg_catalog.routines.DateLeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_le_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateLeTimestamptz(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateLeTimestamptz f = new test.generated.pg_catalog.routines.DateLeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateLt(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateLt f = new test.generated.pg_catalog.routines.DateLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateLt(java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateLt f = new test.generated.pg_catalog.routines.DateLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateLt(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.DateLt f = new test.generated.pg_catalog.routines.DateLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_lt_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateLtTimestamp(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateLtTimestamp f = new test.generated.pg_catalog.routines.DateLtTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_lt_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateLtTimestamp(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateLtTimestamp f = new test.generated.pg_catalog.routines.DateLtTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_lt_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateLtTimestamp(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateLtTimestamp f = new test.generated.pg_catalog.routines.DateLtTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_lt_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateLtTimestamptz(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateLtTimestamptz f = new test.generated.pg_catalog.routines.DateLtTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_lt_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateLtTimestamptz(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateLtTimestamptz f = new test.generated.pg_catalog.routines.DateLtTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_lt_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateLtTimestamptz(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateLtTimestamptz f = new test.generated.pg_catalog.routines.DateLtTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer dateMi(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateMi f = new test.generated.pg_catalog.routines.DateMi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> dateMi(java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateMi f = new test.generated.pg_catalog.routines.DateMi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> dateMi(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.DateMi f = new test.generated.pg_catalog.routines.DateMi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_mi_interval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp dateMiInterval(org.jooq.Configuration configuration, java.sql.Date __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DateMiInterval f = new test.generated.pg_catalog.routines.DateMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_mi_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> dateMiInterval(java.sql.Date __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DateMiInterval f = new test.generated.pg_catalog.routines.DateMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_mi_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> dateMiInterval(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DateMiInterval f = new test.generated.pg_catalog.routines.DateMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_mii
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date dateMii(org.jooq.Configuration configuration, java.sql.Date __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.DateMii f = new test.generated.pg_catalog.routines.DateMii();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_mii as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Date> dateMii(java.sql.Date __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.DateMii f = new test.generated.pg_catalog.routines.DateMii();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_mii as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Date> dateMii(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.DateMii f = new test.generated.pg_catalog.routines.DateMii();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateNe(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateNe f = new test.generated.pg_catalog.routines.DateNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateNe(java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateNe f = new test.generated.pg_catalog.routines.DateNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateNe(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.DateNe f = new test.generated.pg_catalog.routines.DateNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_ne_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateNeTimestamp(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateNeTimestamp f = new test.generated.pg_catalog.routines.DateNeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_ne_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateNeTimestamp(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateNeTimestamp f = new test.generated.pg_catalog.routines.DateNeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_ne_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateNeTimestamp(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateNeTimestamp f = new test.generated.pg_catalog.routines.DateNeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_ne_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean dateNeTimestamptz(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateNeTimestamptz f = new test.generated.pg_catalog.routines.DateNeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_ne_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateNeTimestamptz(java.sql.Date __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateNeTimestamptz f = new test.generated.pg_catalog.routines.DateNeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_ne_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> dateNeTimestamptz(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateNeTimestamptz f = new test.generated.pg_catalog.routines.DateNeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object dateOut(org.jooq.Configuration configuration, java.sql.Date __1) {
		test.generated.pg_catalog.routines.DateOut f = new test.generated.pg_catalog.routines.DateOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> dateOut(java.sql.Date __1) {
		test.generated.pg_catalog.routines.DateOut f = new test.generated.pg_catalog.routines.DateOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> dateOut(org.jooq.Field<java.sql.Date> __1) {
		test.generated.pg_catalog.routines.DateOut f = new test.generated.pg_catalog.routines.DateOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_part
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double datePart1(org.jooq.Configuration configuration, java.lang.String __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DatePart1 f = new test.generated.pg_catalog.routines.DatePart1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart1(java.lang.String __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DatePart1 f = new test.generated.pg_catalog.routines.DatePart1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DatePart1 f = new test.generated.pg_catalog.routines.DatePart1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_part
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double datePart2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DatePart2 f = new test.generated.pg_catalog.routines.DatePart2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart2(java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DatePart2 f = new test.generated.pg_catalog.routines.DatePart2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DatePart2 f = new test.generated.pg_catalog.routines.DatePart2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_part
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double datePart6(org.jooq.Configuration configuration, java.lang.String __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DatePart6 f = new test.generated.pg_catalog.routines.DatePart6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart6(java.lang.String __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DatePart6 f = new test.generated.pg_catalog.routines.DatePart6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart6(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.DatePart6 f = new test.generated.pg_catalog.routines.DatePart6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_part
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double datePart8(org.jooq.Configuration configuration, java.lang.String __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DatePart8 f = new test.generated.pg_catalog.routines.DatePart8();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart8(java.lang.String __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DatePart8 f = new test.generated.pg_catalog.routines.DatePart8();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart8(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DatePart8 f = new test.generated.pg_catalog.routines.DatePart8();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_part
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double datePart3(org.jooq.Configuration configuration, java.lang.String __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.DatePart3 f = new test.generated.pg_catalog.routines.DatePart3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart3(java.lang.String __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.DatePart3 f = new test.generated.pg_catalog.routines.DatePart3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart3(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.DatePart3 f = new test.generated.pg_catalog.routines.DatePart3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_part
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double datePart5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DatePart5 f = new test.generated.pg_catalog.routines.DatePart5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart5(java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DatePart5 f = new test.generated.pg_catalog.routines.DatePart5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DatePart5 f = new test.generated.pg_catalog.routines.DatePart5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_part
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double datePart4(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DatePart4 f = new test.generated.pg_catalog.routines.DatePart4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart4(java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DatePart4 f = new test.generated.pg_catalog.routines.DatePart4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart4(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DatePart4 f = new test.generated.pg_catalog.routines.DatePart4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_part
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double datePart7(org.jooq.Configuration configuration, java.lang.String __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.DatePart7 f = new test.generated.pg_catalog.routines.DatePart7();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart7(java.lang.String __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.DatePart7 f = new test.generated.pg_catalog.routines.DatePart7();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_part as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> datePart7(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.DatePart7 f = new test.generated.pg_catalog.routines.DatePart7();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_pl_interval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp datePlInterval(org.jooq.Configuration configuration, java.sql.Date __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DatePlInterval f = new test.generated.pg_catalog.routines.DatePlInterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_pl_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> datePlInterval(java.sql.Date __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DatePlInterval f = new test.generated.pg_catalog.routines.DatePlInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_pl_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> datePlInterval(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DatePlInterval f = new test.generated.pg_catalog.routines.DatePlInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_pli
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date datePli(org.jooq.Configuration configuration, java.sql.Date __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.DatePli f = new test.generated.pg_catalog.routines.DatePli();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_pli as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Date> datePli(java.sql.Date __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.DatePli f = new test.generated.pg_catalog.routines.DatePli();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_pli as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Date> datePli(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.DatePli f = new test.generated.pg_catalog.routines.DatePli();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date dateRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.DateRecv f = new test.generated.pg_catalog.routines.DateRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> dateRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.DateRecv f = new test.generated.pg_catalog.routines.DateRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> dateRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.DateRecv f = new test.generated.pg_catalog.routines.DateRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] dateSend(org.jooq.Configuration configuration, java.sql.Date __1) {
		test.generated.pg_catalog.routines.DateSend f = new test.generated.pg_catalog.routines.DateSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> dateSend(java.sql.Date __1) {
		test.generated.pg_catalog.routines.DateSend f = new test.generated.pg_catalog.routines.DateSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> dateSend(org.jooq.Field<java.sql.Date> __1) {
		test.generated.pg_catalog.routines.DateSend f = new test.generated.pg_catalog.routines.DateSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date dateSmaller(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateSmaller f = new test.generated.pg_catalog.routines.DateSmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Date> dateSmaller(java.sql.Date __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.DateSmaller f = new test.generated.pg_catalog.routines.DateSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Date> dateSmaller(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.DateSmaller f = new test.generated.pg_catalog.routines.DateSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_trunc
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object dateTrunc2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DateTrunc2 f = new test.generated.pg_catalog.routines.DateTrunc2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_trunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> dateTrunc2(java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DateTrunc2 f = new test.generated.pg_catalog.routines.DateTrunc2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_trunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> dateTrunc2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DateTrunc2 f = new test.generated.pg_catalog.routines.DateTrunc2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_trunc
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp dateTrunc3(org.jooq.Configuration configuration, java.lang.String __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateTrunc3 f = new test.generated.pg_catalog.routines.DateTrunc3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_trunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> dateTrunc3(java.lang.String __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateTrunc3 f = new test.generated.pg_catalog.routines.DateTrunc3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_trunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> dateTrunc3(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateTrunc3 f = new test.generated.pg_catalog.routines.DateTrunc3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.date_trunc
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp dateTrunc1(org.jooq.Configuration configuration, java.lang.String __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateTrunc1 f = new test.generated.pg_catalog.routines.DateTrunc1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.date_trunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> dateTrunc1(java.lang.String __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.DateTrunc1 f = new test.generated.pg_catalog.routines.DateTrunc1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.date_trunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> dateTrunc1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.DateTrunc1 f = new test.generated.pg_catalog.routines.DateTrunc1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.datetime_pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp datetimePl(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.DatetimePl f = new test.generated.pg_catalog.routines.DatetimePl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.datetime_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> datetimePl(java.sql.Date __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.DatetimePl f = new test.generated.pg_catalog.routines.DatetimePl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.datetime_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> datetimePl(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.DatetimePl f = new test.generated.pg_catalog.routines.DatetimePl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.datetimetz_pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp datetimetzPl(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.DatetimetzPl f = new test.generated.pg_catalog.routines.DatetimetzPl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.datetimetz_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> datetimetzPl(java.sql.Date __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.DatetimetzPl f = new test.generated.pg_catalog.routines.DatetimetzPl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.datetimetz_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> datetimetzPl(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.DatetimetzPl f = new test.generated.pg_catalog.routines.DatetimetzPl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dcbrt
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double dcbrt(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dcbrt f = new test.generated.pg_catalog.routines.Dcbrt();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dcbrt as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dcbrt(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dcbrt f = new test.generated.pg_catalog.routines.Dcbrt();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dcbrt as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dcbrt(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Dcbrt f = new test.generated.pg_catalog.routines.Dcbrt();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.decode
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] decode(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Decode f = new test.generated.pg_catalog.routines.Decode();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.decode as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> decode(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Decode f = new test.generated.pg_catalog.routines.Decode();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.decode as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> decode(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Decode f = new test.generated.pg_catalog.routines.Decode();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.degrees
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double degrees(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Degrees f = new test.generated.pg_catalog.routines.Degrees();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.degrees as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> degrees(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Degrees f = new test.generated.pg_catalog.routines.Degrees();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.degrees as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> degrees(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Degrees f = new test.generated.pg_catalog.routines.Degrees();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dense_rank
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long denseRank(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.DenseRank f = new test.generated.pg_catalog.routines.DenseRank();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dense_rank as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> denseRank() {
		test.generated.pg_catalog.routines.DenseRank f = new test.generated.pg_catalog.routines.DenseRank();

		return f.asField();
	}

	/**
	 * Call pg_catalog.dexp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double dexp(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dexp f = new test.generated.pg_catalog.routines.Dexp();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dexp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dexp(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dexp f = new test.generated.pg_catalog.routines.Dexp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dexp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dexp(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Dexp f = new test.generated.pg_catalog.routines.Dexp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.diagonal
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object diagonal(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Diagonal f = new test.generated.pg_catalog.routines.Diagonal();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.diagonal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> diagonal(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Diagonal f = new test.generated.pg_catalog.routines.Diagonal();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.diagonal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> diagonal(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Diagonal f = new test.generated.pg_catalog.routines.Diagonal();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.diameter
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double diameter(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Diameter f = new test.generated.pg_catalog.routines.Diameter();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.diameter as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> diameter(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Diameter f = new test.generated.pg_catalog.routines.Diameter();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.diameter as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> diameter(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Diameter f = new test.generated.pg_catalog.routines.Diameter();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dispell_init
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object dispellInit(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.DispellInit f = new test.generated.pg_catalog.routines.DispellInit();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dispell_init as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> dispellInit(java.lang.Object __1) {
		test.generated.pg_catalog.routines.DispellInit f = new test.generated.pg_catalog.routines.DispellInit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dispell_init as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> dispellInit(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.DispellInit f = new test.generated.pg_catalog.routines.DispellInit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dispell_lexize
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object dispellLexize(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.DispellLexize f = new test.generated.pg_catalog.routines.DispellLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dispell_lexize as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> dispellLexize(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.DispellLexize f = new test.generated.pg_catalog.routines.DispellLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dispell_lexize as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> dispellLexize(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.DispellLexize f = new test.generated.pg_catalog.routines.DispellLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dist_cpoly
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double distCpoly(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistCpoly f = new test.generated.pg_catalog.routines.DistCpoly();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dist_cpoly as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distCpoly(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistCpoly f = new test.generated.pg_catalog.routines.DistCpoly();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dist_cpoly as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distCpoly(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DistCpoly f = new test.generated.pg_catalog.routines.DistCpoly();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dist_lb
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double distLb(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistLb f = new test.generated.pg_catalog.routines.DistLb();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dist_lb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distLb(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistLb f = new test.generated.pg_catalog.routines.DistLb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dist_lb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distLb(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DistLb f = new test.generated.pg_catalog.routines.DistLb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dist_pb
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double distPb(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistPb f = new test.generated.pg_catalog.routines.DistPb();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dist_pb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distPb(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistPb f = new test.generated.pg_catalog.routines.DistPb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dist_pb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distPb(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DistPb f = new test.generated.pg_catalog.routines.DistPb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dist_pc
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double distPc(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistPc f = new test.generated.pg_catalog.routines.DistPc();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dist_pc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distPc(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistPc f = new test.generated.pg_catalog.routines.DistPc();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dist_pc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distPc(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DistPc f = new test.generated.pg_catalog.routines.DistPc();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dist_pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double distPl(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistPl f = new test.generated.pg_catalog.routines.DistPl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dist_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distPl(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistPl f = new test.generated.pg_catalog.routines.DistPl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dist_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distPl(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DistPl f = new test.generated.pg_catalog.routines.DistPl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dist_ppath
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double distPpath(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistPpath f = new test.generated.pg_catalog.routines.DistPpath();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dist_ppath as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distPpath(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistPpath f = new test.generated.pg_catalog.routines.DistPpath();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dist_ppath as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distPpath(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DistPpath f = new test.generated.pg_catalog.routines.DistPpath();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dist_ps
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double distPs(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistPs f = new test.generated.pg_catalog.routines.DistPs();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dist_ps as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distPs(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistPs f = new test.generated.pg_catalog.routines.DistPs();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dist_ps as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distPs(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DistPs f = new test.generated.pg_catalog.routines.DistPs();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dist_sb
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double distSb(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistSb f = new test.generated.pg_catalog.routines.DistSb();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dist_sb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distSb(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistSb f = new test.generated.pg_catalog.routines.DistSb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dist_sb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distSb(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DistSb f = new test.generated.pg_catalog.routines.DistSb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dist_sl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double distSl(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistSl f = new test.generated.pg_catalog.routines.DistSl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dist_sl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distSl(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.DistSl f = new test.generated.pg_catalog.routines.DistSl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dist_sl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> distSl(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.DistSl f = new test.generated.pg_catalog.routines.DistSl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal div(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Div f = new test.generated.pg_catalog.routines.Div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> div(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Div f = new test.generated.pg_catalog.routines.Div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> div(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.Div f = new test.generated.pg_catalog.routines.Div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dlog1
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double dlog1(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dlog1 f = new test.generated.pg_catalog.routines.Dlog1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dlog1 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dlog1(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dlog1 f = new test.generated.pg_catalog.routines.Dlog1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dlog1 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dlog1(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Dlog1 f = new test.generated.pg_catalog.routines.Dlog1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dlog10
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double dlog10(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dlog10 f = new test.generated.pg_catalog.routines.Dlog10();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dlog10 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dlog10(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dlog10 f = new test.generated.pg_catalog.routines.Dlog10();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dlog10 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dlog10(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Dlog10 f = new test.generated.pg_catalog.routines.Dlog10();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.domain_in
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object domainIn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.DomainIn f = new test.generated.pg_catalog.routines.DomainIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.domain_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> domainIn(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.DomainIn f = new test.generated.pg_catalog.routines.DomainIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.domain_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> domainIn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.DomainIn f = new test.generated.pg_catalog.routines.DomainIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.domain_recv
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object domainRecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.DomainRecv f = new test.generated.pg_catalog.routines.DomainRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.domain_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> domainRecv(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.DomainRecv f = new test.generated.pg_catalog.routines.DomainRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.domain_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> domainRecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.DomainRecv f = new test.generated.pg_catalog.routines.DomainRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dpow
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double dpow(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Dpow f = new test.generated.pg_catalog.routines.Dpow();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dpow as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> dpow(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Dpow f = new test.generated.pg_catalog.routines.Dpow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dpow as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> dpow(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Dpow f = new test.generated.pg_catalog.routines.Dpow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dround
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double dround(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dround f = new test.generated.pg_catalog.routines.Dround();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dround as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dround(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dround f = new test.generated.pg_catalog.routines.Dround();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dround as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dround(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Dround f = new test.generated.pg_catalog.routines.Dround();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dsimple_init
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object dsimpleInit(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.DsimpleInit f = new test.generated.pg_catalog.routines.DsimpleInit();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dsimple_init as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> dsimpleInit(java.lang.Object __1) {
		test.generated.pg_catalog.routines.DsimpleInit f = new test.generated.pg_catalog.routines.DsimpleInit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dsimple_init as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> dsimpleInit(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.DsimpleInit f = new test.generated.pg_catalog.routines.DsimpleInit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dsimple_lexize
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object dsimpleLexize(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.DsimpleLexize f = new test.generated.pg_catalog.routines.DsimpleLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dsimple_lexize as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> dsimpleLexize(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.DsimpleLexize f = new test.generated.pg_catalog.routines.DsimpleLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dsimple_lexize as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> dsimpleLexize(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.DsimpleLexize f = new test.generated.pg_catalog.routines.DsimpleLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dsnowball_init
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object dsnowballInit(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.DsnowballInit f = new test.generated.pg_catalog.routines.DsnowballInit();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dsnowball_init as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> dsnowballInit(java.lang.Object __1) {
		test.generated.pg_catalog.routines.DsnowballInit f = new test.generated.pg_catalog.routines.DsnowballInit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dsnowball_init as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> dsnowballInit(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.DsnowballInit f = new test.generated.pg_catalog.routines.DsnowballInit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dsnowball_lexize
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object dsnowballLexize(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.DsnowballLexize f = new test.generated.pg_catalog.routines.DsnowballLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dsnowball_lexize as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> dsnowballLexize(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.DsnowballLexize f = new test.generated.pg_catalog.routines.DsnowballLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dsnowball_lexize as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> dsnowballLexize(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.DsnowballLexize f = new test.generated.pg_catalog.routines.DsnowballLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dsqrt
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double dsqrt(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dsqrt f = new test.generated.pg_catalog.routines.Dsqrt();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dsqrt as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dsqrt(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dsqrt f = new test.generated.pg_catalog.routines.Dsqrt();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dsqrt as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dsqrt(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Dsqrt f = new test.generated.pg_catalog.routines.Dsqrt();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dsynonym_init
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object dsynonymInit(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.DsynonymInit f = new test.generated.pg_catalog.routines.DsynonymInit();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dsynonym_init as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> dsynonymInit(java.lang.Object __1) {
		test.generated.pg_catalog.routines.DsynonymInit f = new test.generated.pg_catalog.routines.DsynonymInit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dsynonym_init as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> dsynonymInit(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.DsynonymInit f = new test.generated.pg_catalog.routines.DsynonymInit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dsynonym_lexize
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object dsynonymLexize(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.DsynonymLexize f = new test.generated.pg_catalog.routines.DsynonymLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dsynonym_lexize as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> dsynonymLexize(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.DsynonymLexize f = new test.generated.pg_catalog.routines.DsynonymLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dsynonym_lexize as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> dsynonymLexize(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.DsynonymLexize f = new test.generated.pg_catalog.routines.DsynonymLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.dtrunc
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double dtrunc(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dtrunc f = new test.generated.pg_catalog.routines.Dtrunc();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.dtrunc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dtrunc(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Dtrunc f = new test.generated.pg_catalog.routines.Dtrunc();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.dtrunc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> dtrunc(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Dtrunc f = new test.generated.pg_catalog.routines.Dtrunc();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.encode
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String encode(org.jooq.Configuration configuration, byte[] __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Encode f = new test.generated.pg_catalog.routines.Encode();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.encode as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> encode(byte[] __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Encode f = new test.generated.pg_catalog.routines.Encode();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.encode as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> encode(org.jooq.Field<byte[]> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Encode f = new test.generated.pg_catalog.routines.Encode();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer enumCmp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumCmp f = new test.generated.pg_catalog.routines.EnumCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> enumCmp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumCmp f = new test.generated.pg_catalog.routines.EnumCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> enumCmp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.EnumCmp f = new test.generated.pg_catalog.routines.EnumCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean enumEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumEq f = new test.generated.pg_catalog.routines.EnumEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> enumEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumEq f = new test.generated.pg_catalog.routines.EnumEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> enumEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.EnumEq f = new test.generated.pg_catalog.routines.EnumEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_first
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object enumFirst(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.EnumFirst f = new test.generated.pg_catalog.routines.EnumFirst();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_first as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> enumFirst(java.lang.Object __1) {
		test.generated.pg_catalog.routines.EnumFirst f = new test.generated.pg_catalog.routines.EnumFirst();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_first as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> enumFirst(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.EnumFirst f = new test.generated.pg_catalog.routines.EnumFirst();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean enumGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumGe f = new test.generated.pg_catalog.routines.EnumGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> enumGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumGe f = new test.generated.pg_catalog.routines.EnumGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> enumGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.EnumGe f = new test.generated.pg_catalog.routines.EnumGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean enumGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumGt f = new test.generated.pg_catalog.routines.EnumGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> enumGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumGt f = new test.generated.pg_catalog.routines.EnumGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> enumGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.EnumGt f = new test.generated.pg_catalog.routines.EnumGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_in
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object enumIn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.EnumIn f = new test.generated.pg_catalog.routines.EnumIn();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_in as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> enumIn(java.lang.Object __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.EnumIn f = new test.generated.pg_catalog.routines.EnumIn();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_in as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> enumIn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.EnumIn f = new test.generated.pg_catalog.routines.EnumIn();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object enumLarger(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumLarger f = new test.generated.pg_catalog.routines.EnumLarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> enumLarger(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumLarger f = new test.generated.pg_catalog.routines.EnumLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> enumLarger(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.EnumLarger f = new test.generated.pg_catalog.routines.EnumLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_last
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object enumLast(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.EnumLast f = new test.generated.pg_catalog.routines.EnumLast();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_last as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> enumLast(java.lang.Object __1) {
		test.generated.pg_catalog.routines.EnumLast f = new test.generated.pg_catalog.routines.EnumLast();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_last as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> enumLast(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.EnumLast f = new test.generated.pg_catalog.routines.EnumLast();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean enumLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumLe f = new test.generated.pg_catalog.routines.EnumLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> enumLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumLe f = new test.generated.pg_catalog.routines.EnumLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> enumLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.EnumLe f = new test.generated.pg_catalog.routines.EnumLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean enumLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumLt f = new test.generated.pg_catalog.routines.EnumLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> enumLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumLt f = new test.generated.pg_catalog.routines.EnumLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> enumLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.EnumLt f = new test.generated.pg_catalog.routines.EnumLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean enumNe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumNe f = new test.generated.pg_catalog.routines.EnumNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> enumNe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumNe f = new test.generated.pg_catalog.routines.EnumNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> enumNe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.EnumNe f = new test.generated.pg_catalog.routines.EnumNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object enumOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.EnumOut f = new test.generated.pg_catalog.routines.EnumOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> enumOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.EnumOut f = new test.generated.pg_catalog.routines.EnumOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> enumOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.EnumOut f = new test.generated.pg_catalog.routines.EnumOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_range
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object enumRange2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.EnumRange2 f = new test.generated.pg_catalog.routines.EnumRange2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_range as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> enumRange2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.EnumRange2 f = new test.generated.pg_catalog.routines.EnumRange2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_range as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> enumRange2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.EnumRange2 f = new test.generated.pg_catalog.routines.EnumRange2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_range
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object enumRange1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumRange1 f = new test.generated.pg_catalog.routines.EnumRange1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_range as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> enumRange1(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumRange1 f = new test.generated.pg_catalog.routines.EnumRange1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_range as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> enumRange1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.EnumRange1 f = new test.generated.pg_catalog.routines.EnumRange1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_recv
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object enumRecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.EnumRecv f = new test.generated.pg_catalog.routines.EnumRecv();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_recv as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> enumRecv(java.lang.Object __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.EnumRecv f = new test.generated.pg_catalog.routines.EnumRecv();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_recv as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> enumRecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.EnumRecv f = new test.generated.pg_catalog.routines.EnumRecv();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] enumSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.EnumSend f = new test.generated.pg_catalog.routines.EnumSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> enumSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.EnumSend f = new test.generated.pg_catalog.routines.EnumSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> enumSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.EnumSend f = new test.generated.pg_catalog.routines.EnumSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.enum_smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object enumSmaller(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumSmaller f = new test.generated.pg_catalog.routines.EnumSmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.enum_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> enumSmaller(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.EnumSmaller f = new test.generated.pg_catalog.routines.EnumSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.enum_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> enumSmaller(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.EnumSmaller f = new test.generated.pg_catalog.routines.EnumSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.eqjoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double eqjoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Eqjoinsel f = new test.generated.pg_catalog.routines.Eqjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.eqjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> eqjoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Eqjoinsel f = new test.generated.pg_catalog.routines.Eqjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.eqjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> eqjoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Eqjoinsel f = new test.generated.pg_catalog.routines.Eqjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.eqsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double eqsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Eqsel f = new test.generated.pg_catalog.routines.Eqsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.eqsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> eqsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Eqsel f = new test.generated.pg_catalog.routines.Eqsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.eqsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> eqsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Eqsel f = new test.generated.pg_catalog.routines.Eqsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.euc_cn_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void eucCnToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.EucCnToMic p = new test.generated.pg_catalog.routines.EucCnToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.euc_cn_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void eucCnToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.EucCnToUtf8 p = new test.generated.pg_catalog.routines.EucCnToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.euc_jis_2004_to_shift_jis_2004
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void eucJis_2004ToShiftJis_2004(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.EucJis_2004ToShiftJis_2004 p = new test.generated.pg_catalog.routines.EucJis_2004ToShiftJis_2004();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.euc_jis_2004_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void eucJis_2004ToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.EucJis_2004ToUtf8 p = new test.generated.pg_catalog.routines.EucJis_2004ToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.euc_jp_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void eucJpToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.EucJpToMic p = new test.generated.pg_catalog.routines.EucJpToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.euc_jp_to_sjis
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void eucJpToSjis(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.EucJpToSjis p = new test.generated.pg_catalog.routines.EucJpToSjis();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.euc_jp_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void eucJpToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.EucJpToUtf8 p = new test.generated.pg_catalog.routines.EucJpToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.euc_kr_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void eucKrToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.EucKrToMic p = new test.generated.pg_catalog.routines.EucKrToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.euc_kr_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void eucKrToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.EucKrToUtf8 p = new test.generated.pg_catalog.routines.EucKrToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.euc_tw_to_big5
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void eucTwToBig5(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.EucTwToBig5 p = new test.generated.pg_catalog.routines.EucTwToBig5();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.euc_tw_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void eucTwToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.EucTwToMic p = new test.generated.pg_catalog.routines.EucTwToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.euc_tw_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void eucTwToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.EucTwToUtf8 p = new test.generated.pg_catalog.routines.EucTwToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.every
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean every(org.jooq.Configuration configuration, java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.Every f = new test.generated.pg_catalog.routines.Every();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.every as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> every(java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.Every f = new test.generated.pg_catalog.routines.Every();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.every as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> every(org.jooq.Field<java.lang.Boolean> __1) {
		test.generated.pg_catalog.routines.Every f = new test.generated.pg_catalog.routines.Every();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.exp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal exp2(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Exp2 f = new test.generated.pg_catalog.routines.Exp2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.exp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> exp2(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Exp2 f = new test.generated.pg_catalog.routines.Exp2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.exp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> exp2(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Exp2 f = new test.generated.pg_catalog.routines.Exp2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.exp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double exp1(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Exp1 f = new test.generated.pg_catalog.routines.Exp1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.exp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> exp1(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Exp1 f = new test.generated.pg_catalog.routines.Exp1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.exp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> exp1(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Exp1 f = new test.generated.pg_catalog.routines.Exp1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.factorial
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal factorial(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Factorial f = new test.generated.pg_catalog.routines.Factorial();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.factorial as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> factorial(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Factorial f = new test.generated.pg_catalog.routines.Factorial();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.factorial as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> factorial(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Factorial f = new test.generated.pg_catalog.routines.Factorial();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.family
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer family(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Family f = new test.generated.pg_catalog.routines.Family();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.family as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> family(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Family f = new test.generated.pg_catalog.routines.Family();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.family as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> family(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Family f = new test.generated.pg_catalog.routines.Family();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.first_value
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object firstValue(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.FirstValue f = new test.generated.pg_catalog.routines.FirstValue();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.first_value as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> firstValue(java.lang.Object __1) {
		test.generated.pg_catalog.routines.FirstValue f = new test.generated.pg_catalog.routines.FirstValue();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.first_value as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> firstValue(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.FirstValue f = new test.generated.pg_catalog.routines.FirstValue();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float41(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Float41 f = new test.generated.pg_catalog.routines.Float41();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float41(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Float41 f = new test.generated.pg_catalog.routines.Float41();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float41(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Float41 f = new test.generated.pg_catalog.routines.Float41();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float45(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Float45 f = new test.generated.pg_catalog.routines.Float45();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float45(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Float45 f = new test.generated.pg_catalog.routines.Float45();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float45(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Float45 f = new test.generated.pg_catalog.routines.Float45();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float43(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Float43 f = new test.generated.pg_catalog.routines.Float43();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float43(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Float43 f = new test.generated.pg_catalog.routines.Float43();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float43(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Float43 f = new test.generated.pg_catalog.routines.Float43();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float44(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Float44 f = new test.generated.pg_catalog.routines.Float44();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float44(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Float44 f = new test.generated.pg_catalog.routines.Float44();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float44(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Float44 f = new test.generated.pg_catalog.routines.Float44();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float42(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Float42 f = new test.generated.pg_catalog.routines.Float42();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float42(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Float42 f = new test.generated.pg_catalog.routines.Float42();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float42(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Float42 f = new test.generated.pg_catalog.routines.Float42();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4_accum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double[] float4Accum(org.jooq.Configuration configuration, java.lang.Double[] __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4Accum f = new test.generated.pg_catalog.routines.Float4Accum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double[]> float4Accum(java.lang.Double[] __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4Accum f = new test.generated.pg_catalog.routines.Float4Accum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double[]> float4Accum(org.jooq.Field<java.lang.Double[]> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4Accum f = new test.generated.pg_catalog.routines.Float4Accum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float48div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float48div(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48div f = new test.generated.pg_catalog.routines.Float48div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float48div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float48div(java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48div f = new test.generated.pg_catalog.routines.Float48div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float48div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float48div(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float48div f = new test.generated.pg_catalog.routines.Float48div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float48eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float48eq(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48eq f = new test.generated.pg_catalog.routines.Float48eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float48eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float48eq(java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48eq f = new test.generated.pg_catalog.routines.Float48eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float48eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float48eq(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float48eq f = new test.generated.pg_catalog.routines.Float48eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float48ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float48ge(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48ge f = new test.generated.pg_catalog.routines.Float48ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float48ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float48ge(java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48ge f = new test.generated.pg_catalog.routines.Float48ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float48ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float48ge(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float48ge f = new test.generated.pg_catalog.routines.Float48ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float48gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float48gt(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48gt f = new test.generated.pg_catalog.routines.Float48gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float48gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float48gt(java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48gt f = new test.generated.pg_catalog.routines.Float48gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float48gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float48gt(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float48gt f = new test.generated.pg_catalog.routines.Float48gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float48le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float48le(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48le f = new test.generated.pg_catalog.routines.Float48le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float48le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float48le(java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48le f = new test.generated.pg_catalog.routines.Float48le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float48le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float48le(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float48le f = new test.generated.pg_catalog.routines.Float48le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float48lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float48lt(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48lt f = new test.generated.pg_catalog.routines.Float48lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float48lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float48lt(java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48lt f = new test.generated.pg_catalog.routines.Float48lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float48lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float48lt(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float48lt f = new test.generated.pg_catalog.routines.Float48lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float48mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float48mi(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48mi f = new test.generated.pg_catalog.routines.Float48mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float48mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float48mi(java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48mi f = new test.generated.pg_catalog.routines.Float48mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float48mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float48mi(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float48mi f = new test.generated.pg_catalog.routines.Float48mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float48mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float48mul(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48mul f = new test.generated.pg_catalog.routines.Float48mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float48mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float48mul(java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48mul f = new test.generated.pg_catalog.routines.Float48mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float48mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float48mul(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float48mul f = new test.generated.pg_catalog.routines.Float48mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float48ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float48ne(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48ne f = new test.generated.pg_catalog.routines.Float48ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float48ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float48ne(java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48ne f = new test.generated.pg_catalog.routines.Float48ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float48ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float48ne(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float48ne f = new test.generated.pg_catalog.routines.Float48ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float48pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float48pl(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48pl f = new test.generated.pg_catalog.routines.Float48pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float48pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float48pl(java.lang.Float __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float48pl f = new test.generated.pg_catalog.routines.Float48pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float48pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float48pl(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float48pl f = new test.generated.pg_catalog.routines.Float48pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4abs
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float4abs(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Float4abs f = new test.generated.pg_catalog.routines.Float4abs();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float4abs(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Float4abs f = new test.generated.pg_catalog.routines.Float4abs();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float4abs(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Float4abs f = new test.generated.pg_catalog.routines.Float4abs();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float4div(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4div f = new test.generated.pg_catalog.routines.Float4div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> float4div(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4div f = new test.generated.pg_catalog.routines.Float4div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> float4div(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4div f = new test.generated.pg_catalog.routines.Float4div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float4eq(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4eq f = new test.generated.pg_catalog.routines.Float4eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float4eq(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4eq f = new test.generated.pg_catalog.routines.Float4eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float4eq(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4eq f = new test.generated.pg_catalog.routines.Float4eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float4ge(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4ge f = new test.generated.pg_catalog.routines.Float4ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float4ge(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4ge f = new test.generated.pg_catalog.routines.Float4ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float4ge(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4ge f = new test.generated.pg_catalog.routines.Float4ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float4gt(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4gt f = new test.generated.pg_catalog.routines.Float4gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float4gt(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4gt f = new test.generated.pg_catalog.routines.Float4gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float4gt(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4gt f = new test.generated.pg_catalog.routines.Float4gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float4in(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Float4in f = new test.generated.pg_catalog.routines.Float4in();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float4in(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Float4in f = new test.generated.pg_catalog.routines.Float4in();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float4in(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Float4in f = new test.generated.pg_catalog.routines.Float4in();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float4larger(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4larger f = new test.generated.pg_catalog.routines.Float4larger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> float4larger(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4larger f = new test.generated.pg_catalog.routines.Float4larger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> float4larger(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4larger f = new test.generated.pg_catalog.routines.Float4larger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float4le(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4le f = new test.generated.pg_catalog.routines.Float4le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float4le(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4le f = new test.generated.pg_catalog.routines.Float4le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float4le(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4le f = new test.generated.pg_catalog.routines.Float4le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float4lt(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4lt f = new test.generated.pg_catalog.routines.Float4lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float4lt(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4lt f = new test.generated.pg_catalog.routines.Float4lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float4lt(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4lt f = new test.generated.pg_catalog.routines.Float4lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float4mi(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4mi f = new test.generated.pg_catalog.routines.Float4mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> float4mi(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4mi f = new test.generated.pg_catalog.routines.Float4mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> float4mi(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4mi f = new test.generated.pg_catalog.routines.Float4mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float4mul(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4mul f = new test.generated.pg_catalog.routines.Float4mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> float4mul(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4mul f = new test.generated.pg_catalog.routines.Float4mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> float4mul(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4mul f = new test.generated.pg_catalog.routines.Float4mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float4ne(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4ne f = new test.generated.pg_catalog.routines.Float4ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float4ne(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4ne f = new test.generated.pg_catalog.routines.Float4ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float4ne(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4ne f = new test.generated.pg_catalog.routines.Float4ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object float4out(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Float4out f = new test.generated.pg_catalog.routines.Float4out();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> float4out(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Float4out f = new test.generated.pg_catalog.routines.Float4out();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> float4out(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Float4out f = new test.generated.pg_catalog.routines.Float4out();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float4pl(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4pl f = new test.generated.pg_catalog.routines.Float4pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> float4pl(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4pl f = new test.generated.pg_catalog.routines.Float4pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> float4pl(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4pl f = new test.generated.pg_catalog.routines.Float4pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float4recv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Float4recv f = new test.generated.pg_catalog.routines.Float4recv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float4recv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Float4recv f = new test.generated.pg_catalog.routines.Float4recv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float4recv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Float4recv f = new test.generated.pg_catalog.routines.Float4recv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] float4send(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Float4send f = new test.generated.pg_catalog.routines.Float4send();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> float4send(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Float4send f = new test.generated.pg_catalog.routines.Float4send();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> float4send(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Float4send f = new test.generated.pg_catalog.routines.Float4send();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float4smaller(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4smaller f = new test.generated.pg_catalog.routines.Float4smaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> float4smaller(java.lang.Float __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float4smaller f = new test.generated.pg_catalog.routines.Float4smaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> float4smaller(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float4smaller f = new test.generated.pg_catalog.routines.Float4smaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4um
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float4um(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Float4um f = new test.generated.pg_catalog.routines.Float4um();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4um as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float4um(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Float4um f = new test.generated.pg_catalog.routines.Float4um();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4um as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float4um(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Float4um f = new test.generated.pg_catalog.routines.Float4um();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float4up
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float float4up(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Float4up f = new test.generated.pg_catalog.routines.Float4up();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float4up as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float4up(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Float4up f = new test.generated.pg_catalog.routines.Float4up();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float4up as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> float4up(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Float4up f = new test.generated.pg_catalog.routines.Float4up();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float84(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Float84 f = new test.generated.pg_catalog.routines.Float84();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float84(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Float84 f = new test.generated.pg_catalog.routines.Float84();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float84(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Float84 f = new test.generated.pg_catalog.routines.Float84();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float85(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Float85 f = new test.generated.pg_catalog.routines.Float85();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float85(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Float85 f = new test.generated.pg_catalog.routines.Float85();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float85(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Float85 f = new test.generated.pg_catalog.routines.Float85();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float81(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Float81 f = new test.generated.pg_catalog.routines.Float81();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float81(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Float81 f = new test.generated.pg_catalog.routines.Float81();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float81(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Float81 f = new test.generated.pg_catalog.routines.Float81();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float83(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Float83 f = new test.generated.pg_catalog.routines.Float83();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float83(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Float83 f = new test.generated.pg_catalog.routines.Float83();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float83(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Float83 f = new test.generated.pg_catalog.routines.Float83();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float82(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Float82 f = new test.generated.pg_catalog.routines.Float82();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float82(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Float82 f = new test.generated.pg_catalog.routines.Float82();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float82(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Float82 f = new test.generated.pg_catalog.routines.Float82();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_accum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double[] float8Accum(org.jooq.Configuration configuration, java.lang.Double[] __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8Accum f = new test.generated.pg_catalog.routines.Float8Accum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double[]> float8Accum(java.lang.Double[] __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8Accum f = new test.generated.pg_catalog.routines.Float8Accum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double[]> float8Accum(org.jooq.Field<java.lang.Double[]> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8Accum f = new test.generated.pg_catalog.routines.Float8Accum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_avg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8Avg(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8Avg f = new test.generated.pg_catalog.routines.Float8Avg();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8Avg(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8Avg f = new test.generated.pg_catalog.routines.Float8Avg();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8Avg(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8Avg f = new test.generated.pg_catalog.routines.Float8Avg();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_corr
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8Corr(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8Corr f = new test.generated.pg_catalog.routines.Float8Corr();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_corr as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8Corr(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8Corr f = new test.generated.pg_catalog.routines.Float8Corr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_corr as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8Corr(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8Corr f = new test.generated.pg_catalog.routines.Float8Corr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_covar_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8CovarPop(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8CovarPop f = new test.generated.pg_catalog.routines.Float8CovarPop();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_covar_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8CovarPop(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8CovarPop f = new test.generated.pg_catalog.routines.Float8CovarPop();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_covar_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8CovarPop(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8CovarPop f = new test.generated.pg_catalog.routines.Float8CovarPop();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_covar_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8CovarSamp(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8CovarSamp f = new test.generated.pg_catalog.routines.Float8CovarSamp();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_covar_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8CovarSamp(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8CovarSamp f = new test.generated.pg_catalog.routines.Float8CovarSamp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_covar_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8CovarSamp(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8CovarSamp f = new test.generated.pg_catalog.routines.Float8CovarSamp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_regr_accum
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double[] float8RegrAccum(org.jooq.Configuration configuration, java.lang.Double[] __1, java.lang.Double __2, java.lang.Double __3) {
		test.generated.pg_catalog.routines.Float8RegrAccum f = new test.generated.pg_catalog.routines.Float8RegrAccum();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_regr_accum as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Double[]> float8RegrAccum(java.lang.Double[] __1, java.lang.Double __2, java.lang.Double __3) {
		test.generated.pg_catalog.routines.Float8RegrAccum f = new test.generated.pg_catalog.routines.Float8RegrAccum();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_regr_accum as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Double[]> float8RegrAccum(org.jooq.Field<java.lang.Double[]> __1, org.jooq.Field<java.lang.Double> __2, org.jooq.Field<java.lang.Double> __3) {
		test.generated.pg_catalog.routines.Float8RegrAccum f = new test.generated.pg_catalog.routines.Float8RegrAccum();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_regr_avgx
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8RegrAvgx(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrAvgx f = new test.generated.pg_catalog.routines.Float8RegrAvgx();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_regr_avgx as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrAvgx(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrAvgx f = new test.generated.pg_catalog.routines.Float8RegrAvgx();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_regr_avgx as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrAvgx(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8RegrAvgx f = new test.generated.pg_catalog.routines.Float8RegrAvgx();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_regr_avgy
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8RegrAvgy(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrAvgy f = new test.generated.pg_catalog.routines.Float8RegrAvgy();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_regr_avgy as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrAvgy(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrAvgy f = new test.generated.pg_catalog.routines.Float8RegrAvgy();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_regr_avgy as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrAvgy(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8RegrAvgy f = new test.generated.pg_catalog.routines.Float8RegrAvgy();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_regr_intercept
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8RegrIntercept(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrIntercept f = new test.generated.pg_catalog.routines.Float8RegrIntercept();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_regr_intercept as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrIntercept(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrIntercept f = new test.generated.pg_catalog.routines.Float8RegrIntercept();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_regr_intercept as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrIntercept(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8RegrIntercept f = new test.generated.pg_catalog.routines.Float8RegrIntercept();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_regr_r2
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8RegrR2(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrR2 f = new test.generated.pg_catalog.routines.Float8RegrR2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_regr_r2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrR2(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrR2 f = new test.generated.pg_catalog.routines.Float8RegrR2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_regr_r2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrR2(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8RegrR2 f = new test.generated.pg_catalog.routines.Float8RegrR2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_regr_slope
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8RegrSlope(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrSlope f = new test.generated.pg_catalog.routines.Float8RegrSlope();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_regr_slope as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrSlope(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrSlope f = new test.generated.pg_catalog.routines.Float8RegrSlope();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_regr_slope as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrSlope(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8RegrSlope f = new test.generated.pg_catalog.routines.Float8RegrSlope();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_regr_sxx
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8RegrSxx(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrSxx f = new test.generated.pg_catalog.routines.Float8RegrSxx();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_regr_sxx as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrSxx(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrSxx f = new test.generated.pg_catalog.routines.Float8RegrSxx();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_regr_sxx as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrSxx(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8RegrSxx f = new test.generated.pg_catalog.routines.Float8RegrSxx();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_regr_sxy
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8RegrSxy(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrSxy f = new test.generated.pg_catalog.routines.Float8RegrSxy();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_regr_sxy as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrSxy(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrSxy f = new test.generated.pg_catalog.routines.Float8RegrSxy();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_regr_sxy as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrSxy(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8RegrSxy f = new test.generated.pg_catalog.routines.Float8RegrSxy();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_regr_syy
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8RegrSyy(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrSyy f = new test.generated.pg_catalog.routines.Float8RegrSyy();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_regr_syy as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrSyy(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8RegrSyy f = new test.generated.pg_catalog.routines.Float8RegrSyy();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_regr_syy as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8RegrSyy(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8RegrSyy f = new test.generated.pg_catalog.routines.Float8RegrSyy();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_stddev_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8StddevPop(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8StddevPop f = new test.generated.pg_catalog.routines.Float8StddevPop();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8StddevPop(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8StddevPop f = new test.generated.pg_catalog.routines.Float8StddevPop();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8StddevPop(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8StddevPop f = new test.generated.pg_catalog.routines.Float8StddevPop();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_stddev_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8StddevSamp(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8StddevSamp f = new test.generated.pg_catalog.routines.Float8StddevSamp();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8StddevSamp(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8StddevSamp f = new test.generated.pg_catalog.routines.Float8StddevSamp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8StddevSamp(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8StddevSamp f = new test.generated.pg_catalog.routines.Float8StddevSamp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_var_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8VarPop(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8VarPop f = new test.generated.pg_catalog.routines.Float8VarPop();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8VarPop(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8VarPop f = new test.generated.pg_catalog.routines.Float8VarPop();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8VarPop(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8VarPop f = new test.generated.pg_catalog.routines.Float8VarPop();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8_var_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8VarSamp(org.jooq.Configuration configuration, java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8VarSamp f = new test.generated.pg_catalog.routines.Float8VarSamp();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8_var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8VarSamp(java.lang.Double[] __1) {
		test.generated.pg_catalog.routines.Float8VarSamp f = new test.generated.pg_catalog.routines.Float8VarSamp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8_var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8VarSamp(org.jooq.Field<java.lang.Double[]> __1) {
		test.generated.pg_catalog.routines.Float8VarSamp f = new test.generated.pg_catalog.routines.Float8VarSamp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float84div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float84div(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84div f = new test.generated.pg_catalog.routines.Float84div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float84div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float84div(java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84div f = new test.generated.pg_catalog.routines.Float84div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float84div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float84div(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float84div f = new test.generated.pg_catalog.routines.Float84div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float84eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float84eq(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84eq f = new test.generated.pg_catalog.routines.Float84eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float84eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float84eq(java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84eq f = new test.generated.pg_catalog.routines.Float84eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float84eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float84eq(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float84eq f = new test.generated.pg_catalog.routines.Float84eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float84ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float84ge(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84ge f = new test.generated.pg_catalog.routines.Float84ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float84ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float84ge(java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84ge f = new test.generated.pg_catalog.routines.Float84ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float84ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float84ge(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float84ge f = new test.generated.pg_catalog.routines.Float84ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float84gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float84gt(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84gt f = new test.generated.pg_catalog.routines.Float84gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float84gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float84gt(java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84gt f = new test.generated.pg_catalog.routines.Float84gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float84gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float84gt(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float84gt f = new test.generated.pg_catalog.routines.Float84gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float84le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float84le(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84le f = new test.generated.pg_catalog.routines.Float84le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float84le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float84le(java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84le f = new test.generated.pg_catalog.routines.Float84le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float84le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float84le(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float84le f = new test.generated.pg_catalog.routines.Float84le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float84lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float84lt(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84lt f = new test.generated.pg_catalog.routines.Float84lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float84lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float84lt(java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84lt f = new test.generated.pg_catalog.routines.Float84lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float84lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float84lt(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float84lt f = new test.generated.pg_catalog.routines.Float84lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float84mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float84mi(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84mi f = new test.generated.pg_catalog.routines.Float84mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float84mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float84mi(java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84mi f = new test.generated.pg_catalog.routines.Float84mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float84mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float84mi(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float84mi f = new test.generated.pg_catalog.routines.Float84mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float84mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float84mul(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84mul f = new test.generated.pg_catalog.routines.Float84mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float84mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float84mul(java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84mul f = new test.generated.pg_catalog.routines.Float84mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float84mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float84mul(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float84mul f = new test.generated.pg_catalog.routines.Float84mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float84ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float84ne(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84ne f = new test.generated.pg_catalog.routines.Float84ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float84ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float84ne(java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84ne f = new test.generated.pg_catalog.routines.Float84ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float84ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float84ne(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float84ne f = new test.generated.pg_catalog.routines.Float84ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float84pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float84pl(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84pl f = new test.generated.pg_catalog.routines.Float84pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float84pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float84pl(java.lang.Double __1, java.lang.Float __2) {
		test.generated.pg_catalog.routines.Float84pl f = new test.generated.pg_catalog.routines.Float84pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float84pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float84pl(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Float> __2) {
		test.generated.pg_catalog.routines.Float84pl f = new test.generated.pg_catalog.routines.Float84pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8abs
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8abs(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Float8abs f = new test.generated.pg_catalog.routines.Float8abs();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8abs(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Float8abs f = new test.generated.pg_catalog.routines.Float8abs();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8abs(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Float8abs f = new test.generated.pg_catalog.routines.Float8abs();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8div(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8div f = new test.generated.pg_catalog.routines.Float8div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float8div(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8div f = new test.generated.pg_catalog.routines.Float8div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float8div(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8div f = new test.generated.pg_catalog.routines.Float8div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float8eq(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8eq f = new test.generated.pg_catalog.routines.Float8eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float8eq(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8eq f = new test.generated.pg_catalog.routines.Float8eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float8eq(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8eq f = new test.generated.pg_catalog.routines.Float8eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float8ge(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8ge f = new test.generated.pg_catalog.routines.Float8ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float8ge(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8ge f = new test.generated.pg_catalog.routines.Float8ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float8ge(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8ge f = new test.generated.pg_catalog.routines.Float8ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float8gt(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8gt f = new test.generated.pg_catalog.routines.Float8gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float8gt(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8gt f = new test.generated.pg_catalog.routines.Float8gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float8gt(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8gt f = new test.generated.pg_catalog.routines.Float8gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8in(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Float8in f = new test.generated.pg_catalog.routines.Float8in();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8in(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Float8in f = new test.generated.pg_catalog.routines.Float8in();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8in(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Float8in f = new test.generated.pg_catalog.routines.Float8in();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8larger(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8larger f = new test.generated.pg_catalog.routines.Float8larger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float8larger(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8larger f = new test.generated.pg_catalog.routines.Float8larger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float8larger(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8larger f = new test.generated.pg_catalog.routines.Float8larger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float8le(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8le f = new test.generated.pg_catalog.routines.Float8le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float8le(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8le f = new test.generated.pg_catalog.routines.Float8le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float8le(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8le f = new test.generated.pg_catalog.routines.Float8le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float8lt(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8lt f = new test.generated.pg_catalog.routines.Float8lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float8lt(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8lt f = new test.generated.pg_catalog.routines.Float8lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float8lt(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8lt f = new test.generated.pg_catalog.routines.Float8lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8mi(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8mi f = new test.generated.pg_catalog.routines.Float8mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float8mi(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8mi f = new test.generated.pg_catalog.routines.Float8mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float8mi(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8mi f = new test.generated.pg_catalog.routines.Float8mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8mul(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8mul f = new test.generated.pg_catalog.routines.Float8mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float8mul(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8mul f = new test.generated.pg_catalog.routines.Float8mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float8mul(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8mul f = new test.generated.pg_catalog.routines.Float8mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean float8ne(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8ne f = new test.generated.pg_catalog.routines.Float8ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float8ne(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8ne f = new test.generated.pg_catalog.routines.Float8ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> float8ne(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8ne f = new test.generated.pg_catalog.routines.Float8ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object float8out(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Float8out f = new test.generated.pg_catalog.routines.Float8out();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> float8out(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Float8out f = new test.generated.pg_catalog.routines.Float8out();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> float8out(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Float8out f = new test.generated.pg_catalog.routines.Float8out();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8pl(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8pl f = new test.generated.pg_catalog.routines.Float8pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float8pl(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8pl f = new test.generated.pg_catalog.routines.Float8pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float8pl(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8pl f = new test.generated.pg_catalog.routines.Float8pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8recv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Float8recv f = new test.generated.pg_catalog.routines.Float8recv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8recv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Float8recv f = new test.generated.pg_catalog.routines.Float8recv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8recv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Float8recv f = new test.generated.pg_catalog.routines.Float8recv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] float8send(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Float8send f = new test.generated.pg_catalog.routines.Float8send();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> float8send(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Float8send f = new test.generated.pg_catalog.routines.Float8send();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> float8send(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Float8send f = new test.generated.pg_catalog.routines.Float8send();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8smaller(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8smaller f = new test.generated.pg_catalog.routines.Float8smaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float8smaller(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Float8smaller f = new test.generated.pg_catalog.routines.Float8smaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> float8smaller(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Float8smaller f = new test.generated.pg_catalog.routines.Float8smaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8um
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8um(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Float8um f = new test.generated.pg_catalog.routines.Float8um();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8um as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8um(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Float8um f = new test.generated.pg_catalog.routines.Float8um();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8um as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8um(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Float8um f = new test.generated.pg_catalog.routines.Float8um();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.float8up
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double float8up(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Float8up f = new test.generated.pg_catalog.routines.Float8up();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.float8up as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8up(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Float8up f = new test.generated.pg_catalog.routines.Float8up();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.float8up as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> float8up(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Float8up f = new test.generated.pg_catalog.routines.Float8up();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.floor
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal floor1(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Floor1 f = new test.generated.pg_catalog.routines.Floor1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.floor as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> floor1(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Floor1 f = new test.generated.pg_catalog.routines.Floor1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.floor as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> floor1(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Floor1 f = new test.generated.pg_catalog.routines.Floor1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.floor
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double floor2(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Floor2 f = new test.generated.pg_catalog.routines.Floor2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.floor as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> floor2(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Floor2 f = new test.generated.pg_catalog.routines.Floor2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.floor as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> floor2(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Floor2 f = new test.generated.pg_catalog.routines.Floor2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.flt4_mul_cash
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal flt4MulCash(org.jooq.Configuration configuration, java.lang.Float __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Flt4MulCash f = new test.generated.pg_catalog.routines.Flt4MulCash();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.flt4_mul_cash as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> flt4MulCash(java.lang.Float __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Flt4MulCash f = new test.generated.pg_catalog.routines.Flt4MulCash();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.flt4_mul_cash as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> flt4MulCash(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.Flt4MulCash f = new test.generated.pg_catalog.routines.Flt4MulCash();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.flt8_mul_cash
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal flt8MulCash(org.jooq.Configuration configuration, java.lang.Double __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Flt8MulCash f = new test.generated.pg_catalog.routines.Flt8MulCash();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.flt8_mul_cash as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> flt8MulCash(java.lang.Double __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Flt8MulCash f = new test.generated.pg_catalog.routines.Flt8MulCash();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.flt8_mul_cash as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> flt8MulCash(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.Flt8MulCash f = new test.generated.pg_catalog.routines.Flt8MulCash();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.fmgr_c_validator
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void fmgrCValidator(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.FmgrCValidator p = new test.generated.pg_catalog.routines.FmgrCValidator();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.fmgr_internal_validator
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void fmgrInternalValidator(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.FmgrInternalValidator p = new test.generated.pg_catalog.routines.FmgrInternalValidator();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.fmgr_sql_validator
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void fmgrSqlValidator(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.FmgrSqlValidator p = new test.generated.pg_catalog.routines.FmgrSqlValidator();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.format_type
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String formatType(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.FormatType f = new test.generated.pg_catalog.routines.FormatType();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.format_type as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> formatType(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.FormatType f = new test.generated.pg_catalog.routines.FormatType();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.format_type as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> formatType(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.FormatType f = new test.generated.pg_catalog.routines.FormatType();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gb18030_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void gb18030ToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Gb18030ToUtf8 p = new test.generated.pg_catalog.routines.Gb18030ToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.gbk_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void gbkToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.GbkToUtf8 p = new test.generated.pg_catalog.routines.GbkToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.generate_series
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer generateSeries1(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.GenerateSeries1 f = new test.generated.pg_catalog.routines.GenerateSeries1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.generate_series as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Integer> generateSeries1(java.lang.Integer __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.GenerateSeries1 f = new test.generated.pg_catalog.routines.GenerateSeries1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.generate_series as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Integer> generateSeries1(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.GenerateSeries1 f = new test.generated.pg_catalog.routines.GenerateSeries1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.generate_series
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp generateSeries5(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GenerateSeries5 f = new test.generated.pg_catalog.routines.GenerateSeries5();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.generate_series as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Timestamp> generateSeries5(java.sql.Timestamp __1, java.sql.Timestamp __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GenerateSeries5 f = new test.generated.pg_catalog.routines.GenerateSeries5();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.generate_series as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Timestamp> generateSeries5(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.GenerateSeries5 f = new test.generated.pg_catalog.routines.GenerateSeries5();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.generate_series
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long generateSeries4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.GenerateSeries4 f = new test.generated.pg_catalog.routines.GenerateSeries4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.generate_series as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> generateSeries4(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.GenerateSeries4 f = new test.generated.pg_catalog.routines.GenerateSeries4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.generate_series as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> generateSeries4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.GenerateSeries4 f = new test.generated.pg_catalog.routines.GenerateSeries4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.generate_series
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer generateSeries2(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.GenerateSeries2 f = new test.generated.pg_catalog.routines.GenerateSeries2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.generate_series as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> generateSeries2(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.GenerateSeries2 f = new test.generated.pg_catalog.routines.GenerateSeries2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.generate_series as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> generateSeries2(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.GenerateSeries2 f = new test.generated.pg_catalog.routines.GenerateSeries2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.generate_series
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long generateSeries3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.Long __3) {
		test.generated.pg_catalog.routines.GenerateSeries3 f = new test.generated.pg_catalog.routines.GenerateSeries3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.generate_series as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Long> generateSeries3(java.lang.Long __1, java.lang.Long __2, java.lang.Long __3) {
		test.generated.pg_catalog.routines.GenerateSeries3 f = new test.generated.pg_catalog.routines.GenerateSeries3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.generate_series as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Long> generateSeries3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Long> __3) {
		test.generated.pg_catalog.routines.GenerateSeries3 f = new test.generated.pg_catalog.routines.GenerateSeries3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.generate_series
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp generateSeries6(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GenerateSeries6 f = new test.generated.pg_catalog.routines.GenerateSeries6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.generate_series as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Timestamp> generateSeries6(java.sql.Timestamp __1, java.sql.Timestamp __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GenerateSeries6 f = new test.generated.pg_catalog.routines.GenerateSeries6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.generate_series as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Timestamp> generateSeries6(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.GenerateSeries6 f = new test.generated.pg_catalog.routines.GenerateSeries6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.generate_subscripts
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer generateSubscripts2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.GenerateSubscripts2 f = new test.generated.pg_catalog.routines.GenerateSubscripts2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.generate_subscripts as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> generateSubscripts2(java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.GenerateSubscripts2 f = new test.generated.pg_catalog.routines.GenerateSubscripts2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.generate_subscripts as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> generateSubscripts2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.GenerateSubscripts2 f = new test.generated.pg_catalog.routines.GenerateSubscripts2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.generate_subscripts
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer generateSubscripts1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.GenerateSubscripts1 f = new test.generated.pg_catalog.routines.GenerateSubscripts1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.generate_subscripts as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Integer> generateSubscripts1(java.lang.Object __1, java.lang.Integer __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.GenerateSubscripts1 f = new test.generated.pg_catalog.routines.GenerateSubscripts1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.generate_subscripts as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Integer> generateSubscripts1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Boolean> __3) {
		test.generated.pg_catalog.routines.GenerateSubscripts1 f = new test.generated.pg_catalog.routines.GenerateSubscripts1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.get_bit
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer getBit2(org.jooq.Configuration configuration, byte[] __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.GetBit2 f = new test.generated.pg_catalog.routines.GetBit2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.get_bit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> getBit2(byte[] __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.GetBit2 f = new test.generated.pg_catalog.routines.GetBit2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.get_bit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> getBit2(org.jooq.Field<byte[]> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.GetBit2 f = new test.generated.pg_catalog.routines.GetBit2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.get_bit
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer getBit1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.GetBit1 f = new test.generated.pg_catalog.routines.GetBit1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.get_bit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> getBit1(java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.GetBit1 f = new test.generated.pg_catalog.routines.GetBit1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.get_bit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> getBit1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.GetBit1 f = new test.generated.pg_catalog.routines.GetBit1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.get_byte
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer getByte(org.jooq.Configuration configuration, byte[] __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.GetByte f = new test.generated.pg_catalog.routines.GetByte();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.get_byte as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> getByte(byte[] __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.GetByte f = new test.generated.pg_catalog.routines.GetByte();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.get_byte as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> getByte(org.jooq.Field<byte[]> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.GetByte f = new test.generated.pg_catalog.routines.GetByte();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.get_current_ts_config
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object getCurrentTsConfig(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.GetCurrentTsConfig f = new test.generated.pg_catalog.routines.GetCurrentTsConfig();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.get_current_ts_config as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> getCurrentTsConfig() {
		test.generated.pg_catalog.routines.GetCurrentTsConfig f = new test.generated.pg_catalog.routines.GetCurrentTsConfig();

		return f.asField();
	}

	/**
	 * Call pg_catalog.getdatabaseencoding
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String getdatabaseencoding(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.Getdatabaseencoding f = new test.generated.pg_catalog.routines.Getdatabaseencoding();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.getdatabaseencoding as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> getdatabaseencoding() {
		test.generated.pg_catalog.routines.Getdatabaseencoding f = new test.generated.pg_catalog.routines.Getdatabaseencoding();

		return f.asField();
	}

	/**
	 * Call pg_catalog.getpgusername
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String getpgusername(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.Getpgusername f = new test.generated.pg_catalog.routines.Getpgusername();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.getpgusername as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> getpgusername() {
		test.generated.pg_catalog.routines.Getpgusername f = new test.generated.pg_catalog.routines.Getpgusername();

		return f.asField();
	}

	/**
	 * Call pg_catalog.gin_cmp_prefix
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer ginCmpPrefix(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.Short __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.GinCmpPrefix f = new test.generated.pg_catalog.routines.GinCmpPrefix();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gin_cmp_prefix as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Integer> ginCmpPrefix(java.lang.String __1, java.lang.String __2, java.lang.Short __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.GinCmpPrefix f = new test.generated.pg_catalog.routines.GinCmpPrefix();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gin_cmp_prefix as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Integer> ginCmpPrefix(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.Short> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.GinCmpPrefix f = new test.generated.pg_catalog.routines.GinCmpPrefix();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gin_cmp_tslexeme
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer ginCmpTslexeme(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.GinCmpTslexeme f = new test.generated.pg_catalog.routines.GinCmpTslexeme();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gin_cmp_tslexeme as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> ginCmpTslexeme(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.GinCmpTslexeme f = new test.generated.pg_catalog.routines.GinCmpTslexeme();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gin_cmp_tslexeme as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> ginCmpTslexeme(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.GinCmpTslexeme f = new test.generated.pg_catalog.routines.GinCmpTslexeme();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gin_extract_tsquery
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object ginExtractTsquery(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Short __3, java.lang.Object __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GinExtractTsquery f = new test.generated.pg_catalog.routines.GinExtractTsquery();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gin_extract_tsquery as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Object> ginExtractTsquery(java.lang.Object __1, java.lang.Object __2, java.lang.Short __3, java.lang.Object __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GinExtractTsquery f = new test.generated.pg_catalog.routines.GinExtractTsquery();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gin_extract_tsquery as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Object> ginExtractTsquery(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Short> __3, org.jooq.Field<java.lang.Object> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.GinExtractTsquery f = new test.generated.pg_catalog.routines.GinExtractTsquery();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gin_extract_tsvector
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object ginExtractTsvector(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GinExtractTsvector f = new test.generated.pg_catalog.routines.GinExtractTsvector();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gin_extract_tsvector as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> ginExtractTsvector(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GinExtractTsvector f = new test.generated.pg_catalog.routines.GinExtractTsvector();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gin_extract_tsvector as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> ginExtractTsvector(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.GinExtractTsvector f = new test.generated.pg_catalog.routines.GinExtractTsvector();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gin_tsquery_consistent
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean ginTsqueryConsistent(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Short __2, java.lang.Object __3, java.lang.Integer __4, java.lang.Object __5, java.lang.Object __6) {
		test.generated.pg_catalog.routines.GinTsqueryConsistent f = new test.generated.pg_catalog.routines.GinTsqueryConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gin_tsquery_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 */
	public static org.jooq.Field<java.lang.Boolean> ginTsqueryConsistent(java.lang.Object __1, java.lang.Short __2, java.lang.Object __3, java.lang.Integer __4, java.lang.Object __5, java.lang.Object __6) {
		test.generated.pg_catalog.routines.GinTsqueryConsistent f = new test.generated.pg_catalog.routines.GinTsqueryConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gin_tsquery_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 */
	public static org.jooq.Field<java.lang.Boolean> ginTsqueryConsistent(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Short> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4, org.jooq.Field<java.lang.Object> __5, org.jooq.Field<java.lang.Object> __6) {
		test.generated.pg_catalog.routines.GinTsqueryConsistent f = new test.generated.pg_catalog.routines.GinTsqueryConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ginarrayconsistent
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean ginarrayconsistent(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Short __2, java.lang.Object __3, java.lang.Integer __4, java.lang.Object __5, java.lang.Object __6) {
		test.generated.pg_catalog.routines.Ginarrayconsistent f = new test.generated.pg_catalog.routines.Ginarrayconsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ginarrayconsistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 */
	public static org.jooq.Field<java.lang.Boolean> ginarrayconsistent(java.lang.Object __1, java.lang.Short __2, java.lang.Object __3, java.lang.Integer __4, java.lang.Object __5, java.lang.Object __6) {
		test.generated.pg_catalog.routines.Ginarrayconsistent f = new test.generated.pg_catalog.routines.Ginarrayconsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ginarrayconsistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 */
	public static org.jooq.Field<java.lang.Boolean> ginarrayconsistent(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Short> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4, org.jooq.Field<java.lang.Object> __5, org.jooq.Field<java.lang.Object> __6) {
		test.generated.pg_catalog.routines.Ginarrayconsistent f = new test.generated.pg_catalog.routines.Ginarrayconsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ginarrayextract
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object ginarrayextract(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Ginarrayextract f = new test.generated.pg_catalog.routines.Ginarrayextract();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ginarrayextract as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> ginarrayextract(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Ginarrayextract f = new test.generated.pg_catalog.routines.Ginarrayextract();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ginarrayextract as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> ginarrayextract(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Ginarrayextract f = new test.generated.pg_catalog.routines.Ginarrayextract();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ginbeginscan
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object ginbeginscan(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Ginbeginscan f = new test.generated.pg_catalog.routines.Ginbeginscan();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ginbeginscan as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> ginbeginscan(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Ginbeginscan f = new test.generated.pg_catalog.routines.Ginbeginscan();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ginbeginscan as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> ginbeginscan(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.Ginbeginscan f = new test.generated.pg_catalog.routines.Ginbeginscan();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ginbuild
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object ginbuild(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Ginbuild f = new test.generated.pg_catalog.routines.Ginbuild();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ginbuild as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> ginbuild(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Ginbuild f = new test.generated.pg_catalog.routines.Ginbuild();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ginbuild as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> ginbuild(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.Ginbuild f = new test.generated.pg_catalog.routines.Ginbuild();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ginbulkdelete
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object ginbulkdelete(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Ginbulkdelete f = new test.generated.pg_catalog.routines.Ginbulkdelete();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ginbulkdelete as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> ginbulkdelete(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Ginbulkdelete f = new test.generated.pg_catalog.routines.Ginbulkdelete();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ginbulkdelete as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> ginbulkdelete(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.Ginbulkdelete f = new test.generated.pg_catalog.routines.Ginbulkdelete();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gincostestimate
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @param __6 IN parameter
	 * @param __7 IN parameter
	 * @param __8 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void gincostestimate(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4, java.lang.Object __5, java.lang.Object __6, java.lang.Object __7, java.lang.Object __8) {
		test.generated.pg_catalog.routines.Gincostestimate p = new test.generated.pg_catalog.routines.Gincostestimate();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);
		p.set__6(__6);
		p.set__7(__7);
		p.set__8(__8);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.ginendscan
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void ginendscan(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Ginendscan p = new test.generated.pg_catalog.routines.Ginendscan();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.gingetbitmap
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long gingetbitmap(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Gingetbitmap f = new test.generated.pg_catalog.routines.Gingetbitmap();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gingetbitmap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> gingetbitmap(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Gingetbitmap f = new test.generated.pg_catalog.routines.Gingetbitmap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gingetbitmap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> gingetbitmap(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Gingetbitmap f = new test.generated.pg_catalog.routines.Gingetbitmap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gininsert
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean gininsert(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4, java.lang.Object __5, java.lang.Object __6) {
		test.generated.pg_catalog.routines.Gininsert f = new test.generated.pg_catalog.routines.Gininsert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gininsert as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 */
	public static org.jooq.Field<java.lang.Boolean> gininsert(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4, java.lang.Object __5, java.lang.Object __6) {
		test.generated.pg_catalog.routines.Gininsert f = new test.generated.pg_catalog.routines.Gininsert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gininsert as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 */
	public static org.jooq.Field<java.lang.Boolean> gininsert(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4, org.jooq.Field<java.lang.Object> __5, org.jooq.Field<java.lang.Object> __6) {
		test.generated.pg_catalog.routines.Gininsert f = new test.generated.pg_catalog.routines.Gininsert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ginmarkpos
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void ginmarkpos(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Ginmarkpos p = new test.generated.pg_catalog.routines.Ginmarkpos();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.ginoptions
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] ginoptions(org.jooq.Configuration configuration, java.lang.String[] __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Ginoptions f = new test.generated.pg_catalog.routines.Ginoptions();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ginoptions as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> ginoptions(java.lang.String[] __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Ginoptions f = new test.generated.pg_catalog.routines.Ginoptions();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ginoptions as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> ginoptions(org.jooq.Field<java.lang.String[]> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.Ginoptions f = new test.generated.pg_catalog.routines.Ginoptions();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ginqueryarrayextract
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object ginqueryarrayextract(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Short __3, java.lang.Object __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Ginqueryarrayextract f = new test.generated.pg_catalog.routines.Ginqueryarrayextract();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ginqueryarrayextract as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Object> ginqueryarrayextract(java.lang.Object __1, java.lang.Object __2, java.lang.Short __3, java.lang.Object __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Ginqueryarrayextract f = new test.generated.pg_catalog.routines.Ginqueryarrayextract();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ginqueryarrayextract as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Object> ginqueryarrayextract(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Short> __3, org.jooq.Field<java.lang.Object> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Ginqueryarrayextract f = new test.generated.pg_catalog.routines.Ginqueryarrayextract();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ginrescan
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void ginrescan(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Ginrescan p = new test.generated.pg_catalog.routines.Ginrescan();
		p.set__1(__1);
		p.set__2(__2);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.ginrestrpos
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void ginrestrpos(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Ginrestrpos p = new test.generated.pg_catalog.routines.Ginrestrpos();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.ginvacuumcleanup
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object ginvacuumcleanup(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Ginvacuumcleanup f = new test.generated.pg_catalog.routines.Ginvacuumcleanup();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ginvacuumcleanup as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> ginvacuumcleanup(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Ginvacuumcleanup f = new test.generated.pg_catalog.routines.Ginvacuumcleanup();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ginvacuumcleanup as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> ginvacuumcleanup(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Ginvacuumcleanup f = new test.generated.pg_catalog.routines.Ginvacuumcleanup();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_box_compress
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistBoxCompress(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.GistBoxCompress f = new test.generated.pg_catalog.routines.GistBoxCompress();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_box_compress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gistBoxCompress(java.lang.Object __1) {
		test.generated.pg_catalog.routines.GistBoxCompress f = new test.generated.pg_catalog.routines.GistBoxCompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_box_compress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gistBoxCompress(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.GistBoxCompress f = new test.generated.pg_catalog.routines.GistBoxCompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_box_consistent
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean gistBoxConsistent(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3, java.lang.Long __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GistBoxConsistent f = new test.generated.pg_catalog.routines.GistBoxConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_box_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Boolean> gistBoxConsistent(java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3, java.lang.Long __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GistBoxConsistent f = new test.generated.pg_catalog.routines.GistBoxConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_box_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Boolean> gistBoxConsistent(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Integer> __3, org.jooq.Field<java.lang.Long> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.GistBoxConsistent f = new test.generated.pg_catalog.routines.GistBoxConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_box_decompress
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistBoxDecompress(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.GistBoxDecompress f = new test.generated.pg_catalog.routines.GistBoxDecompress();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_box_decompress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gistBoxDecompress(java.lang.Object __1) {
		test.generated.pg_catalog.routines.GistBoxDecompress f = new test.generated.pg_catalog.routines.GistBoxDecompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_box_decompress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gistBoxDecompress(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.GistBoxDecompress f = new test.generated.pg_catalog.routines.GistBoxDecompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_box_penalty
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistBoxPenalty(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GistBoxPenalty f = new test.generated.pg_catalog.routines.GistBoxPenalty();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_box_penalty as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gistBoxPenalty(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GistBoxPenalty f = new test.generated.pg_catalog.routines.GistBoxPenalty();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_box_penalty as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gistBoxPenalty(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.GistBoxPenalty f = new test.generated.pg_catalog.routines.GistBoxPenalty();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_box_picksplit
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistBoxPicksplit(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GistBoxPicksplit f = new test.generated.pg_catalog.routines.GistBoxPicksplit();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_box_picksplit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gistBoxPicksplit(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GistBoxPicksplit f = new test.generated.pg_catalog.routines.GistBoxPicksplit();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_box_picksplit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gistBoxPicksplit(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.GistBoxPicksplit f = new test.generated.pg_catalog.routines.GistBoxPicksplit();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_box_same
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistBoxSame(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GistBoxSame f = new test.generated.pg_catalog.routines.GistBoxSame();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_box_same as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gistBoxSame(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GistBoxSame f = new test.generated.pg_catalog.routines.GistBoxSame();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_box_same as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gistBoxSame(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.GistBoxSame f = new test.generated.pg_catalog.routines.GistBoxSame();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_box_union
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistBoxUnion(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GistBoxUnion f = new test.generated.pg_catalog.routines.GistBoxUnion();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_box_union as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gistBoxUnion(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GistBoxUnion f = new test.generated.pg_catalog.routines.GistBoxUnion();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_box_union as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gistBoxUnion(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.GistBoxUnion f = new test.generated.pg_catalog.routines.GistBoxUnion();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_circle_compress
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistCircleCompress(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.GistCircleCompress f = new test.generated.pg_catalog.routines.GistCircleCompress();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_circle_compress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gistCircleCompress(java.lang.Object __1) {
		test.generated.pg_catalog.routines.GistCircleCompress f = new test.generated.pg_catalog.routines.GistCircleCompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_circle_compress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gistCircleCompress(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.GistCircleCompress f = new test.generated.pg_catalog.routines.GistCircleCompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_circle_consistent
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean gistCircleConsistent(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3, java.lang.Long __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GistCircleConsistent f = new test.generated.pg_catalog.routines.GistCircleConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_circle_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Boolean> gistCircleConsistent(java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3, java.lang.Long __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GistCircleConsistent f = new test.generated.pg_catalog.routines.GistCircleConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_circle_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Boolean> gistCircleConsistent(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Integer> __3, org.jooq.Field<java.lang.Long> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.GistCircleConsistent f = new test.generated.pg_catalog.routines.GistCircleConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_point_compress
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistPointCompress(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.GistPointCompress f = new test.generated.pg_catalog.routines.GistPointCompress();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_point_compress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gistPointCompress(java.lang.Object __1) {
		test.generated.pg_catalog.routines.GistPointCompress f = new test.generated.pg_catalog.routines.GistPointCompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_point_compress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gistPointCompress(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.GistPointCompress f = new test.generated.pg_catalog.routines.GistPointCompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_point_consistent
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean gistPointConsistent(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3, java.lang.Long __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GistPointConsistent f = new test.generated.pg_catalog.routines.GistPointConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_point_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Boolean> gistPointConsistent(java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3, java.lang.Long __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GistPointConsistent f = new test.generated.pg_catalog.routines.GistPointConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_point_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Boolean> gistPointConsistent(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Integer> __3, org.jooq.Field<java.lang.Long> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.GistPointConsistent f = new test.generated.pg_catalog.routines.GistPointConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_poly_compress
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistPolyCompress(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.GistPolyCompress f = new test.generated.pg_catalog.routines.GistPolyCompress();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_poly_compress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gistPolyCompress(java.lang.Object __1) {
		test.generated.pg_catalog.routines.GistPolyCompress f = new test.generated.pg_catalog.routines.GistPolyCompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_poly_compress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gistPolyCompress(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.GistPolyCompress f = new test.generated.pg_catalog.routines.GistPolyCompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gist_poly_consistent
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean gistPolyConsistent(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3, java.lang.Long __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GistPolyConsistent f = new test.generated.pg_catalog.routines.GistPolyConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gist_poly_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Boolean> gistPolyConsistent(java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3, java.lang.Long __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GistPolyConsistent f = new test.generated.pg_catalog.routines.GistPolyConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gist_poly_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Boolean> gistPolyConsistent(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Integer> __3, org.jooq.Field<java.lang.Long> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.GistPolyConsistent f = new test.generated.pg_catalog.routines.GistPolyConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gistbeginscan
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistbeginscan(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Gistbeginscan f = new test.generated.pg_catalog.routines.Gistbeginscan();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gistbeginscan as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gistbeginscan(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Gistbeginscan f = new test.generated.pg_catalog.routines.Gistbeginscan();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gistbeginscan as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gistbeginscan(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.Gistbeginscan f = new test.generated.pg_catalog.routines.Gistbeginscan();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gistbuild
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistbuild(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Gistbuild f = new test.generated.pg_catalog.routines.Gistbuild();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gistbuild as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gistbuild(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Gistbuild f = new test.generated.pg_catalog.routines.Gistbuild();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gistbuild as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gistbuild(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.Gistbuild f = new test.generated.pg_catalog.routines.Gistbuild();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gistbulkdelete
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistbulkdelete(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Gistbulkdelete f = new test.generated.pg_catalog.routines.Gistbulkdelete();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gistbulkdelete as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> gistbulkdelete(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Gistbulkdelete f = new test.generated.pg_catalog.routines.Gistbulkdelete();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gistbulkdelete as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> gistbulkdelete(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.Gistbulkdelete f = new test.generated.pg_catalog.routines.Gistbulkdelete();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gistcostestimate
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @param __6 IN parameter
	 * @param __7 IN parameter
	 * @param __8 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void gistcostestimate(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4, java.lang.Object __5, java.lang.Object __6, java.lang.Object __7, java.lang.Object __8) {
		test.generated.pg_catalog.routines.Gistcostestimate p = new test.generated.pg_catalog.routines.Gistcostestimate();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);
		p.set__6(__6);
		p.set__7(__7);
		p.set__8(__8);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.gistendscan
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void gistendscan(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Gistendscan p = new test.generated.pg_catalog.routines.Gistendscan();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.gistgetbitmap
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long gistgetbitmap(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Gistgetbitmap f = new test.generated.pg_catalog.routines.Gistgetbitmap();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gistgetbitmap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> gistgetbitmap(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Gistgetbitmap f = new test.generated.pg_catalog.routines.Gistgetbitmap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gistgetbitmap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> gistgetbitmap(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Gistgetbitmap f = new test.generated.pg_catalog.routines.Gistgetbitmap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gistgettuple
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean gistgettuple(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Gistgettuple f = new test.generated.pg_catalog.routines.Gistgettuple();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gistgettuple as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> gistgettuple(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Gistgettuple f = new test.generated.pg_catalog.routines.Gistgettuple();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gistgettuple as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> gistgettuple(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Gistgettuple f = new test.generated.pg_catalog.routines.Gistgettuple();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gistinsert
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean gistinsert(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4, java.lang.Object __5, java.lang.Object __6) {
		test.generated.pg_catalog.routines.Gistinsert f = new test.generated.pg_catalog.routines.Gistinsert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gistinsert as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 */
	public static org.jooq.Field<java.lang.Boolean> gistinsert(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4, java.lang.Object __5, java.lang.Object __6) {
		test.generated.pg_catalog.routines.Gistinsert f = new test.generated.pg_catalog.routines.Gistinsert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gistinsert as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 */
	public static org.jooq.Field<java.lang.Boolean> gistinsert(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4, org.jooq.Field<java.lang.Object> __5, org.jooq.Field<java.lang.Object> __6) {
		test.generated.pg_catalog.routines.Gistinsert f = new test.generated.pg_catalog.routines.Gistinsert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gistmarkpos
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void gistmarkpos(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Gistmarkpos p = new test.generated.pg_catalog.routines.Gistmarkpos();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.gistoptions
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] gistoptions(org.jooq.Configuration configuration, java.lang.String[] __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Gistoptions f = new test.generated.pg_catalog.routines.Gistoptions();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gistoptions as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> gistoptions(java.lang.String[] __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Gistoptions f = new test.generated.pg_catalog.routines.Gistoptions();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gistoptions as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> gistoptions(org.jooq.Field<java.lang.String[]> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.Gistoptions f = new test.generated.pg_catalog.routines.Gistoptions();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gistrescan
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void gistrescan(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Gistrescan p = new test.generated.pg_catalog.routines.Gistrescan();
		p.set__1(__1);
		p.set__2(__2);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.gistrestrpos
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void gistrestrpos(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Gistrestrpos p = new test.generated.pg_catalog.routines.Gistrestrpos();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.gistvacuumcleanup
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gistvacuumcleanup(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Gistvacuumcleanup f = new test.generated.pg_catalog.routines.Gistvacuumcleanup();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gistvacuumcleanup as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gistvacuumcleanup(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Gistvacuumcleanup f = new test.generated.pg_catalog.routines.Gistvacuumcleanup();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gistvacuumcleanup as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gistvacuumcleanup(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Gistvacuumcleanup f = new test.generated.pg_catalog.routines.Gistvacuumcleanup();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsquery_compress
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsqueryCompress(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.GtsqueryCompress f = new test.generated.pg_catalog.routines.GtsqueryCompress();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsquery_compress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gtsqueryCompress(java.lang.Object __1) {
		test.generated.pg_catalog.routines.GtsqueryCompress f = new test.generated.pg_catalog.routines.GtsqueryCompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsquery_compress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gtsqueryCompress(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.GtsqueryCompress f = new test.generated.pg_catalog.routines.GtsqueryCompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsquery_consistent
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean gtsqueryConsistent(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3, java.lang.Long __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GtsqueryConsistent f = new test.generated.pg_catalog.routines.GtsqueryConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsquery_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Boolean> gtsqueryConsistent(java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3, java.lang.Long __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GtsqueryConsistent f = new test.generated.pg_catalog.routines.GtsqueryConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsquery_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Boolean> gtsqueryConsistent(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Integer> __3, org.jooq.Field<java.lang.Long> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.GtsqueryConsistent f = new test.generated.pg_catalog.routines.GtsqueryConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsquery_decompress
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsqueryDecompress(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.GtsqueryDecompress f = new test.generated.pg_catalog.routines.GtsqueryDecompress();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsquery_decompress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gtsqueryDecompress(java.lang.Object __1) {
		test.generated.pg_catalog.routines.GtsqueryDecompress f = new test.generated.pg_catalog.routines.GtsqueryDecompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsquery_decompress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gtsqueryDecompress(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.GtsqueryDecompress f = new test.generated.pg_catalog.routines.GtsqueryDecompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsquery_penalty
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsqueryPenalty(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GtsqueryPenalty f = new test.generated.pg_catalog.routines.GtsqueryPenalty();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsquery_penalty as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gtsqueryPenalty(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GtsqueryPenalty f = new test.generated.pg_catalog.routines.GtsqueryPenalty();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsquery_penalty as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gtsqueryPenalty(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.GtsqueryPenalty f = new test.generated.pg_catalog.routines.GtsqueryPenalty();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsquery_picksplit
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsqueryPicksplit(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GtsqueryPicksplit f = new test.generated.pg_catalog.routines.GtsqueryPicksplit();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsquery_picksplit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gtsqueryPicksplit(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GtsqueryPicksplit f = new test.generated.pg_catalog.routines.GtsqueryPicksplit();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsquery_picksplit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gtsqueryPicksplit(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.GtsqueryPicksplit f = new test.generated.pg_catalog.routines.GtsqueryPicksplit();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsquery_same
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsquerySame(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GtsquerySame f = new test.generated.pg_catalog.routines.GtsquerySame();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsquery_same as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gtsquerySame(java.lang.Long __1, java.lang.Long __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GtsquerySame f = new test.generated.pg_catalog.routines.GtsquerySame();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsquery_same as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gtsquerySame(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.GtsquerySame f = new test.generated.pg_catalog.routines.GtsquerySame();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsquery_union
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsqueryUnion(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GtsqueryUnion f = new test.generated.pg_catalog.routines.GtsqueryUnion();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsquery_union as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gtsqueryUnion(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GtsqueryUnion f = new test.generated.pg_catalog.routines.GtsqueryUnion();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsquery_union as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gtsqueryUnion(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.GtsqueryUnion f = new test.generated.pg_catalog.routines.GtsqueryUnion();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsvector_compress
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsvectorCompress(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.GtsvectorCompress f = new test.generated.pg_catalog.routines.GtsvectorCompress();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsvector_compress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorCompress(java.lang.Object __1) {
		test.generated.pg_catalog.routines.GtsvectorCompress f = new test.generated.pg_catalog.routines.GtsvectorCompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsvector_compress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorCompress(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.GtsvectorCompress f = new test.generated.pg_catalog.routines.GtsvectorCompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsvector_consistent
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean gtsvectorConsistent(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3, java.lang.Long __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GtsvectorConsistent f = new test.generated.pg_catalog.routines.GtsvectorConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsvector_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Boolean> gtsvectorConsistent(java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3, java.lang.Long __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.GtsvectorConsistent f = new test.generated.pg_catalog.routines.GtsvectorConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsvector_consistent as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Boolean> gtsvectorConsistent(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Integer> __3, org.jooq.Field<java.lang.Long> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.GtsvectorConsistent f = new test.generated.pg_catalog.routines.GtsvectorConsistent();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsvector_decompress
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsvectorDecompress(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.GtsvectorDecompress f = new test.generated.pg_catalog.routines.GtsvectorDecompress();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsvector_decompress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorDecompress(java.lang.Object __1) {
		test.generated.pg_catalog.routines.GtsvectorDecompress f = new test.generated.pg_catalog.routines.GtsvectorDecompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsvector_decompress as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorDecompress(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.GtsvectorDecompress f = new test.generated.pg_catalog.routines.GtsvectorDecompress();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsvector_penalty
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsvectorPenalty(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GtsvectorPenalty f = new test.generated.pg_catalog.routines.GtsvectorPenalty();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsvector_penalty as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorPenalty(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GtsvectorPenalty f = new test.generated.pg_catalog.routines.GtsvectorPenalty();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsvector_penalty as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorPenalty(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.GtsvectorPenalty f = new test.generated.pg_catalog.routines.GtsvectorPenalty();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsvector_picksplit
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsvectorPicksplit(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GtsvectorPicksplit f = new test.generated.pg_catalog.routines.GtsvectorPicksplit();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsvector_picksplit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorPicksplit(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GtsvectorPicksplit f = new test.generated.pg_catalog.routines.GtsvectorPicksplit();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsvector_picksplit as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorPicksplit(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.GtsvectorPicksplit f = new test.generated.pg_catalog.routines.GtsvectorPicksplit();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsvector_same
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsvectorSame(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GtsvectorSame f = new test.generated.pg_catalog.routines.GtsvectorSame();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsvector_same as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorSame(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.GtsvectorSame f = new test.generated.pg_catalog.routines.GtsvectorSame();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsvector_same as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorSame(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.GtsvectorSame f = new test.generated.pg_catalog.routines.GtsvectorSame();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsvector_union
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsvectorUnion(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GtsvectorUnion f = new test.generated.pg_catalog.routines.GtsvectorUnion();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsvector_union as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorUnion(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.GtsvectorUnion f = new test.generated.pg_catalog.routines.GtsvectorUnion();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsvector_union as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorUnion(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.GtsvectorUnion f = new test.generated.pg_catalog.routines.GtsvectorUnion();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsvectorin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsvectorin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Gtsvectorin f = new test.generated.pg_catalog.routines.Gtsvectorin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsvectorin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Gtsvectorin f = new test.generated.pg_catalog.routines.Gtsvectorin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsvectorin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Gtsvectorin f = new test.generated.pg_catalog.routines.Gtsvectorin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.gtsvectorout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object gtsvectorout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Gtsvectorout f = new test.generated.pg_catalog.routines.Gtsvectorout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.gtsvectorout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Gtsvectorout f = new test.generated.pg_catalog.routines.Gtsvectorout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.gtsvectorout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> gtsvectorout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Gtsvectorout f = new test.generated.pg_catalog.routines.Gtsvectorout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_any_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasAnyColumnPrivilege1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege1 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_any_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasAnyColumnPrivilege1(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege1 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_any_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasAnyColumnPrivilege1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege1 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_any_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasAnyColumnPrivilege6(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege6 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_any_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasAnyColumnPrivilege6(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege6 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_any_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasAnyColumnPrivilege6(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege6 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_any_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasAnyColumnPrivilege4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege4 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_any_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasAnyColumnPrivilege4(java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege4 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_any_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasAnyColumnPrivilege4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege4 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_any_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasAnyColumnPrivilege3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege3 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_any_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasAnyColumnPrivilege3(java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege3 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_any_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasAnyColumnPrivilege3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege3 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_any_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasAnyColumnPrivilege2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege2 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_any_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasAnyColumnPrivilege2(java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege2 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_any_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasAnyColumnPrivilege2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege2 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_any_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasAnyColumnPrivilege5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege5 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_any_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasAnyColumnPrivilege5(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege5 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_any_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasAnyColumnPrivilege5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasAnyColumnPrivilege5 f = new test.generated.pg_catalog.routines.HasAnyColumnPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasColumnPrivilege6(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.Short __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege6 f = new test.generated.pg_catalog.routines.HasColumnPrivilege6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege6(java.lang.Long __1, java.lang.String __2, java.lang.Short __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege6 f = new test.generated.pg_catalog.routines.HasColumnPrivilege6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege6(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.Short> __3, org.jooq.Field<java.lang.String> __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege6 f = new test.generated.pg_catalog.routines.HasColumnPrivilege6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasColumnPrivilege1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege1 f = new test.generated.pg_catalog.routines.HasColumnPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege1(java.lang.String __1, java.lang.String __2, java.lang.String __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege1 f = new test.generated.pg_catalog.routines.HasColumnPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3, org.jooq.Field<java.lang.String> __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege1 f = new test.generated.pg_catalog.routines.HasColumnPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasColumnPrivilege2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.Short __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege2 f = new test.generated.pg_catalog.routines.HasColumnPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege2(java.lang.String __1, java.lang.String __2, java.lang.Short __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege2 f = new test.generated.pg_catalog.routines.HasColumnPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.Short> __3, org.jooq.Field<java.lang.String> __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege2 f = new test.generated.pg_catalog.routines.HasColumnPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasColumnPrivilege3(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.String __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege3 f = new test.generated.pg_catalog.routines.HasColumnPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege3(java.lang.String __1, java.lang.Long __2, java.lang.String __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege3 f = new test.generated.pg_catalog.routines.HasColumnPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege3(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3, org.jooq.Field<java.lang.String> __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege3 f = new test.generated.pg_catalog.routines.HasColumnPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasColumnPrivilege4(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.Short __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege4 f = new test.generated.pg_catalog.routines.HasColumnPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege4(java.lang.String __1, java.lang.Long __2, java.lang.Short __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege4 f = new test.generated.pg_catalog.routines.HasColumnPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege4(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Short> __3, org.jooq.Field<java.lang.String> __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege4 f = new test.generated.pg_catalog.routines.HasColumnPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasColumnPrivilege5(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege5 f = new test.generated.pg_catalog.routines.HasColumnPrivilege5();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege5(java.lang.Long __1, java.lang.String __2, java.lang.String __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege5 f = new test.generated.pg_catalog.routines.HasColumnPrivilege5();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege5(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3, org.jooq.Field<java.lang.String> __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege5 f = new test.generated.pg_catalog.routines.HasColumnPrivilege5();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasColumnPrivilege7(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege7 f = new test.generated.pg_catalog.routines.HasColumnPrivilege7();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege7(java.lang.Long __1, java.lang.Long __2, java.lang.String __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege7 f = new test.generated.pg_catalog.routines.HasColumnPrivilege7();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege7(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3, org.jooq.Field<java.lang.String> __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege7 f = new test.generated.pg_catalog.routines.HasColumnPrivilege7();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasColumnPrivilege8(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.Short __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege8 f = new test.generated.pg_catalog.routines.HasColumnPrivilege8();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege8(java.lang.Long __1, java.lang.Long __2, java.lang.Short __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege8 f = new test.generated.pg_catalog.routines.HasColumnPrivilege8();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege8(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Short> __3, org.jooq.Field<java.lang.String> __4) {
		test.generated.pg_catalog.routines.HasColumnPrivilege8 f = new test.generated.pg_catalog.routines.HasColumnPrivilege8();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasColumnPrivilege9(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasColumnPrivilege9 f = new test.generated.pg_catalog.routines.HasColumnPrivilege9();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege9(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasColumnPrivilege9 f = new test.generated.pg_catalog.routines.HasColumnPrivilege9();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege9(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasColumnPrivilege9 f = new test.generated.pg_catalog.routines.HasColumnPrivilege9();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasColumnPrivilege10(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Short __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasColumnPrivilege10 f = new test.generated.pg_catalog.routines.HasColumnPrivilege10();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege10(java.lang.String __1, java.lang.Short __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasColumnPrivilege10 f = new test.generated.pg_catalog.routines.HasColumnPrivilege10();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege10(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Short> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasColumnPrivilege10 f = new test.generated.pg_catalog.routines.HasColumnPrivilege10();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasColumnPrivilege11(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasColumnPrivilege11 f = new test.generated.pg_catalog.routines.HasColumnPrivilege11();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege11(java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasColumnPrivilege11 f = new test.generated.pg_catalog.routines.HasColumnPrivilege11();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege11(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasColumnPrivilege11 f = new test.generated.pg_catalog.routines.HasColumnPrivilege11();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_column_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasColumnPrivilege12(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasColumnPrivilege12 f = new test.generated.pg_catalog.routines.HasColumnPrivilege12();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege12(java.lang.Long __1, java.lang.Short __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasColumnPrivilege12 f = new test.generated.pg_catalog.routines.HasColumnPrivilege12();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_column_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasColumnPrivilege12(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasColumnPrivilege12 f = new test.generated.pg_catalog.routines.HasColumnPrivilege12();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_database_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasDatabasePrivilege4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege4 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_database_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasDatabasePrivilege4(java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege4 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_database_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasDatabasePrivilege4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege4 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_database_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasDatabasePrivilege6(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege6 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_database_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasDatabasePrivilege6(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege6 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_database_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasDatabasePrivilege6(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege6 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_database_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasDatabasePrivilege3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege3 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_database_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasDatabasePrivilege3(java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege3 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_database_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasDatabasePrivilege3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege3 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_database_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasDatabasePrivilege5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege5 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_database_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasDatabasePrivilege5(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege5 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_database_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasDatabasePrivilege5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege5 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_database_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasDatabasePrivilege1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege1 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_database_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasDatabasePrivilege1(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege1 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_database_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasDatabasePrivilege1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege1 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_database_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasDatabasePrivilege2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege2 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_database_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasDatabasePrivilege2(java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege2 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_database_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasDatabasePrivilege2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasDatabasePrivilege2 f = new test.generated.pg_catalog.routines.HasDatabasePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_foreign_data_wrapper_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasForeignDataWrapperPrivilege3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege3 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_foreign_data_wrapper_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasForeignDataWrapperPrivilege3(java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege3 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_foreign_data_wrapper_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasForeignDataWrapperPrivilege3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege3 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_foreign_data_wrapper_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasForeignDataWrapperPrivilege4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege4 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_foreign_data_wrapper_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasForeignDataWrapperPrivilege4(java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege4 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_foreign_data_wrapper_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasForeignDataWrapperPrivilege4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege4 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_foreign_data_wrapper_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasForeignDataWrapperPrivilege5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege5 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_foreign_data_wrapper_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasForeignDataWrapperPrivilege5(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege5 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_foreign_data_wrapper_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasForeignDataWrapperPrivilege5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege5 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_foreign_data_wrapper_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasForeignDataWrapperPrivilege2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege2 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_foreign_data_wrapper_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasForeignDataWrapperPrivilege2(java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege2 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_foreign_data_wrapper_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasForeignDataWrapperPrivilege2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege2 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_foreign_data_wrapper_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasForeignDataWrapperPrivilege1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege1 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_foreign_data_wrapper_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasForeignDataWrapperPrivilege1(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege1 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_foreign_data_wrapper_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasForeignDataWrapperPrivilege1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege1 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_foreign_data_wrapper_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasForeignDataWrapperPrivilege6(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege6 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_foreign_data_wrapper_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasForeignDataWrapperPrivilege6(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege6 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_foreign_data_wrapper_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasForeignDataWrapperPrivilege6(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege6 f = new test.generated.pg_catalog.routines.HasForeignDataWrapperPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_function_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasFunctionPrivilege5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege5 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_function_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasFunctionPrivilege5(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege5 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_function_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasFunctionPrivilege5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege5 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_function_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasFunctionPrivilege4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege4 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_function_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasFunctionPrivilege4(java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege4 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_function_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasFunctionPrivilege4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege4 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_function_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasFunctionPrivilege6(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege6 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_function_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasFunctionPrivilege6(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege6 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_function_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasFunctionPrivilege6(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege6 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_function_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasFunctionPrivilege3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege3 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_function_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasFunctionPrivilege3(java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege3 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_function_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasFunctionPrivilege3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege3 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_function_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasFunctionPrivilege1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege1 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_function_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasFunctionPrivilege1(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege1 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_function_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasFunctionPrivilege1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege1 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_function_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasFunctionPrivilege2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege2 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_function_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasFunctionPrivilege2(java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege2 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_function_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasFunctionPrivilege2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasFunctionPrivilege2 f = new test.generated.pg_catalog.routines.HasFunctionPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_language_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasLanguagePrivilege3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege3 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_language_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasLanguagePrivilege3(java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege3 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_language_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasLanguagePrivilege3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege3 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_language_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasLanguagePrivilege4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege4 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_language_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasLanguagePrivilege4(java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege4 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_language_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasLanguagePrivilege4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege4 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_language_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasLanguagePrivilege2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege2 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_language_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasLanguagePrivilege2(java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege2 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_language_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasLanguagePrivilege2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege2 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_language_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasLanguagePrivilege5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege5 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_language_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasLanguagePrivilege5(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege5 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_language_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasLanguagePrivilege5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege5 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_language_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasLanguagePrivilege1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege1 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_language_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasLanguagePrivilege1(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege1 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_language_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasLanguagePrivilege1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege1 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_language_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasLanguagePrivilege6(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege6 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_language_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasLanguagePrivilege6(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege6 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_language_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasLanguagePrivilege6(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasLanguagePrivilege6 f = new test.generated.pg_catalog.routines.HasLanguagePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_schema_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasSchemaPrivilege2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege2 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_schema_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSchemaPrivilege2(java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege2 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_schema_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSchemaPrivilege2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege2 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_schema_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasSchemaPrivilege1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege1 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_schema_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSchemaPrivilege1(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege1 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_schema_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSchemaPrivilege1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege1 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_schema_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasSchemaPrivilege3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege3 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_schema_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSchemaPrivilege3(java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege3 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_schema_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSchemaPrivilege3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege3 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_schema_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasSchemaPrivilege4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege4 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_schema_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSchemaPrivilege4(java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege4 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_schema_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSchemaPrivilege4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege4 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_schema_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasSchemaPrivilege5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege5 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_schema_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSchemaPrivilege5(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege5 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_schema_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSchemaPrivilege5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege5 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_schema_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasSchemaPrivilege6(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege6 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_schema_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSchemaPrivilege6(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege6 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_schema_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSchemaPrivilege6(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasSchemaPrivilege6 f = new test.generated.pg_catalog.routines.HasSchemaPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_sequence_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasSequencePrivilege5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasSequencePrivilege5 f = new test.generated.pg_catalog.routines.HasSequencePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_sequence_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSequencePrivilege5(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasSequencePrivilege5 f = new test.generated.pg_catalog.routines.HasSequencePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_sequence_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSequencePrivilege5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasSequencePrivilege5 f = new test.generated.pg_catalog.routines.HasSequencePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_sequence_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasSequencePrivilege6(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasSequencePrivilege6 f = new test.generated.pg_catalog.routines.HasSequencePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_sequence_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSequencePrivilege6(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasSequencePrivilege6 f = new test.generated.pg_catalog.routines.HasSequencePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_sequence_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSequencePrivilege6(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasSequencePrivilege6 f = new test.generated.pg_catalog.routines.HasSequencePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_sequence_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasSequencePrivilege1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSequencePrivilege1 f = new test.generated.pg_catalog.routines.HasSequencePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_sequence_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSequencePrivilege1(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSequencePrivilege1 f = new test.generated.pg_catalog.routines.HasSequencePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_sequence_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSequencePrivilege1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasSequencePrivilege1 f = new test.generated.pg_catalog.routines.HasSequencePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_sequence_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasSequencePrivilege2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSequencePrivilege2 f = new test.generated.pg_catalog.routines.HasSequencePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_sequence_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSequencePrivilege2(java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSequencePrivilege2 f = new test.generated.pg_catalog.routines.HasSequencePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_sequence_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSequencePrivilege2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasSequencePrivilege2 f = new test.generated.pg_catalog.routines.HasSequencePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_sequence_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasSequencePrivilege3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSequencePrivilege3 f = new test.generated.pg_catalog.routines.HasSequencePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_sequence_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSequencePrivilege3(java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSequencePrivilege3 f = new test.generated.pg_catalog.routines.HasSequencePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_sequence_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSequencePrivilege3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasSequencePrivilege3 f = new test.generated.pg_catalog.routines.HasSequencePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_sequence_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasSequencePrivilege4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSequencePrivilege4 f = new test.generated.pg_catalog.routines.HasSequencePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_sequence_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSequencePrivilege4(java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasSequencePrivilege4 f = new test.generated.pg_catalog.routines.HasSequencePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_sequence_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasSequencePrivilege4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasSequencePrivilege4 f = new test.generated.pg_catalog.routines.HasSequencePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_server_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasServerPrivilege1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasServerPrivilege1 f = new test.generated.pg_catalog.routines.HasServerPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_server_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasServerPrivilege1(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasServerPrivilege1 f = new test.generated.pg_catalog.routines.HasServerPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_server_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasServerPrivilege1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasServerPrivilege1 f = new test.generated.pg_catalog.routines.HasServerPrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_server_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasServerPrivilege6(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasServerPrivilege6 f = new test.generated.pg_catalog.routines.HasServerPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_server_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasServerPrivilege6(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasServerPrivilege6 f = new test.generated.pg_catalog.routines.HasServerPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_server_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasServerPrivilege6(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasServerPrivilege6 f = new test.generated.pg_catalog.routines.HasServerPrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_server_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasServerPrivilege5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasServerPrivilege5 f = new test.generated.pg_catalog.routines.HasServerPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_server_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasServerPrivilege5(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasServerPrivilege5 f = new test.generated.pg_catalog.routines.HasServerPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_server_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasServerPrivilege5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasServerPrivilege5 f = new test.generated.pg_catalog.routines.HasServerPrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_server_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasServerPrivilege4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasServerPrivilege4 f = new test.generated.pg_catalog.routines.HasServerPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_server_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasServerPrivilege4(java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasServerPrivilege4 f = new test.generated.pg_catalog.routines.HasServerPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_server_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasServerPrivilege4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasServerPrivilege4 f = new test.generated.pg_catalog.routines.HasServerPrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_server_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasServerPrivilege3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasServerPrivilege3 f = new test.generated.pg_catalog.routines.HasServerPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_server_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasServerPrivilege3(java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasServerPrivilege3 f = new test.generated.pg_catalog.routines.HasServerPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_server_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasServerPrivilege3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasServerPrivilege3 f = new test.generated.pg_catalog.routines.HasServerPrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_server_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasServerPrivilege2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasServerPrivilege2 f = new test.generated.pg_catalog.routines.HasServerPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_server_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasServerPrivilege2(java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasServerPrivilege2 f = new test.generated.pg_catalog.routines.HasServerPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_server_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasServerPrivilege2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasServerPrivilege2 f = new test.generated.pg_catalog.routines.HasServerPrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_table_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasTablePrivilege1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablePrivilege1 f = new test.generated.pg_catalog.routines.HasTablePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_table_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablePrivilege1(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablePrivilege1 f = new test.generated.pg_catalog.routines.HasTablePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_table_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablePrivilege1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasTablePrivilege1 f = new test.generated.pg_catalog.routines.HasTablePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_table_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasTablePrivilege6(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasTablePrivilege6 f = new test.generated.pg_catalog.routines.HasTablePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_table_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablePrivilege6(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasTablePrivilege6 f = new test.generated.pg_catalog.routines.HasTablePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_table_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablePrivilege6(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasTablePrivilege6 f = new test.generated.pg_catalog.routines.HasTablePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_table_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasTablePrivilege5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasTablePrivilege5 f = new test.generated.pg_catalog.routines.HasTablePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_table_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablePrivilege5(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasTablePrivilege5 f = new test.generated.pg_catalog.routines.HasTablePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_table_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablePrivilege5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasTablePrivilege5 f = new test.generated.pg_catalog.routines.HasTablePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_table_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasTablePrivilege4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablePrivilege4 f = new test.generated.pg_catalog.routines.HasTablePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_table_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablePrivilege4(java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablePrivilege4 f = new test.generated.pg_catalog.routines.HasTablePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_table_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablePrivilege4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasTablePrivilege4 f = new test.generated.pg_catalog.routines.HasTablePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_table_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasTablePrivilege3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablePrivilege3 f = new test.generated.pg_catalog.routines.HasTablePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_table_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablePrivilege3(java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablePrivilege3 f = new test.generated.pg_catalog.routines.HasTablePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_table_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablePrivilege3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasTablePrivilege3 f = new test.generated.pg_catalog.routines.HasTablePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_table_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasTablePrivilege2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablePrivilege2 f = new test.generated.pg_catalog.routines.HasTablePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_table_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablePrivilege2(java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablePrivilege2 f = new test.generated.pg_catalog.routines.HasTablePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_table_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablePrivilege2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasTablePrivilege2 f = new test.generated.pg_catalog.routines.HasTablePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_tablespace_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasTablespacePrivilege6(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege6 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_tablespace_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablespacePrivilege6(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege6 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_tablespace_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablespacePrivilege6(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege6 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_tablespace_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasTablespacePrivilege4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege4 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_tablespace_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablespacePrivilege4(java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege4 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_tablespace_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablespacePrivilege4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege4 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_tablespace_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasTablespacePrivilege2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege2 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_tablespace_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablespacePrivilege2(java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege2 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_tablespace_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablespacePrivilege2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege2 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_tablespace_privilege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasTablespacePrivilege5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege5 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_tablespace_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablespacePrivilege5(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege5 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_tablespace_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablespacePrivilege5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege5 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_tablespace_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasTablespacePrivilege3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege3 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_tablespace_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablespacePrivilege3(java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege3 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_tablespace_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablespacePrivilege3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege3 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.has_tablespace_privilege
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hasTablespacePrivilege1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege1 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.has_tablespace_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablespacePrivilege1(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege1 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.has_tablespace_privilege as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> hasTablespacePrivilege1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.HasTablespacePrivilege1 f = new test.generated.pg_catalog.routines.HasTablespacePrivilege1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hash_aclitem
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashAclitem(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.HashAclitem f = new test.generated.pg_catalog.routines.HashAclitem();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hash_aclitem as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashAclitem(java.lang.String __1) {
		test.generated.pg_catalog.routines.HashAclitem f = new test.generated.pg_catalog.routines.HashAclitem();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hash_aclitem as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashAclitem(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.HashAclitem f = new test.generated.pg_catalog.routines.HashAclitem();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hash_numeric
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashNumeric(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.HashNumeric f = new test.generated.pg_catalog.routines.HashNumeric();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hash_numeric as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashNumeric(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.HashNumeric f = new test.generated.pg_catalog.routines.HashNumeric();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hash_numeric as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashNumeric(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.HashNumeric f = new test.generated.pg_catalog.routines.HashNumeric();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashbeginscan
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object hashbeginscan(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Hashbeginscan f = new test.generated.pg_catalog.routines.Hashbeginscan();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashbeginscan as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> hashbeginscan(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Hashbeginscan f = new test.generated.pg_catalog.routines.Hashbeginscan();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashbeginscan as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> hashbeginscan(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.Hashbeginscan f = new test.generated.pg_catalog.routines.Hashbeginscan();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashbpchar
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashbpchar(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Hashbpchar f = new test.generated.pg_catalog.routines.Hashbpchar();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashbpchar as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashbpchar(java.lang.String __1) {
		test.generated.pg_catalog.routines.Hashbpchar f = new test.generated.pg_catalog.routines.Hashbpchar();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashbpchar as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashbpchar(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Hashbpchar f = new test.generated.pg_catalog.routines.Hashbpchar();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashbuild
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object hashbuild(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Hashbuild f = new test.generated.pg_catalog.routines.Hashbuild();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashbuild as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> hashbuild(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Hashbuild f = new test.generated.pg_catalog.routines.Hashbuild();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashbuild as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> hashbuild(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.Hashbuild f = new test.generated.pg_catalog.routines.Hashbuild();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashbulkdelete
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object hashbulkdelete(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Hashbulkdelete f = new test.generated.pg_catalog.routines.Hashbulkdelete();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashbulkdelete as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> hashbulkdelete(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Hashbulkdelete f = new test.generated.pg_catalog.routines.Hashbulkdelete();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashbulkdelete as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> hashbulkdelete(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.Hashbulkdelete f = new test.generated.pg_catalog.routines.Hashbulkdelete();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashchar
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashchar(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Hashchar f = new test.generated.pg_catalog.routines.Hashchar();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashchar as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashchar(java.lang.String __1) {
		test.generated.pg_catalog.routines.Hashchar f = new test.generated.pg_catalog.routines.Hashchar();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashchar as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashchar(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Hashchar f = new test.generated.pg_catalog.routines.Hashchar();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashcostestimate
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @param __6 IN parameter
	 * @param __7 IN parameter
	 * @param __8 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void hashcostestimate(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4, java.lang.Object __5, java.lang.Object __6, java.lang.Object __7, java.lang.Object __8) {
		test.generated.pg_catalog.routines.Hashcostestimate p = new test.generated.pg_catalog.routines.Hashcostestimate();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);
		p.set__6(__6);
		p.set__7(__7);
		p.set__8(__8);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.hashendscan
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void hashendscan(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hashendscan p = new test.generated.pg_catalog.routines.Hashendscan();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.hashenum
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashenum(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hashenum f = new test.generated.pg_catalog.routines.Hashenum();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashenum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashenum(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hashenum f = new test.generated.pg_catalog.routines.Hashenum();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashenum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashenum(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Hashenum f = new test.generated.pg_catalog.routines.Hashenum();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashfloat4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashfloat4(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Hashfloat4 f = new test.generated.pg_catalog.routines.Hashfloat4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashfloat4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashfloat4(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Hashfloat4 f = new test.generated.pg_catalog.routines.Hashfloat4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashfloat4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashfloat4(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Hashfloat4 f = new test.generated.pg_catalog.routines.Hashfloat4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashfloat8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashfloat8(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Hashfloat8 f = new test.generated.pg_catalog.routines.Hashfloat8();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashfloat8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashfloat8(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Hashfloat8 f = new test.generated.pg_catalog.routines.Hashfloat8();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashfloat8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashfloat8(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Hashfloat8 f = new test.generated.pg_catalog.routines.Hashfloat8();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashgetbitmap
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long hashgetbitmap(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Hashgetbitmap f = new test.generated.pg_catalog.routines.Hashgetbitmap();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashgetbitmap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> hashgetbitmap(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Hashgetbitmap f = new test.generated.pg_catalog.routines.Hashgetbitmap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashgetbitmap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> hashgetbitmap(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Hashgetbitmap f = new test.generated.pg_catalog.routines.Hashgetbitmap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashgettuple
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hashgettuple(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Hashgettuple f = new test.generated.pg_catalog.routines.Hashgettuple();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashgettuple as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hashgettuple(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Hashgettuple f = new test.generated.pg_catalog.routines.Hashgettuple();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashgettuple as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> hashgettuple(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Hashgettuple f = new test.generated.pg_catalog.routines.Hashgettuple();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashinet
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashinet(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hashinet f = new test.generated.pg_catalog.routines.Hashinet();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashinet as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashinet(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hashinet f = new test.generated.pg_catalog.routines.Hashinet();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashinet as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashinet(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Hashinet f = new test.generated.pg_catalog.routines.Hashinet();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashinsert
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean hashinsert(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4, java.lang.Object __5, java.lang.Object __6) {
		test.generated.pg_catalog.routines.Hashinsert f = new test.generated.pg_catalog.routines.Hashinsert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashinsert as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 */
	public static org.jooq.Field<java.lang.Boolean> hashinsert(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4, java.lang.Object __5, java.lang.Object __6) {
		test.generated.pg_catalog.routines.Hashinsert f = new test.generated.pg_catalog.routines.Hashinsert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashinsert as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @param __6
	 */
	public static org.jooq.Field<java.lang.Boolean> hashinsert(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4, org.jooq.Field<java.lang.Object> __5, org.jooq.Field<java.lang.Object> __6) {
		test.generated.pg_catalog.routines.Hashinsert f = new test.generated.pg_catalog.routines.Hashinsert();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);
		f.set__6(__6);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashint2
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashint2(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Hashint2 f = new test.generated.pg_catalog.routines.Hashint2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashint2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashint2(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Hashint2 f = new test.generated.pg_catalog.routines.Hashint2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashint2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashint2(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Hashint2 f = new test.generated.pg_catalog.routines.Hashint2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashint2vector
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashint2vector(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Hashint2vector f = new test.generated.pg_catalog.routines.Hashint2vector();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashint2vector as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashint2vector(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Hashint2vector f = new test.generated.pg_catalog.routines.Hashint2vector();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashint2vector as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashint2vector(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Hashint2vector f = new test.generated.pg_catalog.routines.Hashint2vector();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashint4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashint4(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Hashint4 f = new test.generated.pg_catalog.routines.Hashint4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashint4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashint4(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Hashint4 f = new test.generated.pg_catalog.routines.Hashint4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashint4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashint4(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Hashint4 f = new test.generated.pg_catalog.routines.Hashint4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashint8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashint8(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Hashint8 f = new test.generated.pg_catalog.routines.Hashint8();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashint8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashint8(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Hashint8 f = new test.generated.pg_catalog.routines.Hashint8();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashint8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashint8(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Hashint8 f = new test.generated.pg_catalog.routines.Hashint8();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashmacaddr
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashmacaddr(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hashmacaddr f = new test.generated.pg_catalog.routines.Hashmacaddr();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashmacaddr as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashmacaddr(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hashmacaddr f = new test.generated.pg_catalog.routines.Hashmacaddr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashmacaddr as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashmacaddr(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Hashmacaddr f = new test.generated.pg_catalog.routines.Hashmacaddr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashmarkpos
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void hashmarkpos(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hashmarkpos p = new test.generated.pg_catalog.routines.Hashmarkpos();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.hashname
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashname(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Hashname f = new test.generated.pg_catalog.routines.Hashname();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashname as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashname(java.lang.String __1) {
		test.generated.pg_catalog.routines.Hashname f = new test.generated.pg_catalog.routines.Hashname();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashname as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashname(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Hashname f = new test.generated.pg_catalog.routines.Hashname();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashoid
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashoid(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Hashoid f = new test.generated.pg_catalog.routines.Hashoid();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashoid as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashoid(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Hashoid f = new test.generated.pg_catalog.routines.Hashoid();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashoid as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashoid(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Hashoid f = new test.generated.pg_catalog.routines.Hashoid();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashoidvector
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashoidvector(org.jooq.Configuration configuration, java.lang.Long[] __1) {
		test.generated.pg_catalog.routines.Hashoidvector f = new test.generated.pg_catalog.routines.Hashoidvector();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashoidvector as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashoidvector(java.lang.Long[] __1) {
		test.generated.pg_catalog.routines.Hashoidvector f = new test.generated.pg_catalog.routines.Hashoidvector();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashoidvector as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashoidvector(org.jooq.Field<java.lang.Long[]> __1) {
		test.generated.pg_catalog.routines.Hashoidvector f = new test.generated.pg_catalog.routines.Hashoidvector();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashoptions
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] hashoptions(org.jooq.Configuration configuration, java.lang.String[] __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Hashoptions f = new test.generated.pg_catalog.routines.Hashoptions();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashoptions as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> hashoptions(java.lang.String[] __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.Hashoptions f = new test.generated.pg_catalog.routines.Hashoptions();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashoptions as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> hashoptions(org.jooq.Field<java.lang.String[]> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.Hashoptions f = new test.generated.pg_catalog.routines.Hashoptions();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashrescan
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void hashrescan(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Hashrescan p = new test.generated.pg_catalog.routines.Hashrescan();
		p.set__1(__1);
		p.set__2(__2);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.hashrestrpos
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void hashrestrpos(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hashrestrpos p = new test.generated.pg_catalog.routines.Hashrestrpos();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.hashtext
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashtext(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Hashtext f = new test.generated.pg_catalog.routines.Hashtext();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashtext as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashtext(java.lang.String __1) {
		test.generated.pg_catalog.routines.Hashtext f = new test.generated.pg_catalog.routines.Hashtext();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashtext as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashtext(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Hashtext f = new test.generated.pg_catalog.routines.Hashtext();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashvacuumcleanup
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object hashvacuumcleanup(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Hashvacuumcleanup f = new test.generated.pg_catalog.routines.Hashvacuumcleanup();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashvacuumcleanup as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> hashvacuumcleanup(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Hashvacuumcleanup f = new test.generated.pg_catalog.routines.Hashvacuumcleanup();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashvacuumcleanup as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> hashvacuumcleanup(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Hashvacuumcleanup f = new test.generated.pg_catalog.routines.Hashvacuumcleanup();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hashvarlena
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer hashvarlena(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hashvarlena f = new test.generated.pg_catalog.routines.Hashvarlena();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hashvarlena as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashvarlena(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hashvarlena f = new test.generated.pg_catalog.routines.Hashvarlena();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hashvarlena as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> hashvarlena(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Hashvarlena f = new test.generated.pg_catalog.routines.Hashvarlena();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.height
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double height(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Height f = new test.generated.pg_catalog.routines.Height();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.height as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> height(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Height f = new test.generated.pg_catalog.routines.Height();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.height as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> height(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Height f = new test.generated.pg_catalog.routines.Height();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.host
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String host(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Host f = new test.generated.pg_catalog.routines.Host();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.host as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> host(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Host f = new test.generated.pg_catalog.routines.Host();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.host as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> host(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Host f = new test.generated.pg_catalog.routines.Host();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.hostmask
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object hostmask(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hostmask f = new test.generated.pg_catalog.routines.Hostmask();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.hostmask as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> hostmask(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Hostmask f = new test.generated.pg_catalog.routines.Hostmask();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.hostmask as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> hostmask(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Hostmask f = new test.generated.pg_catalog.routines.Hostmask();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.iclikejoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double iclikejoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Iclikejoinsel f = new test.generated.pg_catalog.routines.Iclikejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.iclikejoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> iclikejoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Iclikejoinsel f = new test.generated.pg_catalog.routines.Iclikejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.iclikejoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> iclikejoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Iclikejoinsel f = new test.generated.pg_catalog.routines.Iclikejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.iclikesel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double iclikesel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Iclikesel f = new test.generated.pg_catalog.routines.Iclikesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.iclikesel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> iclikesel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Iclikesel f = new test.generated.pg_catalog.routines.Iclikesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.iclikesel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> iclikesel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Iclikesel f = new test.generated.pg_catalog.routines.Iclikesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.icnlikejoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double icnlikejoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Icnlikejoinsel f = new test.generated.pg_catalog.routines.Icnlikejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.icnlikejoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> icnlikejoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Icnlikejoinsel f = new test.generated.pg_catalog.routines.Icnlikejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.icnlikejoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> icnlikejoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Icnlikejoinsel f = new test.generated.pg_catalog.routines.Icnlikejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.icnlikesel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double icnlikesel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Icnlikesel f = new test.generated.pg_catalog.routines.Icnlikesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.icnlikesel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> icnlikesel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Icnlikesel f = new test.generated.pg_catalog.routines.Icnlikesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.icnlikesel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> icnlikesel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Icnlikesel f = new test.generated.pg_catalog.routines.Icnlikesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.icregexeqjoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double icregexeqjoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Icregexeqjoinsel f = new test.generated.pg_catalog.routines.Icregexeqjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.icregexeqjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> icregexeqjoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Icregexeqjoinsel f = new test.generated.pg_catalog.routines.Icregexeqjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.icregexeqjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> icregexeqjoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Icregexeqjoinsel f = new test.generated.pg_catalog.routines.Icregexeqjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.icregexeqsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double icregexeqsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Icregexeqsel f = new test.generated.pg_catalog.routines.Icregexeqsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.icregexeqsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> icregexeqsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Icregexeqsel f = new test.generated.pg_catalog.routines.Icregexeqsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.icregexeqsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> icregexeqsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Icregexeqsel f = new test.generated.pg_catalog.routines.Icregexeqsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.icregexnejoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double icregexnejoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Icregexnejoinsel f = new test.generated.pg_catalog.routines.Icregexnejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.icregexnejoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> icregexnejoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Icregexnejoinsel f = new test.generated.pg_catalog.routines.Icregexnejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.icregexnejoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> icregexnejoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Icregexnejoinsel f = new test.generated.pg_catalog.routines.Icregexnejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.icregexnesel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double icregexnesel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Icregexnesel f = new test.generated.pg_catalog.routines.Icregexnesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.icregexnesel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> icregexnesel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Icregexnesel f = new test.generated.pg_catalog.routines.Icregexnesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.icregexnesel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> icregexnesel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Icregexnesel f = new test.generated.pg_catalog.routines.Icregexnesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inet_client_addr
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object inetClientAddr(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.InetClientAddr f = new test.generated.pg_catalog.routines.InetClientAddr();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inet_client_addr as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> inetClientAddr() {
		test.generated.pg_catalog.routines.InetClientAddr f = new test.generated.pg_catalog.routines.InetClientAddr();

		return f.asField();
	}

	/**
	 * Call pg_catalog.inet_client_port
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer inetClientPort(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.InetClientPort f = new test.generated.pg_catalog.routines.InetClientPort();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inet_client_port as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Integer> inetClientPort() {
		test.generated.pg_catalog.routines.InetClientPort f = new test.generated.pg_catalog.routines.InetClientPort();

		return f.asField();
	}

	/**
	 * Call pg_catalog.inet_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object inetIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.InetIn f = new test.generated.pg_catalog.routines.InetIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inet_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> inetIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.InetIn f = new test.generated.pg_catalog.routines.InetIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inet_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> inetIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.InetIn f = new test.generated.pg_catalog.routines.InetIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inet_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object inetOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.InetOut f = new test.generated.pg_catalog.routines.InetOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inet_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> inetOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.InetOut f = new test.generated.pg_catalog.routines.InetOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inet_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> inetOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.InetOut f = new test.generated.pg_catalog.routines.InetOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inet_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object inetRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.InetRecv f = new test.generated.pg_catalog.routines.InetRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inet_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> inetRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.InetRecv f = new test.generated.pg_catalog.routines.InetRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inet_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> inetRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.InetRecv f = new test.generated.pg_catalog.routines.InetRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inet_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] inetSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.InetSend f = new test.generated.pg_catalog.routines.InetSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inet_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> inetSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.InetSend f = new test.generated.pg_catalog.routines.InetSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inet_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> inetSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.InetSend f = new test.generated.pg_catalog.routines.InetSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inet_server_addr
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object inetServerAddr(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.InetServerAddr f = new test.generated.pg_catalog.routines.InetServerAddr();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inet_server_addr as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> inetServerAddr() {
		test.generated.pg_catalog.routines.InetServerAddr f = new test.generated.pg_catalog.routines.InetServerAddr();

		return f.asField();
	}

	/**
	 * Call pg_catalog.inet_server_port
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer inetServerPort(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.InetServerPort f = new test.generated.pg_catalog.routines.InetServerPort();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inet_server_port as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Integer> inetServerPort() {
		test.generated.pg_catalog.routines.InetServerPort f = new test.generated.pg_catalog.routines.InetServerPort();

		return f.asField();
	}

	/**
	 * Call pg_catalog.inetand
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object inetand(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Inetand f = new test.generated.pg_catalog.routines.Inetand();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inetand as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> inetand(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Inetand f = new test.generated.pg_catalog.routines.Inetand();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inetand as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> inetand(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Inetand f = new test.generated.pg_catalog.routines.Inetand();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inetmi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long inetmi(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Inetmi f = new test.generated.pg_catalog.routines.Inetmi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inetmi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> inetmi(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Inetmi f = new test.generated.pg_catalog.routines.Inetmi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inetmi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> inetmi(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Inetmi f = new test.generated.pg_catalog.routines.Inetmi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inetmi_int8
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object inetmiInt8(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.InetmiInt8 f = new test.generated.pg_catalog.routines.InetmiInt8();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inetmi_int8 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> inetmiInt8(java.lang.Object __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.InetmiInt8 f = new test.generated.pg_catalog.routines.InetmiInt8();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inetmi_int8 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> inetmiInt8(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.InetmiInt8 f = new test.generated.pg_catalog.routines.InetmiInt8();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inetnot
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object inetnot(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Inetnot f = new test.generated.pg_catalog.routines.Inetnot();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inetnot as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> inetnot(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Inetnot f = new test.generated.pg_catalog.routines.Inetnot();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inetnot as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> inetnot(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Inetnot f = new test.generated.pg_catalog.routines.Inetnot();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inetor
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object inetor(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Inetor f = new test.generated.pg_catalog.routines.Inetor();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inetor as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> inetor(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Inetor f = new test.generated.pg_catalog.routines.Inetor();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inetor as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> inetor(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Inetor f = new test.generated.pg_catalog.routines.Inetor();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inetpl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object inetpl(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Inetpl f = new test.generated.pg_catalog.routines.Inetpl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inetpl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> inetpl(java.lang.Object __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Inetpl f = new test.generated.pg_catalog.routines.Inetpl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inetpl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> inetpl(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Inetpl f = new test.generated.pg_catalog.routines.Inetpl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.initcap
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String initcap(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Initcap f = new test.generated.pg_catalog.routines.Initcap();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.initcap as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> initcap(java.lang.String __1) {
		test.generated.pg_catalog.routines.Initcap f = new test.generated.pg_catalog.routines.Initcap();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.initcap as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> initcap(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Initcap f = new test.generated.pg_catalog.routines.Initcap();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int23(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Int23 f = new test.generated.pg_catalog.routines.Int23();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int23(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Int23 f = new test.generated.pg_catalog.routines.Int23();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int23(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Int23 f = new test.generated.pg_catalog.routines.Int23();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int24(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int24 f = new test.generated.pg_catalog.routines.Int24();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int24(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int24 f = new test.generated.pg_catalog.routines.Int24();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int24(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Int24 f = new test.generated.pg_catalog.routines.Int24();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int22(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Int22 f = new test.generated.pg_catalog.routines.Int22();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int22(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Int22 f = new test.generated.pg_catalog.routines.Int22();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int22(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Int22 f = new test.generated.pg_catalog.routines.Int22();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int25(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int25 f = new test.generated.pg_catalog.routines.Int25();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int25(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int25 f = new test.generated.pg_catalog.routines.Int25();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int25(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Int25 f = new test.generated.pg_catalog.routines.Int25();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int21(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Int21 f = new test.generated.pg_catalog.routines.Int21();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int21(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Int21 f = new test.generated.pg_catalog.routines.Int21();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int21(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Int21 f = new test.generated.pg_catalog.routines.Int21();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2_accum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal[] int2Accum(org.jooq.Configuration configuration, java.math.BigDecimal[] __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2Accum f = new test.generated.pg_catalog.routines.Int2Accum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal[]> int2Accum(java.math.BigDecimal[] __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2Accum f = new test.generated.pg_catalog.routines.Int2Accum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal[]> int2Accum(org.jooq.Field<java.math.BigDecimal[]> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2Accum f = new test.generated.pg_catalog.routines.Int2Accum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2_avg_accum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long[] int2AvgAccum(org.jooq.Configuration configuration, java.lang.Long[] __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2AvgAccum f = new test.generated.pg_catalog.routines.Int2AvgAccum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2_avg_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long[]> int2AvgAccum(java.lang.Long[] __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2AvgAccum f = new test.generated.pg_catalog.routines.Int2AvgAccum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2_avg_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long[]> int2AvgAccum(org.jooq.Field<java.lang.Long[]> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2AvgAccum f = new test.generated.pg_catalog.routines.Int2AvgAccum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2_mul_cash
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal int2MulCash(org.jooq.Configuration configuration, java.lang.Short __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Int2MulCash f = new test.generated.pg_catalog.routines.Int2MulCash();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2_mul_cash as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> int2MulCash(java.lang.Short __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Int2MulCash f = new test.generated.pg_catalog.routines.Int2MulCash();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2_mul_cash as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> int2MulCash(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.Int2MulCash f = new test.generated.pg_catalog.routines.Int2MulCash();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2_sum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int2Sum(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2Sum f = new test.generated.pg_catalog.routines.Int2Sum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2_sum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int2Sum(java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2Sum f = new test.generated.pg_catalog.routines.Int2Sum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2_sum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int2Sum(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2Sum f = new test.generated.pg_catalog.routines.Int2Sum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int24div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int24div(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24div f = new test.generated.pg_catalog.routines.Int24div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int24div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int24div(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24div f = new test.generated.pg_catalog.routines.Int24div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int24div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int24div(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int24div f = new test.generated.pg_catalog.routines.Int24div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int24eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int24eq(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24eq f = new test.generated.pg_catalog.routines.Int24eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int24eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int24eq(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24eq f = new test.generated.pg_catalog.routines.Int24eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int24eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int24eq(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int24eq f = new test.generated.pg_catalog.routines.Int24eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int24ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int24ge(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24ge f = new test.generated.pg_catalog.routines.Int24ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int24ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int24ge(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24ge f = new test.generated.pg_catalog.routines.Int24ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int24ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int24ge(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int24ge f = new test.generated.pg_catalog.routines.Int24ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int24gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int24gt(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24gt f = new test.generated.pg_catalog.routines.Int24gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int24gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int24gt(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24gt f = new test.generated.pg_catalog.routines.Int24gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int24gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int24gt(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int24gt f = new test.generated.pg_catalog.routines.Int24gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int24le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int24le(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24le f = new test.generated.pg_catalog.routines.Int24le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int24le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int24le(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24le f = new test.generated.pg_catalog.routines.Int24le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int24le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int24le(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int24le f = new test.generated.pg_catalog.routines.Int24le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int24lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int24lt(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24lt f = new test.generated.pg_catalog.routines.Int24lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int24lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int24lt(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24lt f = new test.generated.pg_catalog.routines.Int24lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int24lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int24lt(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int24lt f = new test.generated.pg_catalog.routines.Int24lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int24mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int24mi(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24mi f = new test.generated.pg_catalog.routines.Int24mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int24mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int24mi(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24mi f = new test.generated.pg_catalog.routines.Int24mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int24mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int24mi(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int24mi f = new test.generated.pg_catalog.routines.Int24mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int24mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int24mul(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24mul f = new test.generated.pg_catalog.routines.Int24mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int24mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int24mul(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24mul f = new test.generated.pg_catalog.routines.Int24mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int24mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int24mul(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int24mul f = new test.generated.pg_catalog.routines.Int24mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int24ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int24ne(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24ne f = new test.generated.pg_catalog.routines.Int24ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int24ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int24ne(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24ne f = new test.generated.pg_catalog.routines.Int24ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int24ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int24ne(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int24ne f = new test.generated.pg_catalog.routines.Int24ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int24pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int24pl(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24pl f = new test.generated.pg_catalog.routines.Int24pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int24pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int24pl(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int24pl f = new test.generated.pg_catalog.routines.Int24pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int24pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int24pl(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int24pl f = new test.generated.pg_catalog.routines.Int24pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int28div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int28div(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28div f = new test.generated.pg_catalog.routines.Int28div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int28div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int28div(java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28div f = new test.generated.pg_catalog.routines.Int28div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int28div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int28div(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int28div f = new test.generated.pg_catalog.routines.Int28div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int28eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int28eq(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28eq f = new test.generated.pg_catalog.routines.Int28eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int28eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int28eq(java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28eq f = new test.generated.pg_catalog.routines.Int28eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int28eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int28eq(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int28eq f = new test.generated.pg_catalog.routines.Int28eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int28ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int28ge(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28ge f = new test.generated.pg_catalog.routines.Int28ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int28ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int28ge(java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28ge f = new test.generated.pg_catalog.routines.Int28ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int28ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int28ge(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int28ge f = new test.generated.pg_catalog.routines.Int28ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int28gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int28gt(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28gt f = new test.generated.pg_catalog.routines.Int28gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int28gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int28gt(java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28gt f = new test.generated.pg_catalog.routines.Int28gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int28gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int28gt(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int28gt f = new test.generated.pg_catalog.routines.Int28gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int28le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int28le(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28le f = new test.generated.pg_catalog.routines.Int28le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int28le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int28le(java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28le f = new test.generated.pg_catalog.routines.Int28le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int28le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int28le(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int28le f = new test.generated.pg_catalog.routines.Int28le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int28lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int28lt(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28lt f = new test.generated.pg_catalog.routines.Int28lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int28lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int28lt(java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28lt f = new test.generated.pg_catalog.routines.Int28lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int28lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int28lt(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int28lt f = new test.generated.pg_catalog.routines.Int28lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int28mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int28mi(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28mi f = new test.generated.pg_catalog.routines.Int28mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int28mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int28mi(java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28mi f = new test.generated.pg_catalog.routines.Int28mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int28mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int28mi(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int28mi f = new test.generated.pg_catalog.routines.Int28mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int28mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int28mul(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28mul f = new test.generated.pg_catalog.routines.Int28mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int28mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int28mul(java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28mul f = new test.generated.pg_catalog.routines.Int28mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int28mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int28mul(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int28mul f = new test.generated.pg_catalog.routines.Int28mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int28ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int28ne(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28ne f = new test.generated.pg_catalog.routines.Int28ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int28ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int28ne(java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28ne f = new test.generated.pg_catalog.routines.Int28ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int28ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int28ne(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int28ne f = new test.generated.pg_catalog.routines.Int28ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int28pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int28pl(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28pl f = new test.generated.pg_catalog.routines.Int28pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int28pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int28pl(java.lang.Short __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int28pl f = new test.generated.pg_catalog.routines.Int28pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int28pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int28pl(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int28pl f = new test.generated.pg_catalog.routines.Int28pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2abs
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2abs(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int2abs f = new test.generated.pg_catalog.routines.Int2abs();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int2abs(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int2abs f = new test.generated.pg_catalog.routines.Int2abs();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int2abs(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Int2abs f = new test.generated.pg_catalog.routines.Int2abs();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2and
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2and(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2and f = new test.generated.pg_catalog.routines.Int2and();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2and as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2and(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2and f = new test.generated.pg_catalog.routines.Int2and();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2and as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2and(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2and f = new test.generated.pg_catalog.routines.Int2and();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2div(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2div f = new test.generated.pg_catalog.routines.Int2div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2div(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2div f = new test.generated.pg_catalog.routines.Int2div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2div(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2div f = new test.generated.pg_catalog.routines.Int2div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int2eq(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2eq f = new test.generated.pg_catalog.routines.Int2eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2eq(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2eq f = new test.generated.pg_catalog.routines.Int2eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2eq(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2eq f = new test.generated.pg_catalog.routines.Int2eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int2ge(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2ge f = new test.generated.pg_catalog.routines.Int2ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2ge(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2ge f = new test.generated.pg_catalog.routines.Int2ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2ge(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2ge f = new test.generated.pg_catalog.routines.Int2ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int2gt(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2gt f = new test.generated.pg_catalog.routines.Int2gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2gt(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2gt f = new test.generated.pg_catalog.routines.Int2gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2gt(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2gt f = new test.generated.pg_catalog.routines.Int2gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2in(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int2in f = new test.generated.pg_catalog.routines.Int2in();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int2in(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int2in f = new test.generated.pg_catalog.routines.Int2in();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int2in(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Int2in f = new test.generated.pg_catalog.routines.Int2in();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2larger(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2larger f = new test.generated.pg_catalog.routines.Int2larger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2larger(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2larger f = new test.generated.pg_catalog.routines.Int2larger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2larger(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2larger f = new test.generated.pg_catalog.routines.Int2larger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int2le(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2le f = new test.generated.pg_catalog.routines.Int2le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2le(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2le f = new test.generated.pg_catalog.routines.Int2le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2le(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2le f = new test.generated.pg_catalog.routines.Int2le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int2lt(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2lt f = new test.generated.pg_catalog.routines.Int2lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2lt(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2lt f = new test.generated.pg_catalog.routines.Int2lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2lt(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2lt f = new test.generated.pg_catalog.routines.Int2lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2mi(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2mi f = new test.generated.pg_catalog.routines.Int2mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2mi(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2mi f = new test.generated.pg_catalog.routines.Int2mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2mi(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2mi f = new test.generated.pg_catalog.routines.Int2mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2mod
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2mod(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2mod f = new test.generated.pg_catalog.routines.Int2mod();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2mod(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2mod f = new test.generated.pg_catalog.routines.Int2mod();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2mod(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2mod f = new test.generated.pg_catalog.routines.Int2mod();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2mul(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2mul f = new test.generated.pg_catalog.routines.Int2mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2mul(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2mul f = new test.generated.pg_catalog.routines.Int2mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2mul(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2mul f = new test.generated.pg_catalog.routines.Int2mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int2ne(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2ne f = new test.generated.pg_catalog.routines.Int2ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2ne(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2ne f = new test.generated.pg_catalog.routines.Int2ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2ne(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2ne f = new test.generated.pg_catalog.routines.Int2ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2not
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2not(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int2not f = new test.generated.pg_catalog.routines.Int2not();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2not as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int2not(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int2not f = new test.generated.pg_catalog.routines.Int2not();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2not as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int2not(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Int2not f = new test.generated.pg_catalog.routines.Int2not();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2or
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2or(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2or f = new test.generated.pg_catalog.routines.Int2or();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2or as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2or(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2or f = new test.generated.pg_catalog.routines.Int2or();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2or as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2or(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2or f = new test.generated.pg_catalog.routines.Int2or();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object int2out(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int2out f = new test.generated.pg_catalog.routines.Int2out();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> int2out(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int2out f = new test.generated.pg_catalog.routines.Int2out();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> int2out(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Int2out f = new test.generated.pg_catalog.routines.Int2out();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2pl(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2pl f = new test.generated.pg_catalog.routines.Int2pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2pl(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2pl f = new test.generated.pg_catalog.routines.Int2pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2pl(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2pl f = new test.generated.pg_catalog.routines.Int2pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2recv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int2recv f = new test.generated.pg_catalog.routines.Int2recv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int2recv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int2recv f = new test.generated.pg_catalog.routines.Int2recv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int2recv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Int2recv f = new test.generated.pg_catalog.routines.Int2recv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] int2send(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int2send f = new test.generated.pg_catalog.routines.Int2send();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> int2send(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int2send f = new test.generated.pg_catalog.routines.Int2send();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> int2send(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Int2send f = new test.generated.pg_catalog.routines.Int2send();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2shl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2shl(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int2shl f = new test.generated.pg_catalog.routines.Int2shl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2shl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2shl(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int2shl f = new test.generated.pg_catalog.routines.Int2shl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2shl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2shl(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int2shl f = new test.generated.pg_catalog.routines.Int2shl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2shr
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2shr(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int2shr f = new test.generated.pg_catalog.routines.Int2shr();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2shr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2shr(java.lang.Short __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int2shr f = new test.generated.pg_catalog.routines.Int2shr();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2shr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2shr(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int2shr f = new test.generated.pg_catalog.routines.Int2shr();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2smaller(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2smaller f = new test.generated.pg_catalog.routines.Int2smaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2smaller(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2smaller f = new test.generated.pg_catalog.routines.Int2smaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2smaller(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2smaller f = new test.generated.pg_catalog.routines.Int2smaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2um
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2um(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int2um f = new test.generated.pg_catalog.routines.Int2um();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2um as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int2um(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int2um f = new test.generated.pg_catalog.routines.Int2um();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2um as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int2um(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Int2um f = new test.generated.pg_catalog.routines.Int2um();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2up
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2up(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int2up f = new test.generated.pg_catalog.routines.Int2up();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2up as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int2up(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int2up f = new test.generated.pg_catalog.routines.Int2up();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2up as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> int2up(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Int2up f = new test.generated.pg_catalog.routines.Int2up();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2vectoreq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int2vectoreq(org.jooq.Configuration configuration, java.lang.Object[] __1, java.lang.Object[] __2) {
		test.generated.pg_catalog.routines.Int2vectoreq f = new test.generated.pg_catalog.routines.Int2vectoreq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2vectoreq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2vectoreq(java.lang.Object[] __1, java.lang.Object[] __2) {
		test.generated.pg_catalog.routines.Int2vectoreq f = new test.generated.pg_catalog.routines.Int2vectoreq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2vectoreq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int2vectoreq(org.jooq.Field<java.lang.Object[]> __1, org.jooq.Field<java.lang.Object[]> __2) {
		test.generated.pg_catalog.routines.Int2vectoreq f = new test.generated.pg_catalog.routines.Int2vectoreq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2vectorin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object[] int2vectorin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int2vectorin f = new test.generated.pg_catalog.routines.Int2vectorin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2vectorin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object[]> int2vectorin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int2vectorin f = new test.generated.pg_catalog.routines.Int2vectorin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2vectorin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object[]> int2vectorin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Int2vectorin f = new test.generated.pg_catalog.routines.Int2vectorin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2vectorout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object int2vectorout(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Int2vectorout f = new test.generated.pg_catalog.routines.Int2vectorout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2vectorout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> int2vectorout(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Int2vectorout f = new test.generated.pg_catalog.routines.Int2vectorout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2vectorout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> int2vectorout(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Int2vectorout f = new test.generated.pg_catalog.routines.Int2vectorout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2vectorrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object[] int2vectorrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int2vectorrecv f = new test.generated.pg_catalog.routines.Int2vectorrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2vectorrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object[]> int2vectorrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int2vectorrecv f = new test.generated.pg_catalog.routines.Int2vectorrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2vectorrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object[]> int2vectorrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Int2vectorrecv f = new test.generated.pg_catalog.routines.Int2vectorrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2vectorsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] int2vectorsend(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Int2vectorsend f = new test.generated.pg_catalog.routines.Int2vectorsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2vectorsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> int2vectorsend(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Int2vectorsend f = new test.generated.pg_catalog.routines.Int2vectorsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2vectorsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> int2vectorsend(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Int2vectorsend f = new test.generated.pg_catalog.routines.Int2vectorsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int2xor
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short int2xor(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2xor f = new test.generated.pg_catalog.routines.Int2xor();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int2xor as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2xor(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int2xor f = new test.generated.pg_catalog.routines.Int2xor();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int2xor as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> int2xor(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int2xor f = new test.generated.pg_catalog.routines.Int2xor();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int48(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Int48 f = new test.generated.pg_catalog.routines.Int48();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int48(java.lang.String __1) {
		test.generated.pg_catalog.routines.Int48 f = new test.generated.pg_catalog.routines.Int48();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int48(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Int48 f = new test.generated.pg_catalog.routines.Int48();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int43(org.jooq.Configuration configuration, java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.Int43 f = new test.generated.pg_catalog.routines.Int43();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int43(java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.Int43 f = new test.generated.pg_catalog.routines.Int43();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int43(org.jooq.Field<java.lang.Boolean> __1) {
		test.generated.pg_catalog.routines.Int43 f = new test.generated.pg_catalog.routines.Int43();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int41(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Int41 f = new test.generated.pg_catalog.routines.Int41();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int41(java.lang.String __1) {
		test.generated.pg_catalog.routines.Int41 f = new test.generated.pg_catalog.routines.Int41();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int41(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Int41 f = new test.generated.pg_catalog.routines.Int41();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int47(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int47 f = new test.generated.pg_catalog.routines.Int47();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int47(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int47 f = new test.generated.pg_catalog.routines.Int47();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int47(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Int47 f = new test.generated.pg_catalog.routines.Int47();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int42(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Int42 f = new test.generated.pg_catalog.routines.Int42();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int42(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Int42 f = new test.generated.pg_catalog.routines.Int42();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int42(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Int42 f = new test.generated.pg_catalog.routines.Int42();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int45(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Int45 f = new test.generated.pg_catalog.routines.Int45();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int45(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Int45 f = new test.generated.pg_catalog.routines.Int45();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int45(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Int45 f = new test.generated.pg_catalog.routines.Int45();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int44(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int44 f = new test.generated.pg_catalog.routines.Int44();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int44(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int44 f = new test.generated.pg_catalog.routines.Int44();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int44(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Int44 f = new test.generated.pg_catalog.routines.Int44();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int46(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Int46 f = new test.generated.pg_catalog.routines.Int46();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int46(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Int46 f = new test.generated.pg_catalog.routines.Int46();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int46(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Int46 f = new test.generated.pg_catalog.routines.Int46();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4_accum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal[] int4Accum(org.jooq.Configuration configuration, java.math.BigDecimal[] __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4Accum f = new test.generated.pg_catalog.routines.Int4Accum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal[]> int4Accum(java.math.BigDecimal[] __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4Accum f = new test.generated.pg_catalog.routines.Int4Accum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal[]> int4Accum(org.jooq.Field<java.math.BigDecimal[]> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4Accum f = new test.generated.pg_catalog.routines.Int4Accum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4_avg_accum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long[] int4AvgAccum(org.jooq.Configuration configuration, java.lang.Long[] __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4AvgAccum f = new test.generated.pg_catalog.routines.Int4AvgAccum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4_avg_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long[]> int4AvgAccum(java.lang.Long[] __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4AvgAccum f = new test.generated.pg_catalog.routines.Int4AvgAccum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4_avg_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long[]> int4AvgAccum(org.jooq.Field<java.lang.Long[]> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4AvgAccum f = new test.generated.pg_catalog.routines.Int4AvgAccum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4_mul_cash
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal int4MulCash(org.jooq.Configuration configuration, java.lang.Integer __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Int4MulCash f = new test.generated.pg_catalog.routines.Int4MulCash();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4_mul_cash as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> int4MulCash(java.lang.Integer __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Int4MulCash f = new test.generated.pg_catalog.routines.Int4MulCash();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4_mul_cash as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> int4MulCash(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.Int4MulCash f = new test.generated.pg_catalog.routines.Int4MulCash();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4_sum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int4Sum(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4Sum f = new test.generated.pg_catalog.routines.Int4Sum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4_sum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int4Sum(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4Sum f = new test.generated.pg_catalog.routines.Int4Sum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4_sum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int4Sum(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4Sum f = new test.generated.pg_catalog.routines.Int4Sum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int42div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int42div(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42div f = new test.generated.pg_catalog.routines.Int42div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int42div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int42div(java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42div f = new test.generated.pg_catalog.routines.Int42div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int42div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int42div(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int42div f = new test.generated.pg_catalog.routines.Int42div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int42eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int42eq(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42eq f = new test.generated.pg_catalog.routines.Int42eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int42eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int42eq(java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42eq f = new test.generated.pg_catalog.routines.Int42eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int42eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int42eq(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int42eq f = new test.generated.pg_catalog.routines.Int42eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int42ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int42ge(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42ge f = new test.generated.pg_catalog.routines.Int42ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int42ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int42ge(java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42ge f = new test.generated.pg_catalog.routines.Int42ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int42ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int42ge(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int42ge f = new test.generated.pg_catalog.routines.Int42ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int42gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int42gt(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42gt f = new test.generated.pg_catalog.routines.Int42gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int42gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int42gt(java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42gt f = new test.generated.pg_catalog.routines.Int42gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int42gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int42gt(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int42gt f = new test.generated.pg_catalog.routines.Int42gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int42le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int42le(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42le f = new test.generated.pg_catalog.routines.Int42le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int42le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int42le(java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42le f = new test.generated.pg_catalog.routines.Int42le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int42le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int42le(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int42le f = new test.generated.pg_catalog.routines.Int42le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int42lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int42lt(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42lt f = new test.generated.pg_catalog.routines.Int42lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int42lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int42lt(java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42lt f = new test.generated.pg_catalog.routines.Int42lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int42lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int42lt(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int42lt f = new test.generated.pg_catalog.routines.Int42lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int42mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int42mi(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42mi f = new test.generated.pg_catalog.routines.Int42mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int42mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int42mi(java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42mi f = new test.generated.pg_catalog.routines.Int42mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int42mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int42mi(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int42mi f = new test.generated.pg_catalog.routines.Int42mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int42mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int42mul(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42mul f = new test.generated.pg_catalog.routines.Int42mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int42mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int42mul(java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42mul f = new test.generated.pg_catalog.routines.Int42mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int42mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int42mul(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int42mul f = new test.generated.pg_catalog.routines.Int42mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int42ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int42ne(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42ne f = new test.generated.pg_catalog.routines.Int42ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int42ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int42ne(java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42ne f = new test.generated.pg_catalog.routines.Int42ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int42ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int42ne(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int42ne f = new test.generated.pg_catalog.routines.Int42ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int42pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int42pl(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42pl f = new test.generated.pg_catalog.routines.Int42pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int42pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int42pl(java.lang.Integer __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int42pl f = new test.generated.pg_catalog.routines.Int42pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int42pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int42pl(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int42pl f = new test.generated.pg_catalog.routines.Int42pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int48div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int48div(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48div f = new test.generated.pg_catalog.routines.Int48div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int48div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int48div(java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48div f = new test.generated.pg_catalog.routines.Int48div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int48div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int48div(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int48div f = new test.generated.pg_catalog.routines.Int48div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int48eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int48eq(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48eq f = new test.generated.pg_catalog.routines.Int48eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int48eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int48eq(java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48eq f = new test.generated.pg_catalog.routines.Int48eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int48eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int48eq(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int48eq f = new test.generated.pg_catalog.routines.Int48eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int48ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int48ge(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48ge f = new test.generated.pg_catalog.routines.Int48ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int48ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int48ge(java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48ge f = new test.generated.pg_catalog.routines.Int48ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int48ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int48ge(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int48ge f = new test.generated.pg_catalog.routines.Int48ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int48gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int48gt(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48gt f = new test.generated.pg_catalog.routines.Int48gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int48gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int48gt(java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48gt f = new test.generated.pg_catalog.routines.Int48gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int48gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int48gt(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int48gt f = new test.generated.pg_catalog.routines.Int48gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int48le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int48le(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48le f = new test.generated.pg_catalog.routines.Int48le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int48le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int48le(java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48le f = new test.generated.pg_catalog.routines.Int48le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int48le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int48le(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int48le f = new test.generated.pg_catalog.routines.Int48le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int48lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int48lt(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48lt f = new test.generated.pg_catalog.routines.Int48lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int48lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int48lt(java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48lt f = new test.generated.pg_catalog.routines.Int48lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int48lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int48lt(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int48lt f = new test.generated.pg_catalog.routines.Int48lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int48mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int48mi(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48mi f = new test.generated.pg_catalog.routines.Int48mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int48mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int48mi(java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48mi f = new test.generated.pg_catalog.routines.Int48mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int48mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int48mi(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int48mi f = new test.generated.pg_catalog.routines.Int48mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int48mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int48mul(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48mul f = new test.generated.pg_catalog.routines.Int48mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int48mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int48mul(java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48mul f = new test.generated.pg_catalog.routines.Int48mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int48mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int48mul(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int48mul f = new test.generated.pg_catalog.routines.Int48mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int48ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int48ne(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48ne f = new test.generated.pg_catalog.routines.Int48ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int48ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int48ne(java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48ne f = new test.generated.pg_catalog.routines.Int48ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int48ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int48ne(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int48ne f = new test.generated.pg_catalog.routines.Int48ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int48pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int48pl(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48pl f = new test.generated.pg_catalog.routines.Int48pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int48pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int48pl(java.lang.Integer __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int48pl f = new test.generated.pg_catalog.routines.Int48pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int48pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int48pl(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int48pl f = new test.generated.pg_catalog.routines.Int48pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4abs
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4abs(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4abs f = new test.generated.pg_catalog.routines.Int4abs();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4abs(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4abs f = new test.generated.pg_catalog.routines.Int4abs();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4abs(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Int4abs f = new test.generated.pg_catalog.routines.Int4abs();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4and
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4and(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4and f = new test.generated.pg_catalog.routines.Int4and();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4and as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4and(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4and f = new test.generated.pg_catalog.routines.Int4and();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4and as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4and(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4and f = new test.generated.pg_catalog.routines.Int4and();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4div(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4div f = new test.generated.pg_catalog.routines.Int4div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4div(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4div f = new test.generated.pg_catalog.routines.Int4div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4div(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4div f = new test.generated.pg_catalog.routines.Int4div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int4eq(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4eq f = new test.generated.pg_catalog.routines.Int4eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int4eq(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4eq f = new test.generated.pg_catalog.routines.Int4eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int4eq(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4eq f = new test.generated.pg_catalog.routines.Int4eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int4ge(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4ge f = new test.generated.pg_catalog.routines.Int4ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int4ge(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4ge f = new test.generated.pg_catalog.routines.Int4ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int4ge(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4ge f = new test.generated.pg_catalog.routines.Int4ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int4gt(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4gt f = new test.generated.pg_catalog.routines.Int4gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int4gt(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4gt f = new test.generated.pg_catalog.routines.Int4gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int4gt(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4gt f = new test.generated.pg_catalog.routines.Int4gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4in(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int4in f = new test.generated.pg_catalog.routines.Int4in();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4in(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int4in f = new test.generated.pg_catalog.routines.Int4in();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4in(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Int4in f = new test.generated.pg_catalog.routines.Int4in();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4inc
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4inc(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4inc f = new test.generated.pg_catalog.routines.Int4inc();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4inc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4inc(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4inc f = new test.generated.pg_catalog.routines.Int4inc();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4inc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4inc(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Int4inc f = new test.generated.pg_catalog.routines.Int4inc();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4larger(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4larger f = new test.generated.pg_catalog.routines.Int4larger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4larger(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4larger f = new test.generated.pg_catalog.routines.Int4larger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4larger(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4larger f = new test.generated.pg_catalog.routines.Int4larger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int4le(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4le f = new test.generated.pg_catalog.routines.Int4le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int4le(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4le f = new test.generated.pg_catalog.routines.Int4le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int4le(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4le f = new test.generated.pg_catalog.routines.Int4le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int4lt(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4lt f = new test.generated.pg_catalog.routines.Int4lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int4lt(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4lt f = new test.generated.pg_catalog.routines.Int4lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int4lt(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4lt f = new test.generated.pg_catalog.routines.Int4lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4mi(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4mi f = new test.generated.pg_catalog.routines.Int4mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4mi(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4mi f = new test.generated.pg_catalog.routines.Int4mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4mi(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4mi f = new test.generated.pg_catalog.routines.Int4mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4mod
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4mod(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4mod f = new test.generated.pg_catalog.routines.Int4mod();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4mod(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4mod f = new test.generated.pg_catalog.routines.Int4mod();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4mod(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4mod f = new test.generated.pg_catalog.routines.Int4mod();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4mul(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4mul f = new test.generated.pg_catalog.routines.Int4mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4mul(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4mul f = new test.generated.pg_catalog.routines.Int4mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4mul(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4mul f = new test.generated.pg_catalog.routines.Int4mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int4ne(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4ne f = new test.generated.pg_catalog.routines.Int4ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int4ne(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4ne f = new test.generated.pg_catalog.routines.Int4ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int4ne(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4ne f = new test.generated.pg_catalog.routines.Int4ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4not
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4not(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4not f = new test.generated.pg_catalog.routines.Int4not();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4not as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4not(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4not f = new test.generated.pg_catalog.routines.Int4not();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4not as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4not(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Int4not f = new test.generated.pg_catalog.routines.Int4not();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4or
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4or(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4or f = new test.generated.pg_catalog.routines.Int4or();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4or as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4or(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4or f = new test.generated.pg_catalog.routines.Int4or();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4or as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4or(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4or f = new test.generated.pg_catalog.routines.Int4or();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object int4out(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4out f = new test.generated.pg_catalog.routines.Int4out();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> int4out(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4out f = new test.generated.pg_catalog.routines.Int4out();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> int4out(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Int4out f = new test.generated.pg_catalog.routines.Int4out();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4pl(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4pl f = new test.generated.pg_catalog.routines.Int4pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4pl(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4pl f = new test.generated.pg_catalog.routines.Int4pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4pl(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4pl f = new test.generated.pg_catalog.routines.Int4pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4recv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int4recv f = new test.generated.pg_catalog.routines.Int4recv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4recv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int4recv f = new test.generated.pg_catalog.routines.Int4recv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4recv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Int4recv f = new test.generated.pg_catalog.routines.Int4recv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] int4send(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4send f = new test.generated.pg_catalog.routines.Int4send();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> int4send(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4send f = new test.generated.pg_catalog.routines.Int4send();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> int4send(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Int4send f = new test.generated.pg_catalog.routines.Int4send();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4shl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4shl(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4shl f = new test.generated.pg_catalog.routines.Int4shl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4shl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4shl(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4shl f = new test.generated.pg_catalog.routines.Int4shl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4shl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4shl(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4shl f = new test.generated.pg_catalog.routines.Int4shl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4shr
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4shr(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4shr f = new test.generated.pg_catalog.routines.Int4shr();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4shr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4shr(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4shr f = new test.generated.pg_catalog.routines.Int4shr();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4shr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4shr(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4shr f = new test.generated.pg_catalog.routines.Int4shr();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4smaller(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4smaller f = new test.generated.pg_catalog.routines.Int4smaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4smaller(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4smaller f = new test.generated.pg_catalog.routines.Int4smaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4smaller(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4smaller f = new test.generated.pg_catalog.routines.Int4smaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4um
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4um(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4um f = new test.generated.pg_catalog.routines.Int4um();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4um as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4um(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4um f = new test.generated.pg_catalog.routines.Int4um();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4um as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4um(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Int4um f = new test.generated.pg_catalog.routines.Int4um();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4up
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4up(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4up f = new test.generated.pg_catalog.routines.Int4up();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4up as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4up(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int4up f = new test.generated.pg_catalog.routines.Int4up();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4up as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> int4up(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Int4up f = new test.generated.pg_catalog.routines.Int4up();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int4xor
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer int4xor(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4xor f = new test.generated.pg_catalog.routines.Int4xor();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int4xor as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4xor(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int4xor f = new test.generated.pg_catalog.routines.Int4xor();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int4xor as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> int4xor(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int4xor f = new test.generated.pg_catalog.routines.Int4xor();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int86(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Int86 f = new test.generated.pg_catalog.routines.Int86();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int86(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Int86 f = new test.generated.pg_catalog.routines.Int86();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int86(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Int86 f = new test.generated.pg_catalog.routines.Int86();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int83(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Int83 f = new test.generated.pg_catalog.routines.Int83();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int83(java.lang.String __1) {
		test.generated.pg_catalog.routines.Int83 f = new test.generated.pg_catalog.routines.Int83();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int83(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Int83 f = new test.generated.pg_catalog.routines.Int83();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int81(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int81 f = new test.generated.pg_catalog.routines.Int81();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int81(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int81 f = new test.generated.pg_catalog.routines.Int81();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int81(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Int81 f = new test.generated.pg_catalog.routines.Int81();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int82(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Int82 f = new test.generated.pg_catalog.routines.Int82();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int82(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Int82 f = new test.generated.pg_catalog.routines.Int82();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int82(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Int82 f = new test.generated.pg_catalog.routines.Int82();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int84(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int84 f = new test.generated.pg_catalog.routines.Int84();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int84(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Int84 f = new test.generated.pg_catalog.routines.Int84();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int84(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Int84 f = new test.generated.pg_catalog.routines.Int84();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int85(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Int85 f = new test.generated.pg_catalog.routines.Int85();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int85(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Int85 f = new test.generated.pg_catalog.routines.Int85();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int85(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Int85 f = new test.generated.pg_catalog.routines.Int85();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int87(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int87 f = new test.generated.pg_catalog.routines.Int87();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int87(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Int87 f = new test.generated.pg_catalog.routines.Int87();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int87(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Int87 f = new test.generated.pg_catalog.routines.Int87();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8_accum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal[] int8Accum(org.jooq.Configuration configuration, java.math.BigDecimal[] __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8Accum f = new test.generated.pg_catalog.routines.Int8Accum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal[]> int8Accum(java.math.BigDecimal[] __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8Accum f = new test.generated.pg_catalog.routines.Int8Accum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal[]> int8Accum(org.jooq.Field<java.math.BigDecimal[]> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8Accum f = new test.generated.pg_catalog.routines.Int8Accum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8_avg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal int8Avg(org.jooq.Configuration configuration, java.lang.Long[] __1) {
		test.generated.pg_catalog.routines.Int8Avg f = new test.generated.pg_catalog.routines.Int8Avg();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8_avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> int8Avg(java.lang.Long[] __1) {
		test.generated.pg_catalog.routines.Int8Avg f = new test.generated.pg_catalog.routines.Int8Avg();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8_avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> int8Avg(org.jooq.Field<java.lang.Long[]> __1) {
		test.generated.pg_catalog.routines.Int8Avg f = new test.generated.pg_catalog.routines.Int8Avg();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8_avg_accum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal[] int8AvgAccum(org.jooq.Configuration configuration, java.math.BigDecimal[] __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8AvgAccum f = new test.generated.pg_catalog.routines.Int8AvgAccum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8_avg_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal[]> int8AvgAccum(java.math.BigDecimal[] __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8AvgAccum f = new test.generated.pg_catalog.routines.Int8AvgAccum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8_avg_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal[]> int8AvgAccum(org.jooq.Field<java.math.BigDecimal[]> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8AvgAccum f = new test.generated.pg_catalog.routines.Int8AvgAccum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8_sum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal int8Sum(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8Sum f = new test.generated.pg_catalog.routines.Int8Sum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8_sum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> int8Sum(java.math.BigDecimal __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8Sum f = new test.generated.pg_catalog.routines.Int8Sum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8_sum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> int8Sum(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8Sum f = new test.generated.pg_catalog.routines.Int8Sum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int82div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int82div(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82div f = new test.generated.pg_catalog.routines.Int82div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int82div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int82div(java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82div f = new test.generated.pg_catalog.routines.Int82div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int82div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int82div(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int82div f = new test.generated.pg_catalog.routines.Int82div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int82eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int82eq(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82eq f = new test.generated.pg_catalog.routines.Int82eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int82eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int82eq(java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82eq f = new test.generated.pg_catalog.routines.Int82eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int82eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int82eq(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int82eq f = new test.generated.pg_catalog.routines.Int82eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int82ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int82ge(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82ge f = new test.generated.pg_catalog.routines.Int82ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int82ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int82ge(java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82ge f = new test.generated.pg_catalog.routines.Int82ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int82ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int82ge(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int82ge f = new test.generated.pg_catalog.routines.Int82ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int82gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int82gt(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82gt f = new test.generated.pg_catalog.routines.Int82gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int82gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int82gt(java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82gt f = new test.generated.pg_catalog.routines.Int82gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int82gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int82gt(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int82gt f = new test.generated.pg_catalog.routines.Int82gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int82le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int82le(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82le f = new test.generated.pg_catalog.routines.Int82le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int82le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int82le(java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82le f = new test.generated.pg_catalog.routines.Int82le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int82le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int82le(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int82le f = new test.generated.pg_catalog.routines.Int82le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int82lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int82lt(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82lt f = new test.generated.pg_catalog.routines.Int82lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int82lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int82lt(java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82lt f = new test.generated.pg_catalog.routines.Int82lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int82lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int82lt(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int82lt f = new test.generated.pg_catalog.routines.Int82lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int82mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int82mi(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82mi f = new test.generated.pg_catalog.routines.Int82mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int82mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int82mi(java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82mi f = new test.generated.pg_catalog.routines.Int82mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int82mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int82mi(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int82mi f = new test.generated.pg_catalog.routines.Int82mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int82mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int82mul(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82mul f = new test.generated.pg_catalog.routines.Int82mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int82mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int82mul(java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82mul f = new test.generated.pg_catalog.routines.Int82mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int82mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int82mul(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int82mul f = new test.generated.pg_catalog.routines.Int82mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int82ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int82ne(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82ne f = new test.generated.pg_catalog.routines.Int82ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int82ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int82ne(java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82ne f = new test.generated.pg_catalog.routines.Int82ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int82ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int82ne(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int82ne f = new test.generated.pg_catalog.routines.Int82ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int82pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int82pl(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82pl f = new test.generated.pg_catalog.routines.Int82pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int82pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int82pl(java.lang.Long __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Int82pl f = new test.generated.pg_catalog.routines.Int82pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int82pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int82pl(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Int82pl f = new test.generated.pg_catalog.routines.Int82pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int84div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int84div(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84div f = new test.generated.pg_catalog.routines.Int84div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int84div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int84div(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84div f = new test.generated.pg_catalog.routines.Int84div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int84div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int84div(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int84div f = new test.generated.pg_catalog.routines.Int84div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int84eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int84eq(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84eq f = new test.generated.pg_catalog.routines.Int84eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int84eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int84eq(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84eq f = new test.generated.pg_catalog.routines.Int84eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int84eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int84eq(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int84eq f = new test.generated.pg_catalog.routines.Int84eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int84ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int84ge(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84ge f = new test.generated.pg_catalog.routines.Int84ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int84ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int84ge(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84ge f = new test.generated.pg_catalog.routines.Int84ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int84ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int84ge(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int84ge f = new test.generated.pg_catalog.routines.Int84ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int84gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int84gt(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84gt f = new test.generated.pg_catalog.routines.Int84gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int84gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int84gt(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84gt f = new test.generated.pg_catalog.routines.Int84gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int84gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int84gt(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int84gt f = new test.generated.pg_catalog.routines.Int84gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int84le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int84le(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84le f = new test.generated.pg_catalog.routines.Int84le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int84le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int84le(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84le f = new test.generated.pg_catalog.routines.Int84le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int84le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int84le(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int84le f = new test.generated.pg_catalog.routines.Int84le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int84lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int84lt(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84lt f = new test.generated.pg_catalog.routines.Int84lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int84lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int84lt(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84lt f = new test.generated.pg_catalog.routines.Int84lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int84lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int84lt(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int84lt f = new test.generated.pg_catalog.routines.Int84lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int84mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int84mi(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84mi f = new test.generated.pg_catalog.routines.Int84mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int84mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int84mi(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84mi f = new test.generated.pg_catalog.routines.Int84mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int84mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int84mi(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int84mi f = new test.generated.pg_catalog.routines.Int84mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int84mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int84mul(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84mul f = new test.generated.pg_catalog.routines.Int84mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int84mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int84mul(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84mul f = new test.generated.pg_catalog.routines.Int84mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int84mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int84mul(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int84mul f = new test.generated.pg_catalog.routines.Int84mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int84ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int84ne(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84ne f = new test.generated.pg_catalog.routines.Int84ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int84ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int84ne(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84ne f = new test.generated.pg_catalog.routines.Int84ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int84ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int84ne(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int84ne f = new test.generated.pg_catalog.routines.Int84ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int84pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int84pl(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84pl f = new test.generated.pg_catalog.routines.Int84pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int84pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int84pl(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int84pl f = new test.generated.pg_catalog.routines.Int84pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int84pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int84pl(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int84pl f = new test.generated.pg_catalog.routines.Int84pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8abs
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8abs(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8abs f = new test.generated.pg_catalog.routines.Int8abs();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8abs(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8abs f = new test.generated.pg_catalog.routines.Int8abs();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8abs(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Int8abs f = new test.generated.pg_catalog.routines.Int8abs();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8and
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8and(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8and f = new test.generated.pg_catalog.routines.Int8and();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8and as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8and(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8and f = new test.generated.pg_catalog.routines.Int8and();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8and as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8and(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8and f = new test.generated.pg_catalog.routines.Int8and();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8div(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8div f = new test.generated.pg_catalog.routines.Int8div();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8div(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8div f = new test.generated.pg_catalog.routines.Int8div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8div(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8div f = new test.generated.pg_catalog.routines.Int8div();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int8eq(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8eq f = new test.generated.pg_catalog.routines.Int8eq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int8eq(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8eq f = new test.generated.pg_catalog.routines.Int8eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int8eq(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8eq f = new test.generated.pg_catalog.routines.Int8eq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int8ge(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8ge f = new test.generated.pg_catalog.routines.Int8ge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int8ge(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8ge f = new test.generated.pg_catalog.routines.Int8ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int8ge(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8ge f = new test.generated.pg_catalog.routines.Int8ge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int8gt(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8gt f = new test.generated.pg_catalog.routines.Int8gt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int8gt(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8gt f = new test.generated.pg_catalog.routines.Int8gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int8gt(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8gt f = new test.generated.pg_catalog.routines.Int8gt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8in(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int8in f = new test.generated.pg_catalog.routines.Int8in();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8in(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int8in f = new test.generated.pg_catalog.routines.Int8in();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8in(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Int8in f = new test.generated.pg_catalog.routines.Int8in();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8inc
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8inc(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8inc f = new test.generated.pg_catalog.routines.Int8inc();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8inc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8inc(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8inc f = new test.generated.pg_catalog.routines.Int8inc();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8inc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8inc(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Int8inc f = new test.generated.pg_catalog.routines.Int8inc();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8inc_any
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8incAny(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Int8incAny f = new test.generated.pg_catalog.routines.Int8incAny();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8inc_any as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8incAny(java.lang.Long __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Int8incAny f = new test.generated.pg_catalog.routines.Int8incAny();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8inc_any as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8incAny(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Int8incAny f = new test.generated.pg_catalog.routines.Int8incAny();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8inc_float8_float8
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8incFloat8Float8(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Double __2, java.lang.Double __3) {
		test.generated.pg_catalog.routines.Int8incFloat8Float8 f = new test.generated.pg_catalog.routines.Int8incFloat8Float8();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8inc_float8_float8 as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Long> int8incFloat8Float8(java.lang.Long __1, java.lang.Double __2, java.lang.Double __3) {
		test.generated.pg_catalog.routines.Int8incFloat8Float8 f = new test.generated.pg_catalog.routines.Int8incFloat8Float8();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8inc_float8_float8 as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Long> int8incFloat8Float8(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Double> __2, org.jooq.Field<java.lang.Double> __3) {
		test.generated.pg_catalog.routines.Int8incFloat8Float8 f = new test.generated.pg_catalog.routines.Int8incFloat8Float8();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8larger(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8larger f = new test.generated.pg_catalog.routines.Int8larger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8larger(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8larger f = new test.generated.pg_catalog.routines.Int8larger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8larger(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8larger f = new test.generated.pg_catalog.routines.Int8larger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int8le(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8le f = new test.generated.pg_catalog.routines.Int8le();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int8le(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8le f = new test.generated.pg_catalog.routines.Int8le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int8le(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8le f = new test.generated.pg_catalog.routines.Int8le();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int8lt(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8lt f = new test.generated.pg_catalog.routines.Int8lt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int8lt(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8lt f = new test.generated.pg_catalog.routines.Int8lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int8lt(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8lt f = new test.generated.pg_catalog.routines.Int8lt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8mi(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8mi f = new test.generated.pg_catalog.routines.Int8mi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8mi(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8mi f = new test.generated.pg_catalog.routines.Int8mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8mi(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8mi f = new test.generated.pg_catalog.routines.Int8mi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8mod
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8mod(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8mod f = new test.generated.pg_catalog.routines.Int8mod();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8mod(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8mod f = new test.generated.pg_catalog.routines.Int8mod();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8mod(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8mod f = new test.generated.pg_catalog.routines.Int8mod();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8mul(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8mul f = new test.generated.pg_catalog.routines.Int8mul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8mul(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8mul f = new test.generated.pg_catalog.routines.Int8mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8mul(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8mul f = new test.generated.pg_catalog.routines.Int8mul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean int8ne(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8ne f = new test.generated.pg_catalog.routines.Int8ne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int8ne(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8ne f = new test.generated.pg_catalog.routines.Int8ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> int8ne(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8ne f = new test.generated.pg_catalog.routines.Int8ne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8not
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8not(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8not f = new test.generated.pg_catalog.routines.Int8not();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8not as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8not(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8not f = new test.generated.pg_catalog.routines.Int8not();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8not as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8not(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Int8not f = new test.generated.pg_catalog.routines.Int8not();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8or
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8or(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8or f = new test.generated.pg_catalog.routines.Int8or();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8or as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8or(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8or f = new test.generated.pg_catalog.routines.Int8or();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8or as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8or(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8or f = new test.generated.pg_catalog.routines.Int8or();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object int8out(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8out f = new test.generated.pg_catalog.routines.Int8out();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> int8out(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8out f = new test.generated.pg_catalog.routines.Int8out();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> int8out(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Int8out f = new test.generated.pg_catalog.routines.Int8out();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8pl(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8pl f = new test.generated.pg_catalog.routines.Int8pl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8pl(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8pl f = new test.generated.pg_catalog.routines.Int8pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8pl(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8pl f = new test.generated.pg_catalog.routines.Int8pl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8pl_inet
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object int8plInet(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Int8plInet f = new test.generated.pg_catalog.routines.Int8plInet();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8pl_inet as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> int8plInet(java.lang.Long __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Int8plInet f = new test.generated.pg_catalog.routines.Int8plInet();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8pl_inet as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> int8plInet(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Int8plInet f = new test.generated.pg_catalog.routines.Int8plInet();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8recv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int8recv f = new test.generated.pg_catalog.routines.Int8recv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8recv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Int8recv f = new test.generated.pg_catalog.routines.Int8recv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8recv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Int8recv f = new test.generated.pg_catalog.routines.Int8recv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] int8send(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8send f = new test.generated.pg_catalog.routines.Int8send();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> int8send(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8send f = new test.generated.pg_catalog.routines.Int8send();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> int8send(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Int8send f = new test.generated.pg_catalog.routines.Int8send();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8shl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8shl(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int8shl f = new test.generated.pg_catalog.routines.Int8shl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8shl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8shl(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int8shl f = new test.generated.pg_catalog.routines.Int8shl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8shl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8shl(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int8shl f = new test.generated.pg_catalog.routines.Int8shl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8shr
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8shr(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int8shr f = new test.generated.pg_catalog.routines.Int8shr();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8shr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8shr(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Int8shr f = new test.generated.pg_catalog.routines.Int8shr();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8shr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8shr(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Int8shr f = new test.generated.pg_catalog.routines.Int8shr();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8smaller(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8smaller f = new test.generated.pg_catalog.routines.Int8smaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8smaller(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8smaller f = new test.generated.pg_catalog.routines.Int8smaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8smaller(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8smaller f = new test.generated.pg_catalog.routines.Int8smaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8um
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8um(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8um f = new test.generated.pg_catalog.routines.Int8um();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8um as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8um(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8um f = new test.generated.pg_catalog.routines.Int8um();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8um as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8um(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Int8um f = new test.generated.pg_catalog.routines.Int8um();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8up
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8up(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8up f = new test.generated.pg_catalog.routines.Int8up();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8up as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8up(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Int8up f = new test.generated.pg_catalog.routines.Int8up();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8up as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> int8up(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Int8up f = new test.generated.pg_catalog.routines.Int8up();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.int8xor
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long int8xor(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8xor f = new test.generated.pg_catalog.routines.Int8xor();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.int8xor as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8xor(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Int8xor f = new test.generated.pg_catalog.routines.Int8xor();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.int8xor as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> int8xor(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Int8xor f = new test.generated.pg_catalog.routines.Int8xor();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.integer_pl_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date integerPlDate(org.jooq.Configuration configuration, java.lang.Integer __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.IntegerPlDate f = new test.generated.pg_catalog.routines.IntegerPlDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.integer_pl_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Date> integerPlDate(java.lang.Integer __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.IntegerPlDate f = new test.generated.pg_catalog.routines.IntegerPlDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.integer_pl_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Date> integerPlDate(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.IntegerPlDate f = new test.generated.pg_catalog.routines.IntegerPlDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inter_lb
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean interLb(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.InterLb f = new test.generated.pg_catalog.routines.InterLb();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inter_lb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> interLb(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.InterLb f = new test.generated.pg_catalog.routines.InterLb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inter_lb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> interLb(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.InterLb f = new test.generated.pg_catalog.routines.InterLb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inter_sb
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean interSb(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.InterSb f = new test.generated.pg_catalog.routines.InterSb();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inter_sb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> interSb(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.InterSb f = new test.generated.pg_catalog.routines.InterSb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inter_sb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> interSb(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.InterSb f = new test.generated.pg_catalog.routines.InterSb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.inter_sl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean interSl(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.InterSl f = new test.generated.pg_catalog.routines.InterSl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.inter_sl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> interSl(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.InterSl f = new test.generated.pg_catalog.routines.InterSl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.inter_sl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> interSl(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.InterSl f = new test.generated.pg_catalog.routines.InterSl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.internal_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object internalIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.InternalIn f = new test.generated.pg_catalog.routines.InternalIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.internal_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> internalIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.InternalIn f = new test.generated.pg_catalog.routines.InternalIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.internal_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> internalIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.InternalIn f = new test.generated.pg_catalog.routines.InternalIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.internal_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object internalOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.InternalOut f = new test.generated.pg_catalog.routines.InternalOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.internal_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> internalOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.InternalOut f = new test.generated.pg_catalog.routines.InternalOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.internal_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> internalOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.InternalOut f = new test.generated.pg_catalog.routines.InternalOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object interval2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Interval2 f = new test.generated.pg_catalog.routines.Interval2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> interval2(java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Interval2 f = new test.generated.pg_catalog.routines.Interval2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> interval2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Interval2 f = new test.generated.pg_catalog.routines.Interval2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object interval1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Interval1 f = new test.generated.pg_catalog.routines.Interval1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> interval1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Interval1 f = new test.generated.pg_catalog.routines.Interval1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> interval1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Interval1 f = new test.generated.pg_catalog.routines.Interval1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object interval3(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.Interval3 f = new test.generated.pg_catalog.routines.Interval3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> interval3(java.sql.Time __1) {
		test.generated.pg_catalog.routines.Interval3 f = new test.generated.pg_catalog.routines.Interval3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> interval3(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.Interval3 f = new test.generated.pg_catalog.routines.Interval3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_accum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object[] intervalAccum(org.jooq.Configuration configuration, java.lang.Object[] __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalAccum f = new test.generated.pg_catalog.routines.IntervalAccum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object[]> intervalAccum(java.lang.Object[] __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalAccum f = new test.generated.pg_catalog.routines.IntervalAccum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object[]> intervalAccum(org.jooq.Field<java.lang.Object[]> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.IntervalAccum f = new test.generated.pg_catalog.routines.IntervalAccum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_avg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object intervalAvg(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.IntervalAvg f = new test.generated.pg_catalog.routines.IntervalAvg();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> intervalAvg(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.IntervalAvg f = new test.generated.pg_catalog.routines.IntervalAvg();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> intervalAvg(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.IntervalAvg f = new test.generated.pg_catalog.routines.IntervalAvg();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer intervalCmp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalCmp f = new test.generated.pg_catalog.routines.IntervalCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> intervalCmp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalCmp f = new test.generated.pg_catalog.routines.IntervalCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> intervalCmp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.IntervalCmp f = new test.generated.pg_catalog.routines.IntervalCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object intervalDiv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.IntervalDiv f = new test.generated.pg_catalog.routines.IntervalDiv();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> intervalDiv(java.lang.Object __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.IntervalDiv f = new test.generated.pg_catalog.routines.IntervalDiv();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> intervalDiv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.IntervalDiv f = new test.generated.pg_catalog.routines.IntervalDiv();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean intervalEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalEq f = new test.generated.pg_catalog.routines.IntervalEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intervalEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalEq f = new test.generated.pg_catalog.routines.IntervalEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intervalEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.IntervalEq f = new test.generated.pg_catalog.routines.IntervalEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean intervalGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalGe f = new test.generated.pg_catalog.routines.IntervalGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intervalGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalGe f = new test.generated.pg_catalog.routines.IntervalGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intervalGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.IntervalGe f = new test.generated.pg_catalog.routines.IntervalGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean intervalGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalGt f = new test.generated.pg_catalog.routines.IntervalGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intervalGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalGt f = new test.generated.pg_catalog.routines.IntervalGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intervalGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.IntervalGt f = new test.generated.pg_catalog.routines.IntervalGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_hash
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer intervalHash(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.IntervalHash f = new test.generated.pg_catalog.routines.IntervalHash();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_hash as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> intervalHash(java.lang.Object __1) {
		test.generated.pg_catalog.routines.IntervalHash f = new test.generated.pg_catalog.routines.IntervalHash();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_hash as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> intervalHash(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.IntervalHash f = new test.generated.pg_catalog.routines.IntervalHash();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_in
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object intervalIn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.IntervalIn f = new test.generated.pg_catalog.routines.IntervalIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> intervalIn(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.IntervalIn f = new test.generated.pg_catalog.routines.IntervalIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> intervalIn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.IntervalIn f = new test.generated.pg_catalog.routines.IntervalIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object intervalLarger(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalLarger f = new test.generated.pg_catalog.routines.IntervalLarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> intervalLarger(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalLarger f = new test.generated.pg_catalog.routines.IntervalLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> intervalLarger(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.IntervalLarger f = new test.generated.pg_catalog.routines.IntervalLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean intervalLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalLe f = new test.generated.pg_catalog.routines.IntervalLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intervalLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalLe f = new test.generated.pg_catalog.routines.IntervalLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intervalLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.IntervalLe f = new test.generated.pg_catalog.routines.IntervalLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean intervalLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalLt f = new test.generated.pg_catalog.routines.IntervalLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intervalLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalLt f = new test.generated.pg_catalog.routines.IntervalLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intervalLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.IntervalLt f = new test.generated.pg_catalog.routines.IntervalLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object intervalMi(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalMi f = new test.generated.pg_catalog.routines.IntervalMi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> intervalMi(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalMi f = new test.generated.pg_catalog.routines.IntervalMi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> intervalMi(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.IntervalMi f = new test.generated.pg_catalog.routines.IntervalMi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object intervalMul(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.IntervalMul f = new test.generated.pg_catalog.routines.IntervalMul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> intervalMul(java.lang.Object __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.IntervalMul f = new test.generated.pg_catalog.routines.IntervalMul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> intervalMul(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.IntervalMul f = new test.generated.pg_catalog.routines.IntervalMul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean intervalNe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalNe f = new test.generated.pg_catalog.routines.IntervalNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intervalNe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalNe f = new test.generated.pg_catalog.routines.IntervalNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intervalNe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.IntervalNe f = new test.generated.pg_catalog.routines.IntervalNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object intervalOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.IntervalOut f = new test.generated.pg_catalog.routines.IntervalOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> intervalOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.IntervalOut f = new test.generated.pg_catalog.routines.IntervalOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> intervalOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.IntervalOut f = new test.generated.pg_catalog.routines.IntervalOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object intervalPl(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalPl f = new test.generated.pg_catalog.routines.IntervalPl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> intervalPl(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalPl f = new test.generated.pg_catalog.routines.IntervalPl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> intervalPl(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.IntervalPl f = new test.generated.pg_catalog.routines.IntervalPl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_pl_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp intervalPlDate(org.jooq.Configuration configuration, java.lang.Object __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.IntervalPlDate f = new test.generated.pg_catalog.routines.IntervalPlDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_pl_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> intervalPlDate(java.lang.Object __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.IntervalPlDate f = new test.generated.pg_catalog.routines.IntervalPlDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_pl_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> intervalPlDate(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.IntervalPlDate f = new test.generated.pg_catalog.routines.IntervalPlDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_pl_time
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time intervalPlTime(org.jooq.Configuration configuration, java.lang.Object __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.IntervalPlTime f = new test.generated.pg_catalog.routines.IntervalPlTime();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_pl_time as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> intervalPlTime(java.lang.Object __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.IntervalPlTime f = new test.generated.pg_catalog.routines.IntervalPlTime();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_pl_time as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> intervalPlTime(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.IntervalPlTime f = new test.generated.pg_catalog.routines.IntervalPlTime();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_pl_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp intervalPlTimestamp(org.jooq.Configuration configuration, java.lang.Object __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.IntervalPlTimestamp f = new test.generated.pg_catalog.routines.IntervalPlTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_pl_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> intervalPlTimestamp(java.lang.Object __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.IntervalPlTimestamp f = new test.generated.pg_catalog.routines.IntervalPlTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_pl_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> intervalPlTimestamp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.IntervalPlTimestamp f = new test.generated.pg_catalog.routines.IntervalPlTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_pl_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp intervalPlTimestamptz(org.jooq.Configuration configuration, java.lang.Object __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.IntervalPlTimestamptz f = new test.generated.pg_catalog.routines.IntervalPlTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_pl_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> intervalPlTimestamptz(java.lang.Object __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.IntervalPlTimestamptz f = new test.generated.pg_catalog.routines.IntervalPlTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_pl_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> intervalPlTimestamptz(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.IntervalPlTimestamptz f = new test.generated.pg_catalog.routines.IntervalPlTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_pl_timetz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time intervalPlTimetz(org.jooq.Configuration configuration, java.lang.Object __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.IntervalPlTimetz f = new test.generated.pg_catalog.routines.IntervalPlTimetz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_pl_timetz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> intervalPlTimetz(java.lang.Object __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.IntervalPlTimetz f = new test.generated.pg_catalog.routines.IntervalPlTimetz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_pl_timetz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> intervalPlTimetz(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.IntervalPlTimetz f = new test.generated.pg_catalog.routines.IntervalPlTimetz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_recv
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object intervalRecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.IntervalRecv f = new test.generated.pg_catalog.routines.IntervalRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> intervalRecv(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.IntervalRecv f = new test.generated.pg_catalog.routines.IntervalRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> intervalRecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.IntervalRecv f = new test.generated.pg_catalog.routines.IntervalRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] intervalSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.IntervalSend f = new test.generated.pg_catalog.routines.IntervalSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> intervalSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.IntervalSend f = new test.generated.pg_catalog.routines.IntervalSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> intervalSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.IntervalSend f = new test.generated.pg_catalog.routines.IntervalSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object intervalSmaller(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalSmaller f = new test.generated.pg_catalog.routines.IntervalSmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> intervalSmaller(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.IntervalSmaller f = new test.generated.pg_catalog.routines.IntervalSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> intervalSmaller(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.IntervalSmaller f = new test.generated.pg_catalog.routines.IntervalSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.interval_um
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object intervalUm(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.IntervalUm f = new test.generated.pg_catalog.routines.IntervalUm();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.interval_um as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> intervalUm(java.lang.Object __1) {
		test.generated.pg_catalog.routines.IntervalUm f = new test.generated.pg_catalog.routines.IntervalUm();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.interval_um as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> intervalUm(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.IntervalUm f = new test.generated.pg_catalog.routines.IntervalUm();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.intervaltypmodin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer intervaltypmodin(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Intervaltypmodin f = new test.generated.pg_catalog.routines.Intervaltypmodin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.intervaltypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> intervaltypmodin(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Intervaltypmodin f = new test.generated.pg_catalog.routines.Intervaltypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.intervaltypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> intervaltypmodin(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Intervaltypmodin f = new test.generated.pg_catalog.routines.Intervaltypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.intervaltypmodout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object intervaltypmodout(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Intervaltypmodout f = new test.generated.pg_catalog.routines.Intervaltypmodout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.intervaltypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> intervaltypmodout(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Intervaltypmodout f = new test.generated.pg_catalog.routines.Intervaltypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.intervaltypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> intervaltypmodout(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Intervaltypmodout f = new test.generated.pg_catalog.routines.Intervaltypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.intinterval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean intinterval(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Intinterval f = new test.generated.pg_catalog.routines.Intinterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.intinterval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intinterval(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Intinterval f = new test.generated.pg_catalog.routines.Intinterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.intinterval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> intinterval(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Intinterval f = new test.generated.pg_catalog.routines.Intinterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isclosed
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isclosed(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Isclosed f = new test.generated.pg_catalog.routines.Isclosed();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isclosed as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isclosed(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Isclosed f = new test.generated.pg_catalog.routines.Isclosed();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isclosed as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isclosed(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Isclosed f = new test.generated.pg_catalog.routines.Isclosed();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isfinite
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isfinite2(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Isfinite2 f = new test.generated.pg_catalog.routines.Isfinite2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isfinite as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isfinite2(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Isfinite2 f = new test.generated.pg_catalog.routines.Isfinite2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isfinite as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isfinite2(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Isfinite2 f = new test.generated.pg_catalog.routines.Isfinite2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isfinite
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isfinite4(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Isfinite4 f = new test.generated.pg_catalog.routines.Isfinite4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isfinite as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isfinite4(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Isfinite4 f = new test.generated.pg_catalog.routines.Isfinite4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isfinite as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isfinite4(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Isfinite4 f = new test.generated.pg_catalog.routines.Isfinite4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isfinite
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isfinite3(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Isfinite3 f = new test.generated.pg_catalog.routines.Isfinite3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isfinite as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isfinite3(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Isfinite3 f = new test.generated.pg_catalog.routines.Isfinite3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isfinite as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isfinite3(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Isfinite3 f = new test.generated.pg_catalog.routines.Isfinite3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isfinite
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isfinite1(org.jooq.Configuration configuration, java.sql.Date __1) {
		test.generated.pg_catalog.routines.Isfinite1 f = new test.generated.pg_catalog.routines.Isfinite1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isfinite as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isfinite1(java.sql.Date __1) {
		test.generated.pg_catalog.routines.Isfinite1 f = new test.generated.pg_catalog.routines.Isfinite1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isfinite as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isfinite1(org.jooq.Field<java.sql.Date> __1) {
		test.generated.pg_catalog.routines.Isfinite1 f = new test.generated.pg_catalog.routines.Isfinite1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isfinite
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isfinite5(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Isfinite5 f = new test.generated.pg_catalog.routines.Isfinite5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isfinite as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isfinite5(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Isfinite5 f = new test.generated.pg_catalog.routines.Isfinite5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isfinite as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isfinite5(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Isfinite5 f = new test.generated.pg_catalog.routines.Isfinite5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ishorizontal
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean ishorizontal3(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Ishorizontal3 f = new test.generated.pg_catalog.routines.Ishorizontal3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ishorizontal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> ishorizontal3(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Ishorizontal3 f = new test.generated.pg_catalog.routines.Ishorizontal3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ishorizontal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> ishorizontal3(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Ishorizontal3 f = new test.generated.pg_catalog.routines.Ishorizontal3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ishorizontal
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean ishorizontal2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Ishorizontal2 f = new test.generated.pg_catalog.routines.Ishorizontal2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ishorizontal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> ishorizontal2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Ishorizontal2 f = new test.generated.pg_catalog.routines.Ishorizontal2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ishorizontal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> ishorizontal2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Ishorizontal2 f = new test.generated.pg_catalog.routines.Ishorizontal2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ishorizontal
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean ishorizontal1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Ishorizontal1 f = new test.generated.pg_catalog.routines.Ishorizontal1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ishorizontal as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> ishorizontal1(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Ishorizontal1 f = new test.generated.pg_catalog.routines.Ishorizontal1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ishorizontal as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> ishorizontal1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Ishorizontal1 f = new test.generated.pg_catalog.routines.Ishorizontal1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.iso_to_koi8r
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void isoToKoi8r(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.IsoToKoi8r p = new test.generated.pg_catalog.routines.IsoToKoi8r();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.iso_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void isoToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.IsoToMic p = new test.generated.pg_catalog.routines.IsoToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.iso_to_win1251
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void isoToWin1251(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.IsoToWin1251 p = new test.generated.pg_catalog.routines.IsoToWin1251();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.iso_to_win866
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void isoToWin866(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.IsoToWin866 p = new test.generated.pg_catalog.routines.IsoToWin866();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.iso8859_1_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void iso8859_1ToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Iso8859_1ToUtf8 p = new test.generated.pg_catalog.routines.Iso8859_1ToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.iso8859_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void iso8859ToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Iso8859ToUtf8 p = new test.generated.pg_catalog.routines.Iso8859ToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.isopen
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isopen(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Isopen f = new test.generated.pg_catalog.routines.Isopen();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isopen as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isopen(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Isopen f = new test.generated.pg_catalog.routines.Isopen();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isopen as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isopen(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Isopen f = new test.generated.pg_catalog.routines.Isopen();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isparallel
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isparallel2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Isparallel2 f = new test.generated.pg_catalog.routines.Isparallel2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isparallel as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> isparallel2(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Isparallel2 f = new test.generated.pg_catalog.routines.Isparallel2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isparallel as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> isparallel2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Isparallel2 f = new test.generated.pg_catalog.routines.Isparallel2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isparallel
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isparallel1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Isparallel1 f = new test.generated.pg_catalog.routines.Isparallel1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isparallel as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> isparallel1(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Isparallel1 f = new test.generated.pg_catalog.routines.Isparallel1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isparallel as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> isparallel1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Isparallel1 f = new test.generated.pg_catalog.routines.Isparallel1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isperp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isperp2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Isperp2 f = new test.generated.pg_catalog.routines.Isperp2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isperp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> isperp2(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Isperp2 f = new test.generated.pg_catalog.routines.Isperp2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isperp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> isperp2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Isperp2 f = new test.generated.pg_catalog.routines.Isperp2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isperp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isperp1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Isperp1 f = new test.generated.pg_catalog.routines.Isperp1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isperp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> isperp1(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Isperp1 f = new test.generated.pg_catalog.routines.Isperp1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isperp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> isperp1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Isperp1 f = new test.generated.pg_catalog.routines.Isperp1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isvertical
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isvertical2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Isvertical2 f = new test.generated.pg_catalog.routines.Isvertical2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isvertical as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isvertical2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Isvertical2 f = new test.generated.pg_catalog.routines.Isvertical2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isvertical as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isvertical2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Isvertical2 f = new test.generated.pg_catalog.routines.Isvertical2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isvertical
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isvertical3(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Isvertical3 f = new test.generated.pg_catalog.routines.Isvertical3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isvertical as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isvertical3(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Isvertical3 f = new test.generated.pg_catalog.routines.Isvertical3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isvertical as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> isvertical3(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Isvertical3 f = new test.generated.pg_catalog.routines.Isvertical3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.isvertical
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean isvertical1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Isvertical1 f = new test.generated.pg_catalog.routines.Isvertical1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.isvertical as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> isvertical1(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Isvertical1 f = new test.generated.pg_catalog.routines.Isvertical1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.isvertical as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> isvertical1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Isvertical1 f = new test.generated.pg_catalog.routines.Isvertical1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.johab_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void johabToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.JohabToUtf8 p = new test.generated.pg_catalog.routines.JohabToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.justify_days
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object justifyDays(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.JustifyDays f = new test.generated.pg_catalog.routines.JustifyDays();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.justify_days as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> justifyDays(java.lang.Object __1) {
		test.generated.pg_catalog.routines.JustifyDays f = new test.generated.pg_catalog.routines.JustifyDays();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.justify_days as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> justifyDays(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.JustifyDays f = new test.generated.pg_catalog.routines.JustifyDays();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.justify_hours
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object justifyHours(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.JustifyHours f = new test.generated.pg_catalog.routines.JustifyHours();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.justify_hours as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> justifyHours(java.lang.Object __1) {
		test.generated.pg_catalog.routines.JustifyHours f = new test.generated.pg_catalog.routines.JustifyHours();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.justify_hours as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> justifyHours(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.JustifyHours f = new test.generated.pg_catalog.routines.JustifyHours();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.justify_interval
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object justifyInterval(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.JustifyInterval f = new test.generated.pg_catalog.routines.JustifyInterval();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.justify_interval as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> justifyInterval(java.lang.Object __1) {
		test.generated.pg_catalog.routines.JustifyInterval f = new test.generated.pg_catalog.routines.JustifyInterval();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.justify_interval as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> justifyInterval(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.JustifyInterval f = new test.generated.pg_catalog.routines.JustifyInterval();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.koi8r_to_iso
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void koi8rToIso(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Koi8rToIso p = new test.generated.pg_catalog.routines.Koi8rToIso();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.koi8r_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void koi8rToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Koi8rToMic p = new test.generated.pg_catalog.routines.Koi8rToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.koi8r_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void koi8rToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Koi8rToUtf8 p = new test.generated.pg_catalog.routines.Koi8rToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.koi8r_to_win1251
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void koi8rToWin1251(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Koi8rToWin1251 p = new test.generated.pg_catalog.routines.Koi8rToWin1251();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.koi8r_to_win866
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void koi8rToWin866(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Koi8rToWin866 p = new test.generated.pg_catalog.routines.Koi8rToWin866();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.koi8u_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void koi8uToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Koi8uToUtf8 p = new test.generated.pg_catalog.routines.Koi8uToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.lag
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lag2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Lag2 f = new test.generated.pg_catalog.routines.Lag2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lag as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> lag2(java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Lag2 f = new test.generated.pg_catalog.routines.Lag2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lag as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> lag2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Lag2 f = new test.generated.pg_catalog.routines.Lag2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lag
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lag1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Lag1 f = new test.generated.pg_catalog.routines.Lag1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lag as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lag1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Lag1 f = new test.generated.pg_catalog.routines.Lag1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lag as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lag1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Lag1 f = new test.generated.pg_catalog.routines.Lag1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lag
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lag3(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Lag3 f = new test.generated.pg_catalog.routines.Lag3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lag as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> lag3(java.lang.Object __1, java.lang.Integer __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Lag3 f = new test.generated.pg_catalog.routines.Lag3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lag as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> lag3(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.Lag3 f = new test.generated.pg_catalog.routines.Lag3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.language_handler_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object languageHandlerIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LanguageHandlerIn f = new test.generated.pg_catalog.routines.LanguageHandlerIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.language_handler_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> languageHandlerIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LanguageHandlerIn f = new test.generated.pg_catalog.routines.LanguageHandlerIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.language_handler_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> languageHandlerIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LanguageHandlerIn f = new test.generated.pg_catalog.routines.LanguageHandlerIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.language_handler_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object languageHandlerOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LanguageHandlerOut f = new test.generated.pg_catalog.routines.LanguageHandlerOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.language_handler_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> languageHandlerOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LanguageHandlerOut f = new test.generated.pg_catalog.routines.LanguageHandlerOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.language_handler_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> languageHandlerOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LanguageHandlerOut f = new test.generated.pg_catalog.routines.LanguageHandlerOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.last_value
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lastValue(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LastValue f = new test.generated.pg_catalog.routines.LastValue();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.last_value as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lastValue(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LastValue f = new test.generated.pg_catalog.routines.LastValue();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.last_value as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lastValue(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LastValue f = new test.generated.pg_catalog.routines.LastValue();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lastval
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long lastval(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.Lastval f = new test.generated.pg_catalog.routines.Lastval();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lastval as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> lastval() {
		test.generated.pg_catalog.routines.Lastval f = new test.generated.pg_catalog.routines.Lastval();

		return f.asField();
	}

	/**
	 * Call pg_catalog.latin1_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void latin1ToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Latin1ToMic p = new test.generated.pg_catalog.routines.Latin1ToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.latin2_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void latin2ToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Latin2ToMic p = new test.generated.pg_catalog.routines.Latin2ToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.latin2_to_win1250
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void latin2ToWin1250(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Latin2ToWin1250 p = new test.generated.pg_catalog.routines.Latin2ToWin1250();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.latin3_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void latin3ToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Latin3ToMic p = new test.generated.pg_catalog.routines.Latin3ToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.latin4_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void latin4ToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Latin4ToMic p = new test.generated.pg_catalog.routines.Latin4ToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.lead
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lead3(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Lead3 f = new test.generated.pg_catalog.routines.Lead3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lead as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> lead3(java.lang.Object __1, java.lang.Integer __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.Lead3 f = new test.generated.pg_catalog.routines.Lead3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lead as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> lead3(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.Lead3 f = new test.generated.pg_catalog.routines.Lead3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lead
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lead1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Lead1 f = new test.generated.pg_catalog.routines.Lead1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lead as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lead1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Lead1 f = new test.generated.pg_catalog.routines.Lead1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lead as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lead1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Lead1 f = new test.generated.pg_catalog.routines.Lead1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lead
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lead2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Lead2 f = new test.generated.pg_catalog.routines.Lead2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lead as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> lead2(java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Lead2 f = new test.generated.pg_catalog.routines.Lead2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lead as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> lead2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Lead2 f = new test.generated.pg_catalog.routines.Lead2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer length5(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Length5 f = new test.generated.pg_catalog.routines.Length5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> length5(java.lang.String __1) {
		test.generated.pg_catalog.routines.Length5 f = new test.generated.pg_catalog.routines.Length5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> length5(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Length5 f = new test.generated.pg_catalog.routines.Length5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer length7(org.jooq.Configuration configuration, byte[] __1) {
		test.generated.pg_catalog.routines.Length7 f = new test.generated.pg_catalog.routines.Length7();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> length7(byte[] __1) {
		test.generated.pg_catalog.routines.Length7 f = new test.generated.pg_catalog.routines.Length7();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> length7(org.jooq.Field<byte[]> __1) {
		test.generated.pg_catalog.routines.Length7 f = new test.generated.pg_catalog.routines.Length7();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer length8(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Length8 f = new test.generated.pg_catalog.routines.Length8();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> length8(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Length8 f = new test.generated.pg_catalog.routines.Length8();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> length8(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Length8 f = new test.generated.pg_catalog.routines.Length8();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.length
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer length6(org.jooq.Configuration configuration, byte[] __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Length6 f = new test.generated.pg_catalog.routines.Length6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> length6(byte[] __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Length6 f = new test.generated.pg_catalog.routines.Length6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> length6(org.jooq.Field<byte[]> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Length6 f = new test.generated.pg_catalog.routines.Length6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double length4(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Length4 f = new test.generated.pg_catalog.routines.Length4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> length4(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Length4 f = new test.generated.pg_catalog.routines.Length4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> length4(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Length4 f = new test.generated.pg_catalog.routines.Length4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double length3(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Length3 f = new test.generated.pg_catalog.routines.Length3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> length3(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Length3 f = new test.generated.pg_catalog.routines.Length3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> length3(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Length3 f = new test.generated.pg_catalog.routines.Length3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer length2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Length2 f = new test.generated.pg_catalog.routines.Length2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> length2(java.lang.String __1) {
		test.generated.pg_catalog.routines.Length2 f = new test.generated.pg_catalog.routines.Length2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> length2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Length2 f = new test.generated.pg_catalog.routines.Length2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer length1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Length1 f = new test.generated.pg_catalog.routines.Length1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> length1(java.lang.String __1) {
		test.generated.pg_catalog.routines.Length1 f = new test.generated.pg_catalog.routines.Length1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> length1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Length1 f = new test.generated.pg_catalog.routines.Length1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.like
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean like3(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Like3 f = new test.generated.pg_catalog.routines.Like3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.like as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> like3(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Like3 f = new test.generated.pg_catalog.routines.Like3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.like as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> like3(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Like3 f = new test.generated.pg_catalog.routines.Like3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.like
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean like1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Like1 f = new test.generated.pg_catalog.routines.Like1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.like as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> like1(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Like1 f = new test.generated.pg_catalog.routines.Like1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.like as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> like1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Like1 f = new test.generated.pg_catalog.routines.Like1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.like
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean like2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Like2 f = new test.generated.pg_catalog.routines.Like2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.like as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> like2(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Like2 f = new test.generated.pg_catalog.routines.Like2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.like as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> like2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Like2 f = new test.generated.pg_catalog.routines.Like2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.like_escape
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] likeEscape2(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.LikeEscape2 f = new test.generated.pg_catalog.routines.LikeEscape2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.like_escape as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> likeEscape2(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.LikeEscape2 f = new test.generated.pg_catalog.routines.LikeEscape2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.like_escape as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> likeEscape2(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.LikeEscape2 f = new test.generated.pg_catalog.routines.LikeEscape2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.like_escape
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String likeEscape1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.LikeEscape1 f = new test.generated.pg_catalog.routines.LikeEscape1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.like_escape as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> likeEscape1(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.LikeEscape1 f = new test.generated.pg_catalog.routines.LikeEscape1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.like_escape as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> likeEscape1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.LikeEscape1 f = new test.generated.pg_catalog.routines.LikeEscape1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.likejoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double likejoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Likejoinsel f = new test.generated.pg_catalog.routines.Likejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.likejoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> likejoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Likejoinsel f = new test.generated.pg_catalog.routines.Likejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.likejoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> likejoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Likejoinsel f = new test.generated.pg_catalog.routines.Likejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.likesel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double likesel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Likesel f = new test.generated.pg_catalog.routines.Likesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.likesel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> likesel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Likesel f = new test.generated.pg_catalog.routines.Likesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.likesel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> likesel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Likesel f = new test.generated.pg_catalog.routines.Likesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object line(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Line f = new test.generated.pg_catalog.routines.Line();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> line(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Line f = new test.generated.pg_catalog.routines.Line();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> line(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Line f = new test.generated.pg_catalog.routines.Line();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line_distance
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double lineDistance(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LineDistance f = new test.generated.pg_catalog.routines.LineDistance();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> lineDistance(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LineDistance f = new test.generated.pg_catalog.routines.LineDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> lineDistance(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LineDistance f = new test.generated.pg_catalog.routines.LineDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lineEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LineEq f = new test.generated.pg_catalog.routines.LineEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lineEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LineEq f = new test.generated.pg_catalog.routines.LineEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lineEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LineEq f = new test.generated.pg_catalog.routines.LineEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line_horizontal
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lineHorizontal(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LineHorizontal f = new test.generated.pg_catalog.routines.LineHorizontal();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line_horizontal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> lineHorizontal(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LineHorizontal f = new test.generated.pg_catalog.routines.LineHorizontal();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line_horizontal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> lineHorizontal(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LineHorizontal f = new test.generated.pg_catalog.routines.LineHorizontal();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lineIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LineIn f = new test.generated.pg_catalog.routines.LineIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lineIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LineIn f = new test.generated.pg_catalog.routines.LineIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lineIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LineIn f = new test.generated.pg_catalog.routines.LineIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line_interpt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lineInterpt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LineInterpt f = new test.generated.pg_catalog.routines.LineInterpt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line_interpt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> lineInterpt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LineInterpt f = new test.generated.pg_catalog.routines.LineInterpt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line_interpt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> lineInterpt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LineInterpt f = new test.generated.pg_catalog.routines.LineInterpt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line_intersect
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lineIntersect(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LineIntersect f = new test.generated.pg_catalog.routines.LineIntersect();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line_intersect as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lineIntersect(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LineIntersect f = new test.generated.pg_catalog.routines.LineIntersect();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line_intersect as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lineIntersect(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LineIntersect f = new test.generated.pg_catalog.routines.LineIntersect();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lineOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LineOut f = new test.generated.pg_catalog.routines.LineOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lineOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LineOut f = new test.generated.pg_catalog.routines.LineOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lineOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LineOut f = new test.generated.pg_catalog.routines.LineOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line_parallel
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lineParallel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LineParallel f = new test.generated.pg_catalog.routines.LineParallel();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line_parallel as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lineParallel(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LineParallel f = new test.generated.pg_catalog.routines.LineParallel();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line_parallel as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lineParallel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LineParallel f = new test.generated.pg_catalog.routines.LineParallel();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line_perp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean linePerp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LinePerp f = new test.generated.pg_catalog.routines.LinePerp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line_perp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> linePerp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LinePerp f = new test.generated.pg_catalog.routines.LinePerp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line_perp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> linePerp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LinePerp f = new test.generated.pg_catalog.routines.LinePerp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lineRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LineRecv f = new test.generated.pg_catalog.routines.LineRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lineRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LineRecv f = new test.generated.pg_catalog.routines.LineRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lineRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LineRecv f = new test.generated.pg_catalog.routines.LineRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] lineSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LineSend f = new test.generated.pg_catalog.routines.LineSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> lineSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LineSend f = new test.generated.pg_catalog.routines.LineSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> lineSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LineSend f = new test.generated.pg_catalog.routines.LineSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.line_vertical
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lineVertical(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LineVertical f = new test.generated.pg_catalog.routines.LineVertical();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.line_vertical as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> lineVertical(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LineVertical f = new test.generated.pg_catalog.routines.LineVertical();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.line_vertical as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> lineVertical(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LineVertical f = new test.generated.pg_catalog.routines.LineVertical();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ln
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal ln2(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Ln2 f = new test.generated.pg_catalog.routines.Ln2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ln as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> ln2(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Ln2 f = new test.generated.pg_catalog.routines.Ln2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ln as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> ln2(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Ln2 f = new test.generated.pg_catalog.routines.Ln2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ln
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double ln1(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Ln1 f = new test.generated.pg_catalog.routines.Ln1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ln as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> ln1(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Ln1 f = new test.generated.pg_catalog.routines.Ln1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ln as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> ln1(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Ln1 f = new test.generated.pg_catalog.routines.Ln1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lo_close
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer loClose(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.LoClose f = new test.generated.pg_catalog.routines.LoClose();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lo_close as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> loClose(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.LoClose f = new test.generated.pg_catalog.routines.LoClose();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lo_close as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> loClose(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.LoClose f = new test.generated.pg_catalog.routines.LoClose();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lo_creat
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long loCreat(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.LoCreat f = new test.generated.pg_catalog.routines.LoCreat();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lo_creat as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> loCreat(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.LoCreat f = new test.generated.pg_catalog.routines.LoCreat();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lo_creat as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> loCreat(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.LoCreat f = new test.generated.pg_catalog.routines.LoCreat();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lo_create
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long loCreate(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.LoCreate f = new test.generated.pg_catalog.routines.LoCreate();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lo_create as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> loCreate(java.lang.Long __1) {
		test.generated.pg_catalog.routines.LoCreate f = new test.generated.pg_catalog.routines.LoCreate();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lo_create as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> loCreate(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.LoCreate f = new test.generated.pg_catalog.routines.LoCreate();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lo_export
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer loExport(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.LoExport f = new test.generated.pg_catalog.routines.LoExport();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lo_export as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> loExport(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.LoExport f = new test.generated.pg_catalog.routines.LoExport();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lo_export as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> loExport(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.LoExport f = new test.generated.pg_catalog.routines.LoExport();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lo_import
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long loImport2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.LoImport2 f = new test.generated.pg_catalog.routines.LoImport2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lo_import as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> loImport2(java.lang.String __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.LoImport2 f = new test.generated.pg_catalog.routines.LoImport2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lo_import as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> loImport2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.LoImport2 f = new test.generated.pg_catalog.routines.LoImport2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lo_import
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long loImport1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.LoImport1 f = new test.generated.pg_catalog.routines.LoImport1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lo_import as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> loImport1(java.lang.String __1) {
		test.generated.pg_catalog.routines.LoImport1 f = new test.generated.pg_catalog.routines.LoImport1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lo_import as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> loImport1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.LoImport1 f = new test.generated.pg_catalog.routines.LoImport1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lo_lseek
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer loLseek(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.LoLseek f = new test.generated.pg_catalog.routines.LoLseek();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lo_lseek as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Integer> loLseek(java.lang.Integer __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.LoLseek f = new test.generated.pg_catalog.routines.LoLseek();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lo_lseek as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Integer> loLseek(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.LoLseek f = new test.generated.pg_catalog.routines.LoLseek();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lo_open
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer loOpen(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.LoOpen f = new test.generated.pg_catalog.routines.LoOpen();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lo_open as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> loOpen(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.LoOpen f = new test.generated.pg_catalog.routines.LoOpen();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lo_open as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> loOpen(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.LoOpen f = new test.generated.pg_catalog.routines.LoOpen();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lo_tell
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer loTell(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.LoTell f = new test.generated.pg_catalog.routines.LoTell();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lo_tell as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> loTell(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.LoTell f = new test.generated.pg_catalog.routines.LoTell();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lo_tell as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> loTell(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.LoTell f = new test.generated.pg_catalog.routines.LoTell();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lo_truncate
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer loTruncate(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.LoTruncate f = new test.generated.pg_catalog.routines.LoTruncate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lo_truncate as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> loTruncate(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.LoTruncate f = new test.generated.pg_catalog.routines.LoTruncate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lo_truncate as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> loTruncate(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.LoTruncate f = new test.generated.pg_catalog.routines.LoTruncate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lo_unlink
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer loUnlink(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.LoUnlink f = new test.generated.pg_catalog.routines.LoUnlink();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lo_unlink as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> loUnlink(java.lang.Long __1) {
		test.generated.pg_catalog.routines.LoUnlink f = new test.generated.pg_catalog.routines.LoUnlink();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lo_unlink as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> loUnlink(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.LoUnlink f = new test.generated.pg_catalog.routines.LoUnlink();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.log
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double log1(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Log1 f = new test.generated.pg_catalog.routines.Log1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.log as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> log1(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Log1 f = new test.generated.pg_catalog.routines.Log1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.log as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> log1(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Log1 f = new test.generated.pg_catalog.routines.Log1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.log
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal log3(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Log3 f = new test.generated.pg_catalog.routines.Log3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.log as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> log3(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Log3 f = new test.generated.pg_catalog.routines.Log3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.log as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> log3(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Log3 f = new test.generated.pg_catalog.routines.Log3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.log
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal log2(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Log2 f = new test.generated.pg_catalog.routines.Log2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.log as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> log2(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Log2 f = new test.generated.pg_catalog.routines.Log2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.log as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> log2(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.Log2 f = new test.generated.pg_catalog.routines.Log2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.loread
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] loread(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Loread f = new test.generated.pg_catalog.routines.Loread();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.loread as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> loread(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Loread f = new test.generated.pg_catalog.routines.Loread();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.loread as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> loread(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Loread f = new test.generated.pg_catalog.routines.Loread();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lower
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String lower(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Lower f = new test.generated.pg_catalog.routines.Lower();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lower as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> lower(java.lang.String __1) {
		test.generated.pg_catalog.routines.Lower f = new test.generated.pg_catalog.routines.Lower();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lower as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> lower(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Lower f = new test.generated.pg_catalog.routines.Lower();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lowrite
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer lowrite(org.jooq.Configuration configuration, java.lang.Integer __1, byte[] __2) {
		test.generated.pg_catalog.routines.Lowrite f = new test.generated.pg_catalog.routines.Lowrite();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lowrite as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> lowrite(java.lang.Integer __1, byte[] __2) {
		test.generated.pg_catalog.routines.Lowrite f = new test.generated.pg_catalog.routines.Lowrite();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lowrite as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> lowrite(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Lowrite f = new test.generated.pg_catalog.routines.Lowrite();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lpad
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String lpad2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Lpad2 f = new test.generated.pg_catalog.routines.Lpad2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lpad as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> lpad2(java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Lpad2 f = new test.generated.pg_catalog.routines.Lpad2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lpad as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> lpad2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Lpad2 f = new test.generated.pg_catalog.routines.Lpad2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lpad
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String lpad1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.Lpad1 f = new test.generated.pg_catalog.routines.Lpad1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lpad as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> lpad1(java.lang.String __1, java.lang.Integer __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.Lpad1 f = new test.generated.pg_catalog.routines.Lpad1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lpad as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> lpad1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.Lpad1 f = new test.generated.pg_catalog.routines.Lpad1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lseg2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Lseg2 f = new test.generated.pg_catalog.routines.Lseg2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> lseg2(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Lseg2 f = new test.generated.pg_catalog.routines.Lseg2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> lseg2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Lseg2 f = new test.generated.pg_catalog.routines.Lseg2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lseg1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Lseg1 f = new test.generated.pg_catalog.routines.Lseg1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lseg1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Lseg1 f = new test.generated.pg_catalog.routines.Lseg1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lseg1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Lseg1 f = new test.generated.pg_catalog.routines.Lseg1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_center
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lsegCenter(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegCenter f = new test.generated.pg_catalog.routines.LsegCenter();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lsegCenter(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegCenter f = new test.generated.pg_catalog.routines.LsegCenter();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lsegCenter(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LsegCenter f = new test.generated.pg_catalog.routines.LsegCenter();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_distance
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double lsegDistance(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegDistance f = new test.generated.pg_catalog.routines.LsegDistance();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> lsegDistance(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegDistance f = new test.generated.pg_catalog.routines.LsegDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> lsegDistance(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LsegDistance f = new test.generated.pg_catalog.routines.LsegDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lsegEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegEq f = new test.generated.pg_catalog.routines.LsegEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegEq f = new test.generated.pg_catalog.routines.LsegEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LsegEq f = new test.generated.pg_catalog.routines.LsegEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lsegGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegGe f = new test.generated.pg_catalog.routines.LsegGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegGe f = new test.generated.pg_catalog.routines.LsegGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LsegGe f = new test.generated.pg_catalog.routines.LsegGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lsegGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegGt f = new test.generated.pg_catalog.routines.LsegGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegGt f = new test.generated.pg_catalog.routines.LsegGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LsegGt f = new test.generated.pg_catalog.routines.LsegGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_horizontal
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lsegHorizontal(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegHorizontal f = new test.generated.pg_catalog.routines.LsegHorizontal();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_horizontal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegHorizontal(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegHorizontal f = new test.generated.pg_catalog.routines.LsegHorizontal();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_horizontal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegHorizontal(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LsegHorizontal f = new test.generated.pg_catalog.routines.LsegHorizontal();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lsegIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegIn f = new test.generated.pg_catalog.routines.LsegIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lsegIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegIn f = new test.generated.pg_catalog.routines.LsegIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lsegIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LsegIn f = new test.generated.pg_catalog.routines.LsegIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_interpt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lsegInterpt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegInterpt f = new test.generated.pg_catalog.routines.LsegInterpt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_interpt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> lsegInterpt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegInterpt f = new test.generated.pg_catalog.routines.LsegInterpt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_interpt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> lsegInterpt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LsegInterpt f = new test.generated.pg_catalog.routines.LsegInterpt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_intersect
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lsegIntersect(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegIntersect f = new test.generated.pg_catalog.routines.LsegIntersect();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_intersect as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegIntersect(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegIntersect f = new test.generated.pg_catalog.routines.LsegIntersect();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_intersect as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegIntersect(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LsegIntersect f = new test.generated.pg_catalog.routines.LsegIntersect();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lsegLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegLe f = new test.generated.pg_catalog.routines.LsegLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegLe f = new test.generated.pg_catalog.routines.LsegLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LsegLe f = new test.generated.pg_catalog.routines.LsegLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double lsegLength(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegLength f = new test.generated.pg_catalog.routines.LsegLength();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> lsegLength(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegLength f = new test.generated.pg_catalog.routines.LsegLength();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> lsegLength(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LsegLength f = new test.generated.pg_catalog.routines.LsegLength();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lsegLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegLt f = new test.generated.pg_catalog.routines.LsegLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegLt f = new test.generated.pg_catalog.routines.LsegLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LsegLt f = new test.generated.pg_catalog.routines.LsegLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lsegNe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegNe f = new test.generated.pg_catalog.routines.LsegNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegNe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegNe f = new test.generated.pg_catalog.routines.LsegNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegNe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LsegNe f = new test.generated.pg_catalog.routines.LsegNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lsegOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegOut f = new test.generated.pg_catalog.routines.LsegOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lsegOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegOut f = new test.generated.pg_catalog.routines.LsegOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lsegOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LsegOut f = new test.generated.pg_catalog.routines.LsegOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_parallel
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lsegParallel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegParallel f = new test.generated.pg_catalog.routines.LsegParallel();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_parallel as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegParallel(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegParallel f = new test.generated.pg_catalog.routines.LsegParallel();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_parallel as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegParallel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LsegParallel f = new test.generated.pg_catalog.routines.LsegParallel();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_perp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lsegPerp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegPerp f = new test.generated.pg_catalog.routines.LsegPerp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_perp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegPerp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.LsegPerp f = new test.generated.pg_catalog.routines.LsegPerp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_perp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegPerp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.LsegPerp f = new test.generated.pg_catalog.routines.LsegPerp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object lsegRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegRecv f = new test.generated.pg_catalog.routines.LsegRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lsegRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegRecv f = new test.generated.pg_catalog.routines.LsegRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> lsegRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LsegRecv f = new test.generated.pg_catalog.routines.LsegRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] lsegSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegSend f = new test.generated.pg_catalog.routines.LsegSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> lsegSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegSend f = new test.generated.pg_catalog.routines.LsegSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> lsegSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LsegSend f = new test.generated.pg_catalog.routines.LsegSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.lseg_vertical
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean lsegVertical(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegVertical f = new test.generated.pg_catalog.routines.LsegVertical();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.lseg_vertical as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegVertical(java.lang.Object __1) {
		test.generated.pg_catalog.routines.LsegVertical f = new test.generated.pg_catalog.routines.LsegVertical();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.lseg_vertical as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> lsegVertical(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.LsegVertical f = new test.generated.pg_catalog.routines.LsegVertical();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ltrim
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String ltrim1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Ltrim1 f = new test.generated.pg_catalog.routines.Ltrim1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ltrim as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> ltrim1(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Ltrim1 f = new test.generated.pg_catalog.routines.Ltrim1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ltrim as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> ltrim1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Ltrim1 f = new test.generated.pg_catalog.routines.Ltrim1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ltrim
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String ltrim2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Ltrim2 f = new test.generated.pg_catalog.routines.Ltrim2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ltrim as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> ltrim2(java.lang.String __1) {
		test.generated.pg_catalog.routines.Ltrim2 f = new test.generated.pg_catalog.routines.Ltrim2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ltrim as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> ltrim2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Ltrim2 f = new test.generated.pg_catalog.routines.Ltrim2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.macaddr_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer macaddrCmp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrCmp f = new test.generated.pg_catalog.routines.MacaddrCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.macaddr_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> macaddrCmp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrCmp f = new test.generated.pg_catalog.routines.MacaddrCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.macaddr_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> macaddrCmp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.MacaddrCmp f = new test.generated.pg_catalog.routines.MacaddrCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.macaddr_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean macaddrEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrEq f = new test.generated.pg_catalog.routines.MacaddrEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.macaddr_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> macaddrEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrEq f = new test.generated.pg_catalog.routines.MacaddrEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.macaddr_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> macaddrEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.MacaddrEq f = new test.generated.pg_catalog.routines.MacaddrEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.macaddr_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean macaddrGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrGe f = new test.generated.pg_catalog.routines.MacaddrGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.macaddr_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> macaddrGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrGe f = new test.generated.pg_catalog.routines.MacaddrGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.macaddr_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> macaddrGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.MacaddrGe f = new test.generated.pg_catalog.routines.MacaddrGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.macaddr_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean macaddrGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrGt f = new test.generated.pg_catalog.routines.MacaddrGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.macaddr_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> macaddrGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrGt f = new test.generated.pg_catalog.routines.MacaddrGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.macaddr_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> macaddrGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.MacaddrGt f = new test.generated.pg_catalog.routines.MacaddrGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.macaddr_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object macaddrIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.MacaddrIn f = new test.generated.pg_catalog.routines.MacaddrIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.macaddr_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> macaddrIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.MacaddrIn f = new test.generated.pg_catalog.routines.MacaddrIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.macaddr_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> macaddrIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.MacaddrIn f = new test.generated.pg_catalog.routines.MacaddrIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.macaddr_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean macaddrLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrLe f = new test.generated.pg_catalog.routines.MacaddrLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.macaddr_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> macaddrLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrLe f = new test.generated.pg_catalog.routines.MacaddrLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.macaddr_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> macaddrLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.MacaddrLe f = new test.generated.pg_catalog.routines.MacaddrLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.macaddr_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean macaddrLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrLt f = new test.generated.pg_catalog.routines.MacaddrLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.macaddr_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> macaddrLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrLt f = new test.generated.pg_catalog.routines.MacaddrLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.macaddr_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> macaddrLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.MacaddrLt f = new test.generated.pg_catalog.routines.MacaddrLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.macaddr_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean macaddrNe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrNe f = new test.generated.pg_catalog.routines.MacaddrNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.macaddr_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> macaddrNe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MacaddrNe f = new test.generated.pg_catalog.routines.MacaddrNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.macaddr_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> macaddrNe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.MacaddrNe f = new test.generated.pg_catalog.routines.MacaddrNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.macaddr_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object macaddrOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.MacaddrOut f = new test.generated.pg_catalog.routines.MacaddrOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.macaddr_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> macaddrOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.MacaddrOut f = new test.generated.pg_catalog.routines.MacaddrOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.macaddr_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> macaddrOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.MacaddrOut f = new test.generated.pg_catalog.routines.MacaddrOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.macaddr_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object macaddrRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.MacaddrRecv f = new test.generated.pg_catalog.routines.MacaddrRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.macaddr_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> macaddrRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.MacaddrRecv f = new test.generated.pg_catalog.routines.MacaddrRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.macaddr_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> macaddrRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.MacaddrRecv f = new test.generated.pg_catalog.routines.MacaddrRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.macaddr_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] macaddrSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.MacaddrSend f = new test.generated.pg_catalog.routines.MacaddrSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.macaddr_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> macaddrSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.MacaddrSend f = new test.generated.pg_catalog.routines.MacaddrSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.macaddr_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> macaddrSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.MacaddrSend f = new test.generated.pg_catalog.routines.MacaddrSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.makeaclitem
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String makeaclitem(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3, java.lang.Boolean __4) {
		test.generated.pg_catalog.routines.Makeaclitem f = new test.generated.pg_catalog.routines.Makeaclitem();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.makeaclitem as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.String> makeaclitem(java.lang.Long __1, java.lang.Long __2, java.lang.String __3, java.lang.Boolean __4) {
		test.generated.pg_catalog.routines.Makeaclitem f = new test.generated.pg_catalog.routines.Makeaclitem();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.makeaclitem as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.String> makeaclitem(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3, org.jooq.Field<java.lang.Boolean> __4) {
		test.generated.pg_catalog.routines.Makeaclitem f = new test.generated.pg_catalog.routines.Makeaclitem();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.masklen
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer masklen(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Masklen f = new test.generated.pg_catalog.routines.Masklen();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.masklen as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> masklen(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Masklen f = new test.generated.pg_catalog.routines.Masklen();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.masklen as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> masklen(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Masklen f = new test.generated.pg_catalog.routines.Masklen();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long max19(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Max19 f = new test.generated.pg_catalog.routines.Max19();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> max19(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Max19 f = new test.generated.pg_catalog.routines.Max19();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> max19(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Max19 f = new test.generated.pg_catalog.routines.Max19();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long max2(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Max2 f = new test.generated.pg_catalog.routines.Max2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> max2(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Max2 f = new test.generated.pg_catalog.routines.Max2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> max2(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Max2 f = new test.generated.pg_catalog.routines.Max2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer max3(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Max3 f = new test.generated.pg_catalog.routines.Max3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> max3(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Max3 f = new test.generated.pg_catalog.routines.Max3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> max3(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Max3 f = new test.generated.pg_catalog.routines.Max3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short max4(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Max4 f = new test.generated.pg_catalog.routines.Max4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> max4(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Max4 f = new test.generated.pg_catalog.routines.Max4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> max4(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Max4 f = new test.generated.pg_catalog.routines.Max4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long max5(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Max5 f = new test.generated.pg_catalog.routines.Max5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> max5(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Max5 f = new test.generated.pg_catalog.routines.Max5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> max5(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Max5 f = new test.generated.pg_catalog.routines.Max5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float max6(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Max6 f = new test.generated.pg_catalog.routines.Max6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> max6(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Max6 f = new test.generated.pg_catalog.routines.Max6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> max6(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Max6 f = new test.generated.pg_catalog.routines.Max6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object max20(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Max20 f = new test.generated.pg_catalog.routines.Max20();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> max20(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Max20 f = new test.generated.pg_catalog.routines.Max20();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> max20(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Max20 f = new test.generated.pg_catalog.routines.Max20();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double max7(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Max7 f = new test.generated.pg_catalog.routines.Max7();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> max7(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Max7 f = new test.generated.pg_catalog.routines.Max7();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> max7(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Max7 f = new test.generated.pg_catalog.routines.Max7();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object max8(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Max8 f = new test.generated.pg_catalog.routines.Max8();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> max8(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Max8 f = new test.generated.pg_catalog.routines.Max8();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> max8(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Max8 f = new test.generated.pg_catalog.routines.Max8();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date max9(org.jooq.Configuration configuration, java.sql.Date __1) {
		test.generated.pg_catalog.routines.Max9 f = new test.generated.pg_catalog.routines.Max9();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> max9(java.sql.Date __1) {
		test.generated.pg_catalog.routines.Max9 f = new test.generated.pg_catalog.routines.Max9();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> max9(org.jooq.Field<java.sql.Date> __1) {
		test.generated.pg_catalog.routines.Max9 f = new test.generated.pg_catalog.routines.Max9();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time max10(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.Max10 f = new test.generated.pg_catalog.routines.Max10();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> max10(java.sql.Time __1) {
		test.generated.pg_catalog.routines.Max10 f = new test.generated.pg_catalog.routines.Max10();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> max10(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.Max10 f = new test.generated.pg_catalog.routines.Max10();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time max11(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.Max11 f = new test.generated.pg_catalog.routines.Max11();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> max11(java.sql.Time __1) {
		test.generated.pg_catalog.routines.Max11 f = new test.generated.pg_catalog.routines.Max11();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> max11(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.Max11 f = new test.generated.pg_catalog.routines.Max11();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal max12(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Max12 f = new test.generated.pg_catalog.routines.Max12();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> max12(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Max12 f = new test.generated.pg_catalog.routines.Max12();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> max12(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Max12 f = new test.generated.pg_catalog.routines.Max12();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp max13(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Max13 f = new test.generated.pg_catalog.routines.Max13();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> max13(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Max13 f = new test.generated.pg_catalog.routines.Max13();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> max13(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Max13 f = new test.generated.pg_catalog.routines.Max13();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp max14(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Max14 f = new test.generated.pg_catalog.routines.Max14();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> max14(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Max14 f = new test.generated.pg_catalog.routines.Max14();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> max14(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Max14 f = new test.generated.pg_catalog.routines.Max14();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object max15(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Max15 f = new test.generated.pg_catalog.routines.Max15();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> max15(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Max15 f = new test.generated.pg_catalog.routines.Max15();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> max15(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Max15 f = new test.generated.pg_catalog.routines.Max15();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String max16(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Max16 f = new test.generated.pg_catalog.routines.Max16();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> max16(java.lang.String __1) {
		test.generated.pg_catalog.routines.Max16 f = new test.generated.pg_catalog.routines.Max16();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> max16(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Max16 f = new test.generated.pg_catalog.routines.Max16();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal max17(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Max17 f = new test.generated.pg_catalog.routines.Max17();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> max17(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Max17 f = new test.generated.pg_catalog.routines.Max17();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> max17(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Max17 f = new test.generated.pg_catalog.routines.Max17();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object max1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Max1 f = new test.generated.pg_catalog.routines.Max1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> max1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Max1 f = new test.generated.pg_catalog.routines.Max1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> max1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Max1 f = new test.generated.pg_catalog.routines.Max1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.max
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String max18(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Max18 f = new test.generated.pg_catalog.routines.Max18();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> max18(java.lang.String __1) {
		test.generated.pg_catalog.routines.Max18 f = new test.generated.pg_catalog.routines.Max18();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.max as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> max18(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Max18 f = new test.generated.pg_catalog.routines.Max18();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.md5
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String md51(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Md51 f = new test.generated.pg_catalog.routines.Md51();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.md5 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> md51(java.lang.String __1) {
		test.generated.pg_catalog.routines.Md51 f = new test.generated.pg_catalog.routines.Md51();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.md5 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> md51(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Md51 f = new test.generated.pg_catalog.routines.Md51();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.md5
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String md52(org.jooq.Configuration configuration, byte[] __1) {
		test.generated.pg_catalog.routines.Md52 f = new test.generated.pg_catalog.routines.Md52();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.md5 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> md52(byte[] __1) {
		test.generated.pg_catalog.routines.Md52 f = new test.generated.pg_catalog.routines.Md52();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.md5 as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> md52(org.jooq.Field<byte[]> __1) {
		test.generated.pg_catalog.routines.Md52 f = new test.generated.pg_catalog.routines.Md52();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.mic_to_ascii
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToAscii(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToAscii p = new test.generated.pg_catalog.routines.MicToAscii();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_big5
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToBig5(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToBig5 p = new test.generated.pg_catalog.routines.MicToBig5();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_euc_cn
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToEucCn(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToEucCn p = new test.generated.pg_catalog.routines.MicToEucCn();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_euc_jp
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToEucJp(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToEucJp p = new test.generated.pg_catalog.routines.MicToEucJp();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_euc_kr
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToEucKr(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToEucKr p = new test.generated.pg_catalog.routines.MicToEucKr();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_euc_tw
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToEucTw(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToEucTw p = new test.generated.pg_catalog.routines.MicToEucTw();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_iso
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToIso(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToIso p = new test.generated.pg_catalog.routines.MicToIso();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_koi8r
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToKoi8r(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToKoi8r p = new test.generated.pg_catalog.routines.MicToKoi8r();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_latin1
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToLatin1(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToLatin1 p = new test.generated.pg_catalog.routines.MicToLatin1();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_latin2
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToLatin2(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToLatin2 p = new test.generated.pg_catalog.routines.MicToLatin2();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_latin3
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToLatin3(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToLatin3 p = new test.generated.pg_catalog.routines.MicToLatin3();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_latin4
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToLatin4(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToLatin4 p = new test.generated.pg_catalog.routines.MicToLatin4();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_sjis
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToSjis(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToSjis p = new test.generated.pg_catalog.routines.MicToSjis();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_win1250
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToWin1250(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToWin1250 p = new test.generated.pg_catalog.routines.MicToWin1250();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_win1251
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToWin1251(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToWin1251 p = new test.generated.pg_catalog.routines.MicToWin1251();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.mic_to_win866
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void micToWin866(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.MicToWin866 p = new test.generated.pg_catalog.routines.MicToWin866();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String min18(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Min18 f = new test.generated.pg_catalog.routines.Min18();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> min18(java.lang.String __1) {
		test.generated.pg_catalog.routines.Min18 f = new test.generated.pg_catalog.routines.Min18();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> min18(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Min18 f = new test.generated.pg_catalog.routines.Min18();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal min17(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Min17 f = new test.generated.pg_catalog.routines.Min17();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> min17(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Min17 f = new test.generated.pg_catalog.routines.Min17();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> min17(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Min17 f = new test.generated.pg_catalog.routines.Min17();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long min2(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Min2 f = new test.generated.pg_catalog.routines.Min2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> min2(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Min2 f = new test.generated.pg_catalog.routines.Min2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> min2(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Min2 f = new test.generated.pg_catalog.routines.Min2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer min3(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Min3 f = new test.generated.pg_catalog.routines.Min3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> min3(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Min3 f = new test.generated.pg_catalog.routines.Min3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> min3(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Min3 f = new test.generated.pg_catalog.routines.Min3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String min16(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Min16 f = new test.generated.pg_catalog.routines.Min16();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> min16(java.lang.String __1) {
		test.generated.pg_catalog.routines.Min16 f = new test.generated.pg_catalog.routines.Min16();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> min16(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Min16 f = new test.generated.pg_catalog.routines.Min16();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object min15(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Min15 f = new test.generated.pg_catalog.routines.Min15();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> min15(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Min15 f = new test.generated.pg_catalog.routines.Min15();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> min15(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Min15 f = new test.generated.pg_catalog.routines.Min15();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long min5(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Min5 f = new test.generated.pg_catalog.routines.Min5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> min5(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Min5 f = new test.generated.pg_catalog.routines.Min5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> min5(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Min5 f = new test.generated.pg_catalog.routines.Min5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double min7(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Min7 f = new test.generated.pg_catalog.routines.Min7();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> min7(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Min7 f = new test.generated.pg_catalog.routines.Min7();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> min7(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Min7 f = new test.generated.pg_catalog.routines.Min7();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long min19(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Min19 f = new test.generated.pg_catalog.routines.Min19();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> min19(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Min19 f = new test.generated.pg_catalog.routines.Min19();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> min19(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Min19 f = new test.generated.pg_catalog.routines.Min19();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time min10(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.Min10 f = new test.generated.pg_catalog.routines.Min10();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> min10(java.sql.Time __1) {
		test.generated.pg_catalog.routines.Min10 f = new test.generated.pg_catalog.routines.Min10();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> min10(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.Min10 f = new test.generated.pg_catalog.routines.Min10();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date min9(org.jooq.Configuration configuration, java.sql.Date __1) {
		test.generated.pg_catalog.routines.Min9 f = new test.generated.pg_catalog.routines.Min9();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> min9(java.sql.Date __1) {
		test.generated.pg_catalog.routines.Min9 f = new test.generated.pg_catalog.routines.Min9();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Date> min9(org.jooq.Field<java.sql.Date> __1) {
		test.generated.pg_catalog.routines.Min9 f = new test.generated.pg_catalog.routines.Min9();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object min8(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Min8 f = new test.generated.pg_catalog.routines.Min8();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> min8(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Min8 f = new test.generated.pg_catalog.routines.Min8();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> min8(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Min8 f = new test.generated.pg_catalog.routines.Min8();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object min1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Min1 f = new test.generated.pg_catalog.routines.Min1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> min1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Min1 f = new test.generated.pg_catalog.routines.Min1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> min1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Min1 f = new test.generated.pg_catalog.routines.Min1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float min6(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Min6 f = new test.generated.pg_catalog.routines.Min6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> min6(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Min6 f = new test.generated.pg_catalog.routines.Min6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> min6(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Min6 f = new test.generated.pg_catalog.routines.Min6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp min14(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Min14 f = new test.generated.pg_catalog.routines.Min14();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> min14(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Min14 f = new test.generated.pg_catalog.routines.Min14();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> min14(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Min14 f = new test.generated.pg_catalog.routines.Min14();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp min13(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Min13 f = new test.generated.pg_catalog.routines.Min13();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> min13(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Min13 f = new test.generated.pg_catalog.routines.Min13();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> min13(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Min13 f = new test.generated.pg_catalog.routines.Min13();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object min20(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Min20 f = new test.generated.pg_catalog.routines.Min20();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> min20(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Min20 f = new test.generated.pg_catalog.routines.Min20();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> min20(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Min20 f = new test.generated.pg_catalog.routines.Min20();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short min4(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Min4 f = new test.generated.pg_catalog.routines.Min4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> min4(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Min4 f = new test.generated.pg_catalog.routines.Min4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Short> min4(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Min4 f = new test.generated.pg_catalog.routines.Min4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal min12(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Min12 f = new test.generated.pg_catalog.routines.Min12();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> min12(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Min12 f = new test.generated.pg_catalog.routines.Min12();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> min12(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Min12 f = new test.generated.pg_catalog.routines.Min12();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.min
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time min11(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.Min11 f = new test.generated.pg_catalog.routines.Min11();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> min11(java.sql.Time __1) {
		test.generated.pg_catalog.routines.Min11 f = new test.generated.pg_catalog.routines.Min11();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.min as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> min11(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.Min11 f = new test.generated.pg_catalog.routines.Min11();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.mktinterval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object mktinterval(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Mktinterval f = new test.generated.pg_catalog.routines.Mktinterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.mktinterval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> mktinterval(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Mktinterval f = new test.generated.pg_catalog.routines.Mktinterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.mktinterval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> mktinterval(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Mktinterval f = new test.generated.pg_catalog.routines.Mktinterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.mod
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer mod3(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Mod3 f = new test.generated.pg_catalog.routines.Mod3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> mod3(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Mod3 f = new test.generated.pg_catalog.routines.Mod3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> mod3(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Mod3 f = new test.generated.pg_catalog.routines.Mod3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.mod
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Short mod2(org.jooq.Configuration configuration, java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Mod2 f = new test.generated.pg_catalog.routines.Mod2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> mod2(java.lang.Short __1, java.lang.Short __2) {
		test.generated.pg_catalog.routines.Mod2 f = new test.generated.pg_catalog.routines.Mod2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Short> mod2(org.jooq.Field<java.lang.Short> __1, org.jooq.Field<java.lang.Short> __2) {
		test.generated.pg_catalog.routines.Mod2 f = new test.generated.pg_catalog.routines.Mod2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.mod
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long mod4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Mod4 f = new test.generated.pg_catalog.routines.Mod4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> mod4(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Mod4 f = new test.generated.pg_catalog.routines.Mod4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> mod4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Mod4 f = new test.generated.pg_catalog.routines.Mod4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.mod
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal mod1(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Mod1 f = new test.generated.pg_catalog.routines.Mod1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> mod1(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Mod1 f = new test.generated.pg_catalog.routines.Mod1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> mod1(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.Mod1 f = new test.generated.pg_catalog.routines.Mod1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.mul_d_interval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object mulDInterval(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MulDInterval f = new test.generated.pg_catalog.routines.MulDInterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.mul_d_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> mulDInterval(java.lang.Double __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.MulDInterval f = new test.generated.pg_catalog.routines.MulDInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.mul_d_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> mulDInterval(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.MulDInterval f = new test.generated.pg_catalog.routines.MulDInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.name
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String name1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Name1 f = new test.generated.pg_catalog.routines.Name1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.name as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> name1(java.lang.String __1) {
		test.generated.pg_catalog.routines.Name1 f = new test.generated.pg_catalog.routines.Name1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.name as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> name1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Name1 f = new test.generated.pg_catalog.routines.Name1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.name
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String name2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Name2 f = new test.generated.pg_catalog.routines.Name2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.name as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> name2(java.lang.String __1) {
		test.generated.pg_catalog.routines.Name2 f = new test.generated.pg_catalog.routines.Name2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.name as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> name2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Name2 f = new test.generated.pg_catalog.routines.Name2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.name
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String name3(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Name3 f = new test.generated.pg_catalog.routines.Name3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.name as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> name3(java.lang.String __1) {
		test.generated.pg_catalog.routines.Name3 f = new test.generated.pg_catalog.routines.Name3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.name as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> name3(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Name3 f = new test.generated.pg_catalog.routines.Name3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.nameeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean nameeq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameeq f = new test.generated.pg_catalog.routines.Nameeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.nameeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameeq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameeq f = new test.generated.pg_catalog.routines.Nameeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.nameeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameeq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Nameeq f = new test.generated.pg_catalog.routines.Nameeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.namege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean namege(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namege f = new test.generated.pg_catalog.routines.Namege();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.namege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namege(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namege f = new test.generated.pg_catalog.routines.Namege();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.namege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namege(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Namege f = new test.generated.pg_catalog.routines.Namege();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.namegt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean namegt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namegt f = new test.generated.pg_catalog.routines.Namegt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.namegt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namegt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namegt f = new test.generated.pg_catalog.routines.Namegt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.namegt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namegt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Namegt f = new test.generated.pg_catalog.routines.Namegt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.nameiclike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean nameiclike(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameiclike f = new test.generated.pg_catalog.routines.Nameiclike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.nameiclike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameiclike(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameiclike f = new test.generated.pg_catalog.routines.Nameiclike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.nameiclike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameiclike(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Nameiclike f = new test.generated.pg_catalog.routines.Nameiclike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.nameicnlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean nameicnlike(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameicnlike f = new test.generated.pg_catalog.routines.Nameicnlike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.nameicnlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameicnlike(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameicnlike f = new test.generated.pg_catalog.routines.Nameicnlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.nameicnlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameicnlike(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Nameicnlike f = new test.generated.pg_catalog.routines.Nameicnlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.nameicregexeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean nameicregexeq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameicregexeq f = new test.generated.pg_catalog.routines.Nameicregexeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.nameicregexeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameicregexeq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameicregexeq f = new test.generated.pg_catalog.routines.Nameicregexeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.nameicregexeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameicregexeq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Nameicregexeq f = new test.generated.pg_catalog.routines.Nameicregexeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.nameicregexne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean nameicregexne(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameicregexne f = new test.generated.pg_catalog.routines.Nameicregexne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.nameicregexne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameicregexne(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameicregexne f = new test.generated.pg_catalog.routines.Nameicregexne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.nameicregexne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameicregexne(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Nameicregexne f = new test.generated.pg_catalog.routines.Nameicregexne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.namein
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String namein(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Namein f = new test.generated.pg_catalog.routines.Namein();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.namein as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> namein(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Namein f = new test.generated.pg_catalog.routines.Namein();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.namein as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> namein(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Namein f = new test.generated.pg_catalog.routines.Namein();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.namele
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean namele(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namele f = new test.generated.pg_catalog.routines.Namele();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.namele as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namele(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namele f = new test.generated.pg_catalog.routines.Namele();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.namele as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namele(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Namele f = new test.generated.pg_catalog.routines.Namele();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.namelike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean namelike(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namelike f = new test.generated.pg_catalog.routines.Namelike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.namelike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namelike(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namelike f = new test.generated.pg_catalog.routines.Namelike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.namelike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namelike(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Namelike f = new test.generated.pg_catalog.routines.Namelike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.namelt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean namelt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namelt f = new test.generated.pg_catalog.routines.Namelt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.namelt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namelt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namelt f = new test.generated.pg_catalog.routines.Namelt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.namelt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namelt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Namelt f = new test.generated.pg_catalog.routines.Namelt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.namene
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean namene(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namene f = new test.generated.pg_catalog.routines.Namene();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.namene as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namene(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namene f = new test.generated.pg_catalog.routines.Namene();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.namene as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namene(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Namene f = new test.generated.pg_catalog.routines.Namene();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.namenlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean namenlike(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namenlike f = new test.generated.pg_catalog.routines.Namenlike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.namenlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namenlike(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Namenlike f = new test.generated.pg_catalog.routines.Namenlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.namenlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> namenlike(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Namenlike f = new test.generated.pg_catalog.routines.Namenlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.nameout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object nameout(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Nameout f = new test.generated.pg_catalog.routines.Nameout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.nameout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> nameout(java.lang.String __1) {
		test.generated.pg_catalog.routines.Nameout f = new test.generated.pg_catalog.routines.Nameout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.nameout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> nameout(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Nameout f = new test.generated.pg_catalog.routines.Nameout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.namerecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String namerecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Namerecv f = new test.generated.pg_catalog.routines.Namerecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.namerecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> namerecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Namerecv f = new test.generated.pg_catalog.routines.Namerecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.namerecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> namerecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Namerecv f = new test.generated.pg_catalog.routines.Namerecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.nameregexeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean nameregexeq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameregexeq f = new test.generated.pg_catalog.routines.Nameregexeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.nameregexeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameregexeq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameregexeq f = new test.generated.pg_catalog.routines.Nameregexeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.nameregexeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameregexeq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Nameregexeq f = new test.generated.pg_catalog.routines.Nameregexeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.nameregexne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean nameregexne(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameregexne f = new test.generated.pg_catalog.routines.Nameregexne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.nameregexne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameregexne(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Nameregexne f = new test.generated.pg_catalog.routines.Nameregexne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.nameregexne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> nameregexne(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Nameregexne f = new test.generated.pg_catalog.routines.Nameregexne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.namesend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] namesend(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Namesend f = new test.generated.pg_catalog.routines.Namesend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.namesend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> namesend(java.lang.String __1) {
		test.generated.pg_catalog.routines.Namesend f = new test.generated.pg_catalog.routines.Namesend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.namesend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> namesend(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Namesend f = new test.generated.pg_catalog.routines.Namesend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.neqjoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double neqjoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Neqjoinsel f = new test.generated.pg_catalog.routines.Neqjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.neqjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> neqjoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Neqjoinsel f = new test.generated.pg_catalog.routines.Neqjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.neqjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> neqjoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Neqjoinsel f = new test.generated.pg_catalog.routines.Neqjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.neqsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double neqsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Neqsel f = new test.generated.pg_catalog.routines.Neqsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.neqsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> neqsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Neqsel f = new test.generated.pg_catalog.routines.Neqsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.neqsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> neqsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Neqsel f = new test.generated.pg_catalog.routines.Neqsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.netmask
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object netmask(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Netmask f = new test.generated.pg_catalog.routines.Netmask();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.netmask as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> netmask(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Netmask f = new test.generated.pg_catalog.routines.Netmask();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.netmask as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> netmask(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Netmask f = new test.generated.pg_catalog.routines.Netmask();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.network
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object network(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Network f = new test.generated.pg_catalog.routines.Network();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.network as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> network(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Network f = new test.generated.pg_catalog.routines.Network();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.network as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> network(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Network f = new test.generated.pg_catalog.routines.Network();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.network_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer networkCmp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkCmp f = new test.generated.pg_catalog.routines.NetworkCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.network_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> networkCmp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkCmp f = new test.generated.pg_catalog.routines.NetworkCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.network_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> networkCmp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.NetworkCmp f = new test.generated.pg_catalog.routines.NetworkCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.network_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean networkEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkEq f = new test.generated.pg_catalog.routines.NetworkEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.network_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkEq f = new test.generated.pg_catalog.routines.NetworkEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.network_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.NetworkEq f = new test.generated.pg_catalog.routines.NetworkEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.network_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean networkGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkGe f = new test.generated.pg_catalog.routines.NetworkGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.network_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkGe f = new test.generated.pg_catalog.routines.NetworkGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.network_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.NetworkGe f = new test.generated.pg_catalog.routines.NetworkGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.network_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean networkGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkGt f = new test.generated.pg_catalog.routines.NetworkGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.network_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkGt f = new test.generated.pg_catalog.routines.NetworkGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.network_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.NetworkGt f = new test.generated.pg_catalog.routines.NetworkGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.network_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean networkLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkLe f = new test.generated.pg_catalog.routines.NetworkLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.network_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkLe f = new test.generated.pg_catalog.routines.NetworkLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.network_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.NetworkLe f = new test.generated.pg_catalog.routines.NetworkLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.network_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean networkLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkLt f = new test.generated.pg_catalog.routines.NetworkLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.network_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkLt f = new test.generated.pg_catalog.routines.NetworkLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.network_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.NetworkLt f = new test.generated.pg_catalog.routines.NetworkLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.network_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean networkNe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkNe f = new test.generated.pg_catalog.routines.NetworkNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.network_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkNe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkNe f = new test.generated.pg_catalog.routines.NetworkNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.network_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkNe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.NetworkNe f = new test.generated.pg_catalog.routines.NetworkNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.network_sub
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean networkSub(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkSub f = new test.generated.pg_catalog.routines.NetworkSub();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.network_sub as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkSub(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkSub f = new test.generated.pg_catalog.routines.NetworkSub();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.network_sub as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkSub(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.NetworkSub f = new test.generated.pg_catalog.routines.NetworkSub();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.network_subeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean networkSubeq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkSubeq f = new test.generated.pg_catalog.routines.NetworkSubeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.network_subeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkSubeq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkSubeq f = new test.generated.pg_catalog.routines.NetworkSubeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.network_subeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkSubeq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.NetworkSubeq f = new test.generated.pg_catalog.routines.NetworkSubeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.network_sup
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean networkSup(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkSup f = new test.generated.pg_catalog.routines.NetworkSup();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.network_sup as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkSup(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkSup f = new test.generated.pg_catalog.routines.NetworkSup();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.network_sup as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkSup(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.NetworkSup f = new test.generated.pg_catalog.routines.NetworkSup();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.network_supeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean networkSupeq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkSupeq f = new test.generated.pg_catalog.routines.NetworkSupeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.network_supeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkSupeq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.NetworkSupeq f = new test.generated.pg_catalog.routines.NetworkSupeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.network_supeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> networkSupeq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.NetworkSupeq f = new test.generated.pg_catalog.routines.NetworkSupeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.nextval
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long nextval(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Nextval f = new test.generated.pg_catalog.routines.Nextval();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.nextval as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> nextval(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Nextval f = new test.generated.pg_catalog.routines.Nextval();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.nextval as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> nextval(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Nextval f = new test.generated.pg_catalog.routines.Nextval();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.nlikejoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double nlikejoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Nlikejoinsel f = new test.generated.pg_catalog.routines.Nlikejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.nlikejoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> nlikejoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Nlikejoinsel f = new test.generated.pg_catalog.routines.Nlikejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.nlikejoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> nlikejoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Nlikejoinsel f = new test.generated.pg_catalog.routines.Nlikejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.nlikesel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double nlikesel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Nlikesel f = new test.generated.pg_catalog.routines.Nlikesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.nlikesel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> nlikesel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Nlikesel f = new test.generated.pg_catalog.routines.Nlikesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.nlikesel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> nlikesel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Nlikesel f = new test.generated.pg_catalog.routines.Nlikesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.notlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean notlike3(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Notlike3 f = new test.generated.pg_catalog.routines.Notlike3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.notlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> notlike3(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Notlike3 f = new test.generated.pg_catalog.routines.Notlike3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.notlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> notlike3(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Notlike3 f = new test.generated.pg_catalog.routines.Notlike3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.notlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean notlike1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Notlike1 f = new test.generated.pg_catalog.routines.Notlike1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.notlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> notlike1(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Notlike1 f = new test.generated.pg_catalog.routines.Notlike1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.notlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> notlike1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Notlike1 f = new test.generated.pg_catalog.routines.Notlike1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.notlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean notlike2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Notlike2 f = new test.generated.pg_catalog.routines.Notlike2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.notlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> notlike2(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Notlike2 f = new test.generated.pg_catalog.routines.Notlike2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.notlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> notlike2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Notlike2 f = new test.generated.pg_catalog.routines.Notlike2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.now
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp now(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.Now f = new test.generated.pg_catalog.routines.Now();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.now as a field
	 *
	 */
	public static org.jooq.Field<java.sql.Timestamp> now() {
		test.generated.pg_catalog.routines.Now f = new test.generated.pg_catalog.routines.Now();

		return f.asField();
	}

	/**
	 * Call pg_catalog.npoints
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer npoints2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Npoints2 f = new test.generated.pg_catalog.routines.Npoints2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.npoints as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> npoints2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Npoints2 f = new test.generated.pg_catalog.routines.Npoints2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.npoints as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> npoints2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Npoints2 f = new test.generated.pg_catalog.routines.Npoints2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.npoints
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer npoints1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Npoints1 f = new test.generated.pg_catalog.routines.Npoints1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.npoints as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> npoints1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Npoints1 f = new test.generated.pg_catalog.routines.Npoints1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.npoints as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> npoints1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Npoints1 f = new test.generated.pg_catalog.routines.Npoints1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.nth_value
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object nthValue(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.NthValue f = new test.generated.pg_catalog.routines.NthValue();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.nth_value as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> nthValue(java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.NthValue f = new test.generated.pg_catalog.routines.NthValue();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.nth_value as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> nthValue(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.NthValue f = new test.generated.pg_catalog.routines.NthValue();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ntile
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer ntile(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Ntile f = new test.generated.pg_catalog.routines.Ntile();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ntile as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> ntile(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Ntile f = new test.generated.pg_catalog.routines.Ntile();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ntile as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> ntile(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Ntile f = new test.generated.pg_catalog.routines.Ntile();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numeric2(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Numeric2 f = new test.generated.pg_catalog.routines.Numeric2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numeric2(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Numeric2 f = new test.generated.pg_catalog.routines.Numeric2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numeric2(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Numeric2 f = new test.generated.pg_catalog.routines.Numeric2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numeric5(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Numeric5 f = new test.generated.pg_catalog.routines.Numeric5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numeric5(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Numeric5 f = new test.generated.pg_catalog.routines.Numeric5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numeric5(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Numeric5 f = new test.generated.pg_catalog.routines.Numeric5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numeric1(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Numeric1 f = new test.generated.pg_catalog.routines.Numeric1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numeric1(java.math.BigDecimal __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Numeric1 f = new test.generated.pg_catalog.routines.Numeric1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numeric1(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Numeric1 f = new test.generated.pg_catalog.routines.Numeric1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numeric6(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Numeric6 f = new test.generated.pg_catalog.routines.Numeric6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numeric6(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Numeric6 f = new test.generated.pg_catalog.routines.Numeric6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numeric6(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Numeric6 f = new test.generated.pg_catalog.routines.Numeric6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numeric4(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Numeric4 f = new test.generated.pg_catalog.routines.Numeric4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numeric4(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Numeric4 f = new test.generated.pg_catalog.routines.Numeric4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numeric4(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Numeric4 f = new test.generated.pg_catalog.routines.Numeric4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numeric3(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Numeric3 f = new test.generated.pg_catalog.routines.Numeric3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numeric3(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Numeric3 f = new test.generated.pg_catalog.routines.Numeric3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numeric3(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Numeric3 f = new test.generated.pg_catalog.routines.Numeric3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_abs
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericAbs(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericAbs f = new test.generated.pg_catalog.routines.NumericAbs();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericAbs(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericAbs f = new test.generated.pg_catalog.routines.NumericAbs();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_abs as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericAbs(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.NumericAbs f = new test.generated.pg_catalog.routines.NumericAbs();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_accum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal[] numericAccum(org.jooq.Configuration configuration, java.math.BigDecimal[] __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericAccum f = new test.generated.pg_catalog.routines.NumericAccum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal[]> numericAccum(java.math.BigDecimal[] __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericAccum f = new test.generated.pg_catalog.routines.NumericAccum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal[]> numericAccum(org.jooq.Field<java.math.BigDecimal[]> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericAccum f = new test.generated.pg_catalog.routines.NumericAccum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_add
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericAdd(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericAdd f = new test.generated.pg_catalog.routines.NumericAdd();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_add as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericAdd(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericAdd f = new test.generated.pg_catalog.routines.NumericAdd();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_add as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericAdd(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericAdd f = new test.generated.pg_catalog.routines.NumericAdd();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_avg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericAvg(org.jooq.Configuration configuration, java.math.BigDecimal[] __1) {
		test.generated.pg_catalog.routines.NumericAvg f = new test.generated.pg_catalog.routines.NumericAvg();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericAvg(java.math.BigDecimal[] __1) {
		test.generated.pg_catalog.routines.NumericAvg f = new test.generated.pg_catalog.routines.NumericAvg();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_avg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericAvg(org.jooq.Field<java.math.BigDecimal[]> __1) {
		test.generated.pg_catalog.routines.NumericAvg f = new test.generated.pg_catalog.routines.NumericAvg();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_avg_accum
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal[] numericAvgAccum(org.jooq.Configuration configuration, java.math.BigDecimal[] __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericAvgAccum f = new test.generated.pg_catalog.routines.NumericAvgAccum();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_avg_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal[]> numericAvgAccum(java.math.BigDecimal[] __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericAvgAccum f = new test.generated.pg_catalog.routines.NumericAvgAccum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_avg_accum as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal[]> numericAvgAccum(org.jooq.Field<java.math.BigDecimal[]> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericAvgAccum f = new test.generated.pg_catalog.routines.NumericAvgAccum();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer numericCmp(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericCmp f = new test.generated.pg_catalog.routines.NumericCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> numericCmp(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericCmp f = new test.generated.pg_catalog.routines.NumericCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> numericCmp(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericCmp f = new test.generated.pg_catalog.routines.NumericCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericDiv(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericDiv f = new test.generated.pg_catalog.routines.NumericDiv();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericDiv(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericDiv f = new test.generated.pg_catalog.routines.NumericDiv();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericDiv(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericDiv f = new test.generated.pg_catalog.routines.NumericDiv();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_div_trunc
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericDivTrunc(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericDivTrunc f = new test.generated.pg_catalog.routines.NumericDivTrunc();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_div_trunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericDivTrunc(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericDivTrunc f = new test.generated.pg_catalog.routines.NumericDivTrunc();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_div_trunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericDivTrunc(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericDivTrunc f = new test.generated.pg_catalog.routines.NumericDivTrunc();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean numericEq(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericEq f = new test.generated.pg_catalog.routines.NumericEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> numericEq(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericEq f = new test.generated.pg_catalog.routines.NumericEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> numericEq(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericEq f = new test.generated.pg_catalog.routines.NumericEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_exp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericExp(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericExp f = new test.generated.pg_catalog.routines.NumericExp();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_exp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericExp(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericExp f = new test.generated.pg_catalog.routines.NumericExp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_exp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericExp(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.NumericExp f = new test.generated.pg_catalog.routines.NumericExp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_fac
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericFac(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.NumericFac f = new test.generated.pg_catalog.routines.NumericFac();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_fac as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericFac(java.lang.Long __1) {
		test.generated.pg_catalog.routines.NumericFac f = new test.generated.pg_catalog.routines.NumericFac();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_fac as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericFac(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.NumericFac f = new test.generated.pg_catalog.routines.NumericFac();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean numericGe(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericGe f = new test.generated.pg_catalog.routines.NumericGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> numericGe(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericGe f = new test.generated.pg_catalog.routines.NumericGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> numericGe(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericGe f = new test.generated.pg_catalog.routines.NumericGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean numericGt(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericGt f = new test.generated.pg_catalog.routines.NumericGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> numericGt(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericGt f = new test.generated.pg_catalog.routines.NumericGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> numericGt(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericGt f = new test.generated.pg_catalog.routines.NumericGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_in
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericIn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.NumericIn f = new test.generated.pg_catalog.routines.NumericIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericIn(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.NumericIn f = new test.generated.pg_catalog.routines.NumericIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericIn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.NumericIn f = new test.generated.pg_catalog.routines.NumericIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_inc
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericInc(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericInc f = new test.generated.pg_catalog.routines.NumericInc();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_inc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericInc(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericInc f = new test.generated.pg_catalog.routines.NumericInc();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_inc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericInc(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.NumericInc f = new test.generated.pg_catalog.routines.NumericInc();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericLarger(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericLarger f = new test.generated.pg_catalog.routines.NumericLarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericLarger(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericLarger f = new test.generated.pg_catalog.routines.NumericLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericLarger(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericLarger f = new test.generated.pg_catalog.routines.NumericLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean numericLe(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericLe f = new test.generated.pg_catalog.routines.NumericLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> numericLe(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericLe f = new test.generated.pg_catalog.routines.NumericLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> numericLe(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericLe f = new test.generated.pg_catalog.routines.NumericLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_ln
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericLn(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericLn f = new test.generated.pg_catalog.routines.NumericLn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_ln as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericLn(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericLn f = new test.generated.pg_catalog.routines.NumericLn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_ln as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericLn(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.NumericLn f = new test.generated.pg_catalog.routines.NumericLn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_log
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericLog(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericLog f = new test.generated.pg_catalog.routines.NumericLog();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_log as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericLog(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericLog f = new test.generated.pg_catalog.routines.NumericLog();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_log as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericLog(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericLog f = new test.generated.pg_catalog.routines.NumericLog();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean numericLt(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericLt f = new test.generated.pg_catalog.routines.NumericLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> numericLt(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericLt f = new test.generated.pg_catalog.routines.NumericLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> numericLt(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericLt f = new test.generated.pg_catalog.routines.NumericLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_mod
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericMod(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericMod f = new test.generated.pg_catalog.routines.NumericMod();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericMod(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericMod f = new test.generated.pg_catalog.routines.NumericMod();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_mod as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericMod(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericMod f = new test.generated.pg_catalog.routines.NumericMod();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericMul(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericMul f = new test.generated.pg_catalog.routines.NumericMul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericMul(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericMul f = new test.generated.pg_catalog.routines.NumericMul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericMul(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericMul f = new test.generated.pg_catalog.routines.NumericMul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean numericNe(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericNe f = new test.generated.pg_catalog.routines.NumericNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> numericNe(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericNe f = new test.generated.pg_catalog.routines.NumericNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> numericNe(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericNe f = new test.generated.pg_catalog.routines.NumericNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object numericOut(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericOut f = new test.generated.pg_catalog.routines.NumericOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> numericOut(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericOut f = new test.generated.pg_catalog.routines.NumericOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> numericOut(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.NumericOut f = new test.generated.pg_catalog.routines.NumericOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_power
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericPower(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericPower f = new test.generated.pg_catalog.routines.NumericPower();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_power as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericPower(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericPower f = new test.generated.pg_catalog.routines.NumericPower();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_power as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericPower(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericPower f = new test.generated.pg_catalog.routines.NumericPower();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_recv
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericRecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.NumericRecv f = new test.generated.pg_catalog.routines.NumericRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericRecv(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.NumericRecv f = new test.generated.pg_catalog.routines.NumericRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericRecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.NumericRecv f = new test.generated.pg_catalog.routines.NumericRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] numericSend(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericSend f = new test.generated.pg_catalog.routines.NumericSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> numericSend(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericSend f = new test.generated.pg_catalog.routines.NumericSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> numericSend(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.NumericSend f = new test.generated.pg_catalog.routines.NumericSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericSmaller(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericSmaller f = new test.generated.pg_catalog.routines.NumericSmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericSmaller(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericSmaller f = new test.generated.pg_catalog.routines.NumericSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericSmaller(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericSmaller f = new test.generated.pg_catalog.routines.NumericSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_sqrt
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericSqrt(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericSqrt f = new test.generated.pg_catalog.routines.NumericSqrt();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_sqrt as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericSqrt(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericSqrt f = new test.generated.pg_catalog.routines.NumericSqrt();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_sqrt as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericSqrt(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.NumericSqrt f = new test.generated.pg_catalog.routines.NumericSqrt();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_stddev_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericStddevPop(org.jooq.Configuration configuration, java.math.BigDecimal[] __1) {
		test.generated.pg_catalog.routines.NumericStddevPop f = new test.generated.pg_catalog.routines.NumericStddevPop();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericStddevPop(java.math.BigDecimal[] __1) {
		test.generated.pg_catalog.routines.NumericStddevPop f = new test.generated.pg_catalog.routines.NumericStddevPop();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericStddevPop(org.jooq.Field<java.math.BigDecimal[]> __1) {
		test.generated.pg_catalog.routines.NumericStddevPop f = new test.generated.pg_catalog.routines.NumericStddevPop();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_stddev_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericStddevSamp(org.jooq.Configuration configuration, java.math.BigDecimal[] __1) {
		test.generated.pg_catalog.routines.NumericStddevSamp f = new test.generated.pg_catalog.routines.NumericStddevSamp();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericStddevSamp(java.math.BigDecimal[] __1) {
		test.generated.pg_catalog.routines.NumericStddevSamp f = new test.generated.pg_catalog.routines.NumericStddevSamp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericStddevSamp(org.jooq.Field<java.math.BigDecimal[]> __1) {
		test.generated.pg_catalog.routines.NumericStddevSamp f = new test.generated.pg_catalog.routines.NumericStddevSamp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_sub
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericSub(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericSub f = new test.generated.pg_catalog.routines.NumericSub();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_sub as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericSub(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.NumericSub f = new test.generated.pg_catalog.routines.NumericSub();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_sub as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericSub(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.NumericSub f = new test.generated.pg_catalog.routines.NumericSub();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_uminus
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericUminus(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericUminus f = new test.generated.pg_catalog.routines.NumericUminus();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_uminus as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericUminus(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericUminus f = new test.generated.pg_catalog.routines.NumericUminus();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_uminus as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericUminus(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.NumericUminus f = new test.generated.pg_catalog.routines.NumericUminus();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_uplus
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericUplus(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericUplus f = new test.generated.pg_catalog.routines.NumericUplus();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_uplus as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericUplus(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.NumericUplus f = new test.generated.pg_catalog.routines.NumericUplus();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_uplus as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericUplus(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.NumericUplus f = new test.generated.pg_catalog.routines.NumericUplus();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_var_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericVarPop(org.jooq.Configuration configuration, java.math.BigDecimal[] __1) {
		test.generated.pg_catalog.routines.NumericVarPop f = new test.generated.pg_catalog.routines.NumericVarPop();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericVarPop(java.math.BigDecimal[] __1) {
		test.generated.pg_catalog.routines.NumericVarPop f = new test.generated.pg_catalog.routines.NumericVarPop();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericVarPop(org.jooq.Field<java.math.BigDecimal[]> __1) {
		test.generated.pg_catalog.routines.NumericVarPop f = new test.generated.pg_catalog.routines.NumericVarPop();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numeric_var_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal numericVarSamp(org.jooq.Configuration configuration, java.math.BigDecimal[] __1) {
		test.generated.pg_catalog.routines.NumericVarSamp f = new test.generated.pg_catalog.routines.NumericVarSamp();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numeric_var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericVarSamp(java.math.BigDecimal[] __1) {
		test.generated.pg_catalog.routines.NumericVarSamp f = new test.generated.pg_catalog.routines.NumericVarSamp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numeric_var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> numericVarSamp(org.jooq.Field<java.math.BigDecimal[]> __1) {
		test.generated.pg_catalog.routines.NumericVarSamp f = new test.generated.pg_catalog.routines.NumericVarSamp();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numerictypmodin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer numerictypmodin(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Numerictypmodin f = new test.generated.pg_catalog.routines.Numerictypmodin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numerictypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> numerictypmodin(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Numerictypmodin f = new test.generated.pg_catalog.routines.Numerictypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numerictypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> numerictypmodin(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Numerictypmodin f = new test.generated.pg_catalog.routines.Numerictypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numerictypmodout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object numerictypmodout(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Numerictypmodout f = new test.generated.pg_catalog.routines.Numerictypmodout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numerictypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> numerictypmodout(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Numerictypmodout f = new test.generated.pg_catalog.routines.Numerictypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numerictypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> numerictypmodout(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Numerictypmodout f = new test.generated.pg_catalog.routines.Numerictypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.numnode
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer numnode(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Numnode f = new test.generated.pg_catalog.routines.Numnode();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.numnode as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> numnode(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Numnode f = new test.generated.pg_catalog.routines.Numnode();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.numnode as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> numnode(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Numnode f = new test.generated.pg_catalog.routines.Numnode();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.obj_description
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String objDescription2(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.ObjDescription2 f = new test.generated.pg_catalog.routines.ObjDescription2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.obj_description as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> objDescription2(java.lang.Long __1) {
		test.generated.pg_catalog.routines.ObjDescription2 f = new test.generated.pg_catalog.routines.ObjDescription2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.obj_description as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> objDescription2(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.ObjDescription2 f = new test.generated.pg_catalog.routines.ObjDescription2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.obj_description
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String objDescription1(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ObjDescription1 f = new test.generated.pg_catalog.routines.ObjDescription1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.obj_description as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> objDescription1(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ObjDescription1 f = new test.generated.pg_catalog.routines.ObjDescription1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.obj_description as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> objDescription1(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ObjDescription1 f = new test.generated.pg_catalog.routines.ObjDescription1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.octet_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer octetLength1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.OctetLength1 f = new test.generated.pg_catalog.routines.OctetLength1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.octet_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> octetLength1(java.lang.String __1) {
		test.generated.pg_catalog.routines.OctetLength1 f = new test.generated.pg_catalog.routines.OctetLength1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.octet_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> octetLength1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.OctetLength1 f = new test.generated.pg_catalog.routines.OctetLength1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.octet_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer octetLength4(org.jooq.Configuration configuration, byte[] __1) {
		test.generated.pg_catalog.routines.OctetLength4 f = new test.generated.pg_catalog.routines.OctetLength4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.octet_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> octetLength4(byte[] __1) {
		test.generated.pg_catalog.routines.OctetLength4 f = new test.generated.pg_catalog.routines.OctetLength4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.octet_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> octetLength4(org.jooq.Field<byte[]> __1) {
		test.generated.pg_catalog.routines.OctetLength4 f = new test.generated.pg_catalog.routines.OctetLength4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.octet_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer octetLength2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.OctetLength2 f = new test.generated.pg_catalog.routines.OctetLength2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.octet_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> octetLength2(java.lang.String __1) {
		test.generated.pg_catalog.routines.OctetLength2 f = new test.generated.pg_catalog.routines.OctetLength2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.octet_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> octetLength2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.OctetLength2 f = new test.generated.pg_catalog.routines.OctetLength2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.octet_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer octetLength3(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.OctetLength3 f = new test.generated.pg_catalog.routines.OctetLength3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.octet_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> octetLength3(java.lang.String __1) {
		test.generated.pg_catalog.routines.OctetLength3 f = new test.generated.pg_catalog.routines.OctetLength3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.octet_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> octetLength3(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.OctetLength3 f = new test.generated.pg_catalog.routines.OctetLength3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oid
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long oid(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Oid f = new test.generated.pg_catalog.routines.Oid();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oid as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> oid(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Oid f = new test.generated.pg_catalog.routines.Oid();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oid as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> oid(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Oid f = new test.generated.pg_catalog.routines.Oid();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oideq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean oideq(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oideq f = new test.generated.pg_catalog.routines.Oideq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oideq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oideq(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oideq f = new test.generated.pg_catalog.routines.Oideq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oideq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oideq(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Oideq f = new test.generated.pg_catalog.routines.Oideq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean oidge(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidge f = new test.generated.pg_catalog.routines.Oidge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidge(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidge f = new test.generated.pg_catalog.routines.Oidge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidge(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Oidge f = new test.generated.pg_catalog.routines.Oidge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidgt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean oidgt(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidgt f = new test.generated.pg_catalog.routines.Oidgt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidgt(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidgt f = new test.generated.pg_catalog.routines.Oidgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidgt(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Oidgt f = new test.generated.pg_catalog.routines.Oidgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long oidin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Oidin f = new test.generated.pg_catalog.routines.Oidin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> oidin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Oidin f = new test.generated.pg_catalog.routines.Oidin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> oidin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Oidin f = new test.generated.pg_catalog.routines.Oidin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidlarger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long oidlarger(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidlarger f = new test.generated.pg_catalog.routines.Oidlarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidlarger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> oidlarger(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidlarger f = new test.generated.pg_catalog.routines.Oidlarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidlarger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> oidlarger(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Oidlarger f = new test.generated.pg_catalog.routines.Oidlarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidle
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean oidle(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidle f = new test.generated.pg_catalog.routines.Oidle();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidle(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidle f = new test.generated.pg_catalog.routines.Oidle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidle(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Oidle f = new test.generated.pg_catalog.routines.Oidle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidlt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean oidlt(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidlt f = new test.generated.pg_catalog.routines.Oidlt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidlt(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidlt f = new test.generated.pg_catalog.routines.Oidlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidlt(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Oidlt f = new test.generated.pg_catalog.routines.Oidlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean oidne(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidne f = new test.generated.pg_catalog.routines.Oidne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidne(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidne f = new test.generated.pg_catalog.routines.Oidne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidne(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Oidne f = new test.generated.pg_catalog.routines.Oidne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object oidout(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Oidout f = new test.generated.pg_catalog.routines.Oidout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> oidout(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Oidout f = new test.generated.pg_catalog.routines.Oidout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> oidout(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Oidout f = new test.generated.pg_catalog.routines.Oidout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long oidrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Oidrecv f = new test.generated.pg_catalog.routines.Oidrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> oidrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Oidrecv f = new test.generated.pg_catalog.routines.Oidrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> oidrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Oidrecv f = new test.generated.pg_catalog.routines.Oidrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] oidsend(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Oidsend f = new test.generated.pg_catalog.routines.Oidsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> oidsend(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Oidsend f = new test.generated.pg_catalog.routines.Oidsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> oidsend(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Oidsend f = new test.generated.pg_catalog.routines.Oidsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidsmaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long oidsmaller(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidsmaller f = new test.generated.pg_catalog.routines.Oidsmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidsmaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> oidsmaller(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Oidsmaller f = new test.generated.pg_catalog.routines.Oidsmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidsmaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> oidsmaller(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Oidsmaller f = new test.generated.pg_catalog.routines.Oidsmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidvectoreq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean oidvectoreq(org.jooq.Configuration configuration, java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Oidvectoreq f = new test.generated.pg_catalog.routines.Oidvectoreq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidvectoreq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidvectoreq(java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Oidvectoreq f = new test.generated.pg_catalog.routines.Oidvectoreq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidvectoreq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidvectoreq(org.jooq.Field<java.lang.Long[]> __1, org.jooq.Field<java.lang.Long[]> __2) {
		test.generated.pg_catalog.routines.Oidvectoreq f = new test.generated.pg_catalog.routines.Oidvectoreq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidvectorge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean oidvectorge(org.jooq.Configuration configuration, java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Oidvectorge f = new test.generated.pg_catalog.routines.Oidvectorge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidvectorge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidvectorge(java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Oidvectorge f = new test.generated.pg_catalog.routines.Oidvectorge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidvectorge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidvectorge(org.jooq.Field<java.lang.Long[]> __1, org.jooq.Field<java.lang.Long[]> __2) {
		test.generated.pg_catalog.routines.Oidvectorge f = new test.generated.pg_catalog.routines.Oidvectorge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidvectorgt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean oidvectorgt(org.jooq.Configuration configuration, java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Oidvectorgt f = new test.generated.pg_catalog.routines.Oidvectorgt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidvectorgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidvectorgt(java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Oidvectorgt f = new test.generated.pg_catalog.routines.Oidvectorgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidvectorgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidvectorgt(org.jooq.Field<java.lang.Long[]> __1, org.jooq.Field<java.lang.Long[]> __2) {
		test.generated.pg_catalog.routines.Oidvectorgt f = new test.generated.pg_catalog.routines.Oidvectorgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidvectorin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long[] oidvectorin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Oidvectorin f = new test.generated.pg_catalog.routines.Oidvectorin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidvectorin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long[]> oidvectorin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Oidvectorin f = new test.generated.pg_catalog.routines.Oidvectorin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidvectorin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long[]> oidvectorin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Oidvectorin f = new test.generated.pg_catalog.routines.Oidvectorin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidvectorle
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean oidvectorle(org.jooq.Configuration configuration, java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Oidvectorle f = new test.generated.pg_catalog.routines.Oidvectorle();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidvectorle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidvectorle(java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Oidvectorle f = new test.generated.pg_catalog.routines.Oidvectorle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidvectorle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidvectorle(org.jooq.Field<java.lang.Long[]> __1, org.jooq.Field<java.lang.Long[]> __2) {
		test.generated.pg_catalog.routines.Oidvectorle f = new test.generated.pg_catalog.routines.Oidvectorle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidvectorlt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean oidvectorlt(org.jooq.Configuration configuration, java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Oidvectorlt f = new test.generated.pg_catalog.routines.Oidvectorlt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidvectorlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidvectorlt(java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Oidvectorlt f = new test.generated.pg_catalog.routines.Oidvectorlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidvectorlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidvectorlt(org.jooq.Field<java.lang.Long[]> __1, org.jooq.Field<java.lang.Long[]> __2) {
		test.generated.pg_catalog.routines.Oidvectorlt f = new test.generated.pg_catalog.routines.Oidvectorlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidvectorne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean oidvectorne(org.jooq.Configuration configuration, java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Oidvectorne f = new test.generated.pg_catalog.routines.Oidvectorne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidvectorne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidvectorne(java.lang.Long[] __1, java.lang.Long[] __2) {
		test.generated.pg_catalog.routines.Oidvectorne f = new test.generated.pg_catalog.routines.Oidvectorne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidvectorne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> oidvectorne(org.jooq.Field<java.lang.Long[]> __1, org.jooq.Field<java.lang.Long[]> __2) {
		test.generated.pg_catalog.routines.Oidvectorne f = new test.generated.pg_catalog.routines.Oidvectorne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidvectorout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object oidvectorout(org.jooq.Configuration configuration, java.lang.Long[] __1) {
		test.generated.pg_catalog.routines.Oidvectorout f = new test.generated.pg_catalog.routines.Oidvectorout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidvectorout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> oidvectorout(java.lang.Long[] __1) {
		test.generated.pg_catalog.routines.Oidvectorout f = new test.generated.pg_catalog.routines.Oidvectorout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidvectorout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> oidvectorout(org.jooq.Field<java.lang.Long[]> __1) {
		test.generated.pg_catalog.routines.Oidvectorout f = new test.generated.pg_catalog.routines.Oidvectorout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidvectorrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long[] oidvectorrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Oidvectorrecv f = new test.generated.pg_catalog.routines.Oidvectorrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidvectorrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long[]> oidvectorrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Oidvectorrecv f = new test.generated.pg_catalog.routines.Oidvectorrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidvectorrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long[]> oidvectorrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Oidvectorrecv f = new test.generated.pg_catalog.routines.Oidvectorrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidvectorsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] oidvectorsend(org.jooq.Configuration configuration, java.lang.Long[] __1) {
		test.generated.pg_catalog.routines.Oidvectorsend f = new test.generated.pg_catalog.routines.Oidvectorsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidvectorsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> oidvectorsend(java.lang.Long[] __1) {
		test.generated.pg_catalog.routines.Oidvectorsend f = new test.generated.pg_catalog.routines.Oidvectorsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidvectorsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> oidvectorsend(org.jooq.Field<java.lang.Long[]> __1) {
		test.generated.pg_catalog.routines.Oidvectorsend f = new test.generated.pg_catalog.routines.Oidvectorsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.oidvectortypes
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String oidvectortypes(org.jooq.Configuration configuration, java.lang.Long[] __1) {
		test.generated.pg_catalog.routines.Oidvectortypes f = new test.generated.pg_catalog.routines.Oidvectortypes();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.oidvectortypes as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> oidvectortypes(java.lang.Long[] __1) {
		test.generated.pg_catalog.routines.Oidvectortypes f = new test.generated.pg_catalog.routines.Oidvectortypes();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.oidvectortypes as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> oidvectortypes(org.jooq.Field<java.lang.Long[]> __1) {
		test.generated.pg_catalog.routines.Oidvectortypes f = new test.generated.pg_catalog.routines.Oidvectortypes();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.on_pb
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean onPb(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.OnPb f = new test.generated.pg_catalog.routines.OnPb();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.on_pb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> onPb(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.OnPb f = new test.generated.pg_catalog.routines.OnPb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.on_pb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> onPb(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.OnPb f = new test.generated.pg_catalog.routines.OnPb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.on_pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean onPl(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.OnPl f = new test.generated.pg_catalog.routines.OnPl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.on_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> onPl(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.OnPl f = new test.generated.pg_catalog.routines.OnPl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.on_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> onPl(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.OnPl f = new test.generated.pg_catalog.routines.OnPl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.on_ppath
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean onPpath(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.OnPpath f = new test.generated.pg_catalog.routines.OnPpath();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.on_ppath as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> onPpath(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.OnPpath f = new test.generated.pg_catalog.routines.OnPpath();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.on_ppath as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> onPpath(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.OnPpath f = new test.generated.pg_catalog.routines.OnPpath();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.on_ps
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean onPs(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.OnPs f = new test.generated.pg_catalog.routines.OnPs();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.on_ps as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> onPs(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.OnPs f = new test.generated.pg_catalog.routines.OnPs();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.on_ps as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> onPs(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.OnPs f = new test.generated.pg_catalog.routines.OnPs();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.on_sb
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean onSb(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.OnSb f = new test.generated.pg_catalog.routines.OnSb();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.on_sb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> onSb(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.OnSb f = new test.generated.pg_catalog.routines.OnSb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.on_sb as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> onSb(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.OnSb f = new test.generated.pg_catalog.routines.OnSb();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.on_sl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean onSl(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.OnSl f = new test.generated.pg_catalog.routines.OnSl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.on_sl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> onSl(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.OnSl f = new test.generated.pg_catalog.routines.OnSl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.on_sl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> onSl(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.OnSl f = new test.generated.pg_catalog.routines.OnSl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.opaque_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object opaqueIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.OpaqueIn f = new test.generated.pg_catalog.routines.OpaqueIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.opaque_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> opaqueIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.OpaqueIn f = new test.generated.pg_catalog.routines.OpaqueIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.opaque_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> opaqueIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.OpaqueIn f = new test.generated.pg_catalog.routines.OpaqueIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.opaque_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object opaqueOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.OpaqueOut f = new test.generated.pg_catalog.routines.OpaqueOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.opaque_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> opaqueOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.OpaqueOut f = new test.generated.pg_catalog.routines.OpaqueOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.opaque_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> opaqueOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.OpaqueOut f = new test.generated.pg_catalog.routines.OpaqueOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps7(org.jooq.Configuration configuration, java.sql.Time __1, java.lang.Object __2, java.sql.Time __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Overlaps7 f = new test.generated.pg_catalog.routines.Overlaps7();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps7(java.sql.Time __1, java.lang.Object __2, java.sql.Time __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Overlaps7 f = new test.generated.pg_catalog.routines.Overlaps7();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps7(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.sql.Time> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.Overlaps7 f = new test.generated.pg_catalog.routines.Overlaps7();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps10(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2, java.sql.Timestamp __3, java.sql.Timestamp __4) {
		test.generated.pg_catalog.routines.Overlaps10 f = new test.generated.pg_catalog.routines.Overlaps10();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps10(java.sql.Timestamp __1, java.sql.Timestamp __2, java.sql.Timestamp __3, java.sql.Timestamp __4) {
		test.generated.pg_catalog.routines.Overlaps10 f = new test.generated.pg_catalog.routines.Overlaps10();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps10(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2, org.jooq.Field<java.sql.Timestamp> __3, org.jooq.Field<java.sql.Timestamp> __4) {
		test.generated.pg_catalog.routines.Overlaps10 f = new test.generated.pg_catalog.routines.Overlaps10();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps4(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2, java.sql.Timestamp __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Overlaps4 f = new test.generated.pg_catalog.routines.Overlaps4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps4(java.sql.Timestamp __1, java.sql.Timestamp __2, java.sql.Timestamp __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Overlaps4 f = new test.generated.pg_catalog.routines.Overlaps4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps4(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2, org.jooq.Field<java.sql.Timestamp> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.Overlaps4 f = new test.generated.pg_catalog.routines.Overlaps4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps11(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.lang.Object __2, java.sql.Timestamp __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Overlaps11 f = new test.generated.pg_catalog.routines.Overlaps11();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps11(java.sql.Timestamp __1, java.lang.Object __2, java.sql.Timestamp __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Overlaps11 f = new test.generated.pg_catalog.routines.Overlaps11();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps11(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.sql.Timestamp> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.Overlaps11 f = new test.generated.pg_catalog.routines.Overlaps11();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps12(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2, java.sql.Timestamp __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Overlaps12 f = new test.generated.pg_catalog.routines.Overlaps12();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps12(java.sql.Timestamp __1, java.sql.Timestamp __2, java.sql.Timestamp __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Overlaps12 f = new test.generated.pg_catalog.routines.Overlaps12();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps12(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2, org.jooq.Field<java.sql.Timestamp> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.Overlaps12 f = new test.generated.pg_catalog.routines.Overlaps12();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps13(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.lang.Object __2, java.sql.Timestamp __3, java.sql.Timestamp __4) {
		test.generated.pg_catalog.routines.Overlaps13 f = new test.generated.pg_catalog.routines.Overlaps13();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps13(java.sql.Timestamp __1, java.lang.Object __2, java.sql.Timestamp __3, java.sql.Timestamp __4) {
		test.generated.pg_catalog.routines.Overlaps13 f = new test.generated.pg_catalog.routines.Overlaps13();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps13(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.sql.Timestamp> __3, org.jooq.Field<java.sql.Timestamp> __4) {
		test.generated.pg_catalog.routines.Overlaps13 f = new test.generated.pg_catalog.routines.Overlaps13();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps6(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2, java.sql.Time __3, java.sql.Time __4) {
		test.generated.pg_catalog.routines.Overlaps6 f = new test.generated.pg_catalog.routines.Overlaps6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps6(java.sql.Time __1, java.sql.Time __2, java.sql.Time __3, java.sql.Time __4) {
		test.generated.pg_catalog.routines.Overlaps6 f = new test.generated.pg_catalog.routines.Overlaps6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps6(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2, org.jooq.Field<java.sql.Time> __3, org.jooq.Field<java.sql.Time> __4) {
		test.generated.pg_catalog.routines.Overlaps6 f = new test.generated.pg_catalog.routines.Overlaps6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps5(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.lang.Object __2, java.sql.Timestamp __3, java.sql.Timestamp __4) {
		test.generated.pg_catalog.routines.Overlaps5 f = new test.generated.pg_catalog.routines.Overlaps5();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps5(java.sql.Timestamp __1, java.lang.Object __2, java.sql.Timestamp __3, java.sql.Timestamp __4) {
		test.generated.pg_catalog.routines.Overlaps5 f = new test.generated.pg_catalog.routines.Overlaps5();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps5(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.sql.Timestamp> __3, org.jooq.Field<java.sql.Timestamp> __4) {
		test.generated.pg_catalog.routines.Overlaps5 f = new test.generated.pg_catalog.routines.Overlaps5();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps2(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2, java.sql.Timestamp __3, java.sql.Timestamp __4) {
		test.generated.pg_catalog.routines.Overlaps2 f = new test.generated.pg_catalog.routines.Overlaps2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps2(java.sql.Timestamp __1, java.sql.Timestamp __2, java.sql.Timestamp __3, java.sql.Timestamp __4) {
		test.generated.pg_catalog.routines.Overlaps2 f = new test.generated.pg_catalog.routines.Overlaps2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps2(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2, org.jooq.Field<java.sql.Timestamp> __3, org.jooq.Field<java.sql.Timestamp> __4) {
		test.generated.pg_catalog.routines.Overlaps2 f = new test.generated.pg_catalog.routines.Overlaps2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps1(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2, java.sql.Time __3, java.sql.Time __4) {
		test.generated.pg_catalog.routines.Overlaps1 f = new test.generated.pg_catalog.routines.Overlaps1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps1(java.sql.Time __1, java.sql.Time __2, java.sql.Time __3, java.sql.Time __4) {
		test.generated.pg_catalog.routines.Overlaps1 f = new test.generated.pg_catalog.routines.Overlaps1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps1(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2, org.jooq.Field<java.sql.Time> __3, org.jooq.Field<java.sql.Time> __4) {
		test.generated.pg_catalog.routines.Overlaps1 f = new test.generated.pg_catalog.routines.Overlaps1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps9(org.jooq.Configuration configuration, java.sql.Time __1, java.lang.Object __2, java.sql.Time __3, java.sql.Time __4) {
		test.generated.pg_catalog.routines.Overlaps9 f = new test.generated.pg_catalog.routines.Overlaps9();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps9(java.sql.Time __1, java.lang.Object __2, java.sql.Time __3, java.sql.Time __4) {
		test.generated.pg_catalog.routines.Overlaps9 f = new test.generated.pg_catalog.routines.Overlaps9();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps9(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.sql.Time> __3, org.jooq.Field<java.sql.Time> __4) {
		test.generated.pg_catalog.routines.Overlaps9 f = new test.generated.pg_catalog.routines.Overlaps9();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps8(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2, java.sql.Time __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Overlaps8 f = new test.generated.pg_catalog.routines.Overlaps8();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps8(java.sql.Time __1, java.sql.Time __2, java.sql.Time __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Overlaps8 f = new test.generated.pg_catalog.routines.Overlaps8();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps8(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2, org.jooq.Field<java.sql.Time> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.Overlaps8 f = new test.generated.pg_catalog.routines.Overlaps8();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlaps
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean overlaps3(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.lang.Object __2, java.sql.Timestamp __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Overlaps3 f = new test.generated.pg_catalog.routines.Overlaps3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps3(java.sql.Timestamp __1, java.lang.Object __2, java.sql.Timestamp __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.Overlaps3 f = new test.generated.pg_catalog.routines.Overlaps3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlaps as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Boolean> overlaps3(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.sql.Timestamp> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.Overlaps3 f = new test.generated.pg_catalog.routines.Overlaps3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlay
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String overlay4(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Overlay4 f = new test.generated.pg_catalog.routines.Overlay4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlay as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> overlay4(java.lang.String __1, java.lang.String __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Overlay4 f = new test.generated.pg_catalog.routines.Overlay4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlay as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> overlay4(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.Overlay4 f = new test.generated.pg_catalog.routines.Overlay4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlay
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String overlay3(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.Integer __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Overlay3 f = new test.generated.pg_catalog.routines.Overlay3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlay as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.String> overlay3(java.lang.String __1, java.lang.String __2, java.lang.Integer __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Overlay3 f = new test.generated.pg_catalog.routines.Overlay3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlay as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.String> overlay3(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.Integer> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Overlay3 f = new test.generated.pg_catalog.routines.Overlay3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlay
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] overlay5(org.jooq.Configuration configuration, byte[] __1, byte[] __2, java.lang.Integer __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Overlay5 f = new test.generated.pg_catalog.routines.Overlay5();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlay as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<byte[]> overlay5(byte[] __1, byte[] __2, java.lang.Integer __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Overlay5 f = new test.generated.pg_catalog.routines.Overlay5();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlay as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<byte[]> overlay5(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2, org.jooq.Field<java.lang.Integer> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Overlay5 f = new test.generated.pg_catalog.routines.Overlay5();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlay
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] overlay6(org.jooq.Configuration configuration, byte[] __1, byte[] __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Overlay6 f = new test.generated.pg_catalog.routines.Overlay6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlay as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<byte[]> overlay6(byte[] __1, byte[] __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Overlay6 f = new test.generated.pg_catalog.routines.Overlay6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlay as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<byte[]> overlay6(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.Overlay6 f = new test.generated.pg_catalog.routines.Overlay6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlay
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String overlay1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.Integer __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Overlay1 f = new test.generated.pg_catalog.routines.Overlay1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlay as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.String> overlay1(java.lang.String __1, java.lang.String __2, java.lang.Integer __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Overlay1 f = new test.generated.pg_catalog.routines.Overlay1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlay as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.String> overlay1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.Integer> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Overlay1 f = new test.generated.pg_catalog.routines.Overlay1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.overlay
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String overlay2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Overlay2 f = new test.generated.pg_catalog.routines.Overlay2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.overlay as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> overlay2(java.lang.String __1, java.lang.String __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Overlay2 f = new test.generated.pg_catalog.routines.Overlay2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.overlay as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> overlay2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.Overlay2 f = new test.generated.pg_catalog.routines.Overlay2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object path(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Path f = new test.generated.pg_catalog.routines.Path();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> path(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Path f = new test.generated.pg_catalog.routines.Path();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> path(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Path f = new test.generated.pg_catalog.routines.Path();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_add
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pathAdd(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathAdd f = new test.generated.pg_catalog.routines.PathAdd();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_add as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pathAdd(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathAdd f = new test.generated.pg_catalog.routines.PathAdd();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_add as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pathAdd(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathAdd f = new test.generated.pg_catalog.routines.PathAdd();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_add_pt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pathAddPt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathAddPt f = new test.generated.pg_catalog.routines.PathAddPt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_add_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pathAddPt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathAddPt f = new test.generated.pg_catalog.routines.PathAddPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_add_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pathAddPt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathAddPt f = new test.generated.pg_catalog.routines.PathAddPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_center
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pathCenter(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathCenter f = new test.generated.pg_catalog.routines.PathCenter();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pathCenter(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathCenter f = new test.generated.pg_catalog.routines.PathCenter();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pathCenter(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PathCenter f = new test.generated.pg_catalog.routines.PathCenter();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_contain_pt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pathContainPt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathContainPt f = new test.generated.pg_catalog.routines.PathContainPt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_contain_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathContainPt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathContainPt f = new test.generated.pg_catalog.routines.PathContainPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_contain_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathContainPt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathContainPt f = new test.generated.pg_catalog.routines.PathContainPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_distance
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double pathDistance(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathDistance f = new test.generated.pg_catalog.routines.PathDistance();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> pathDistance(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathDistance f = new test.generated.pg_catalog.routines.PathDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> pathDistance(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathDistance f = new test.generated.pg_catalog.routines.PathDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_div_pt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pathDivPt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathDivPt f = new test.generated.pg_catalog.routines.PathDivPt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_div_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pathDivPt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathDivPt f = new test.generated.pg_catalog.routines.PathDivPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_div_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pathDivPt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathDivPt f = new test.generated.pg_catalog.routines.PathDivPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pathIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathIn f = new test.generated.pg_catalog.routines.PathIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pathIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathIn f = new test.generated.pg_catalog.routines.PathIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pathIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PathIn f = new test.generated.pg_catalog.routines.PathIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_inter
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pathInter(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathInter f = new test.generated.pg_catalog.routines.PathInter();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_inter as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathInter(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathInter f = new test.generated.pg_catalog.routines.PathInter();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_inter as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathInter(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathInter f = new test.generated.pg_catalog.routines.PathInter();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double pathLength(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathLength f = new test.generated.pg_catalog.routines.PathLength();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> pathLength(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathLength f = new test.generated.pg_catalog.routines.PathLength();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> pathLength(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PathLength f = new test.generated.pg_catalog.routines.PathLength();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_mul_pt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pathMulPt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathMulPt f = new test.generated.pg_catalog.routines.PathMulPt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_mul_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pathMulPt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathMulPt f = new test.generated.pg_catalog.routines.PathMulPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_mul_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pathMulPt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathMulPt f = new test.generated.pg_catalog.routines.PathMulPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_n_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pathNEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathNEq f = new test.generated.pg_catalog.routines.PathNEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_n_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathNEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathNEq f = new test.generated.pg_catalog.routines.PathNEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_n_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathNEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathNEq f = new test.generated.pg_catalog.routines.PathNEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_n_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pathNGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathNGe f = new test.generated.pg_catalog.routines.PathNGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_n_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathNGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathNGe f = new test.generated.pg_catalog.routines.PathNGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_n_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathNGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathNGe f = new test.generated.pg_catalog.routines.PathNGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_n_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pathNGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathNGt f = new test.generated.pg_catalog.routines.PathNGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_n_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathNGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathNGt f = new test.generated.pg_catalog.routines.PathNGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_n_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathNGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathNGt f = new test.generated.pg_catalog.routines.PathNGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_n_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pathNLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathNLe f = new test.generated.pg_catalog.routines.PathNLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_n_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathNLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathNLe f = new test.generated.pg_catalog.routines.PathNLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_n_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathNLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathNLe f = new test.generated.pg_catalog.routines.PathNLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_n_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pathNLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathNLt f = new test.generated.pg_catalog.routines.PathNLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_n_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathNLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathNLt f = new test.generated.pg_catalog.routines.PathNLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_n_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pathNLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathNLt f = new test.generated.pg_catalog.routines.PathNLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_npoints
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer pathNpoints(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathNpoints f = new test.generated.pg_catalog.routines.PathNpoints();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_npoints as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pathNpoints(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathNpoints f = new test.generated.pg_catalog.routines.PathNpoints();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_npoints as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pathNpoints(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PathNpoints f = new test.generated.pg_catalog.routines.PathNpoints();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pathOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathOut f = new test.generated.pg_catalog.routines.PathOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pathOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathOut f = new test.generated.pg_catalog.routines.PathOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pathOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PathOut f = new test.generated.pg_catalog.routines.PathOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pathRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathRecv f = new test.generated.pg_catalog.routines.PathRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pathRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathRecv f = new test.generated.pg_catalog.routines.PathRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pathRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PathRecv f = new test.generated.pg_catalog.routines.PathRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] pathSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathSend f = new test.generated.pg_catalog.routines.PathSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> pathSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PathSend f = new test.generated.pg_catalog.routines.PathSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> pathSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PathSend f = new test.generated.pg_catalog.routines.PathSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.path_sub_pt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pathSubPt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathSubPt f = new test.generated.pg_catalog.routines.PathSubPt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.path_sub_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pathSubPt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PathSubPt f = new test.generated.pg_catalog.routines.PathSubPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.path_sub_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pathSubPt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PathSubPt f = new test.generated.pg_catalog.routines.PathSubPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pclose
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pclose(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Pclose f = new test.generated.pg_catalog.routines.Pclose();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pclose as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pclose(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Pclose f = new test.generated.pg_catalog.routines.Pclose();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pclose as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pclose(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Pclose f = new test.generated.pg_catalog.routines.Pclose();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.percent_rank
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double percentRank(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PercentRank f = new test.generated.pg_catalog.routines.PercentRank();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.percent_rank as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Double> percentRank() {
		test.generated.pg_catalog.routines.PercentRank f = new test.generated.pg_catalog.routines.PercentRank();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_advisory_lock
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void pgAdvisoryLock2(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.PgAdvisoryLock2 p = new test.generated.pg_catalog.routines.PgAdvisoryLock2();
		p.set__1(__1);
		p.set__2(__2);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.pg_advisory_lock
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void pgAdvisoryLock1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgAdvisoryLock1 p = new test.generated.pg_catalog.routines.PgAdvisoryLock1();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.pg_advisory_lock_shared
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void pgAdvisoryLockShared1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgAdvisoryLockShared1 p = new test.generated.pg_catalog.routines.PgAdvisoryLockShared1();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.pg_advisory_lock_shared
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void pgAdvisoryLockShared2(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.PgAdvisoryLockShared2 p = new test.generated.pg_catalog.routines.PgAdvisoryLockShared2();
		p.set__1(__1);
		p.set__2(__2);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.pg_advisory_unlock
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgAdvisoryUnlock2(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlock2 f = new test.generated.pg_catalog.routines.PgAdvisoryUnlock2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_advisory_unlock as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pgAdvisoryUnlock2(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlock2 f = new test.generated.pg_catalog.routines.PgAdvisoryUnlock2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_advisory_unlock as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pgAdvisoryUnlock2(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlock2 f = new test.generated.pg_catalog.routines.PgAdvisoryUnlock2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_advisory_unlock
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgAdvisoryUnlock1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlock1 f = new test.generated.pg_catalog.routines.PgAdvisoryUnlock1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_advisory_unlock as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgAdvisoryUnlock1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlock1 f = new test.generated.pg_catalog.routines.PgAdvisoryUnlock1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_advisory_unlock as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgAdvisoryUnlock1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlock1 f = new test.generated.pg_catalog.routines.PgAdvisoryUnlock1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_advisory_unlock_all
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void pgAdvisoryUnlockAll(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlockAll p = new test.generated.pg_catalog.routines.PgAdvisoryUnlockAll();

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.pg_advisory_unlock_shared
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgAdvisoryUnlockShared2(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlockShared2 f = new test.generated.pg_catalog.routines.PgAdvisoryUnlockShared2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_advisory_unlock_shared as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pgAdvisoryUnlockShared2(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlockShared2 f = new test.generated.pg_catalog.routines.PgAdvisoryUnlockShared2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_advisory_unlock_shared as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pgAdvisoryUnlockShared2(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlockShared2 f = new test.generated.pg_catalog.routines.PgAdvisoryUnlockShared2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_advisory_unlock_shared
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgAdvisoryUnlockShared1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlockShared1 f = new test.generated.pg_catalog.routines.PgAdvisoryUnlockShared1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_advisory_unlock_shared as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgAdvisoryUnlockShared1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlockShared1 f = new test.generated.pg_catalog.routines.PgAdvisoryUnlockShared1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_advisory_unlock_shared as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgAdvisoryUnlockShared1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgAdvisoryUnlockShared1 f = new test.generated.pg_catalog.routines.PgAdvisoryUnlockShared1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_backend_pid
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer pgBackendPid(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgBackendPid f = new test.generated.pg_catalog.routines.PgBackendPid();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_backend_pid as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Integer> pgBackendPid() {
		test.generated.pg_catalog.routines.PgBackendPid f = new test.generated.pg_catalog.routines.PgBackendPid();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_cancel_backend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgCancelBackend(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgCancelBackend f = new test.generated.pg_catalog.routines.PgCancelBackend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_cancel_backend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgCancelBackend(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgCancelBackend f = new test.generated.pg_catalog.routines.PgCancelBackend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_cancel_backend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgCancelBackend(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgCancelBackend f = new test.generated.pg_catalog.routines.PgCancelBackend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_char_to_encoding
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer pgCharToEncoding(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.PgCharToEncoding f = new test.generated.pg_catalog.routines.PgCharToEncoding();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_char_to_encoding as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pgCharToEncoding(java.lang.String __1) {
		test.generated.pg_catalog.routines.PgCharToEncoding f = new test.generated.pg_catalog.routines.PgCharToEncoding();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_char_to_encoding as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pgCharToEncoding(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.PgCharToEncoding f = new test.generated.pg_catalog.routines.PgCharToEncoding();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_client_encoding
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgClientEncoding(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgClientEncoding f = new test.generated.pg_catalog.routines.PgClientEncoding();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_client_encoding as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> pgClientEncoding() {
		test.generated.pg_catalog.routines.PgClientEncoding f = new test.generated.pg_catalog.routines.PgClientEncoding();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_column_size
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer pgColumnSize(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgColumnSize f = new test.generated.pg_catalog.routines.PgColumnSize();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_column_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pgColumnSize(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgColumnSize f = new test.generated.pg_catalog.routines.PgColumnSize();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_column_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pgColumnSize(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PgColumnSize f = new test.generated.pg_catalog.routines.PgColumnSize();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_conf_load_time
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp pgConfLoadTime(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgConfLoadTime f = new test.generated.pg_catalog.routines.PgConfLoadTime();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_conf_load_time as a field
	 *
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgConfLoadTime() {
		test.generated.pg_catalog.routines.PgConfLoadTime f = new test.generated.pg_catalog.routines.PgConfLoadTime();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_conversion_is_visible
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgConversionIsVisible(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgConversionIsVisible f = new test.generated.pg_catalog.routines.PgConversionIsVisible();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_conversion_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgConversionIsVisible(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgConversionIsVisible f = new test.generated.pg_catalog.routines.PgConversionIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_conversion_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgConversionIsVisible(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgConversionIsVisible f = new test.generated.pg_catalog.routines.PgConversionIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_current_xlog_insert_location
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgCurrentXlogInsertLocation(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgCurrentXlogInsertLocation f = new test.generated.pg_catalog.routines.PgCurrentXlogInsertLocation();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_current_xlog_insert_location as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> pgCurrentXlogInsertLocation() {
		test.generated.pg_catalog.routines.PgCurrentXlogInsertLocation f = new test.generated.pg_catalog.routines.PgCurrentXlogInsertLocation();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_current_xlog_location
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgCurrentXlogLocation(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgCurrentXlogLocation f = new test.generated.pg_catalog.routines.PgCurrentXlogLocation();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_current_xlog_location as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> pgCurrentXlogLocation() {
		test.generated.pg_catalog.routines.PgCurrentXlogLocation f = new test.generated.pg_catalog.routines.PgCurrentXlogLocation();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_cursor
	 *
	 * @param name OUT parameter
	 * @param statement OUT parameter
	 * @param isHoldable OUT parameter
	 * @param isBinary OUT parameter
	 * @param isScrollable OUT parameter
	 * @param creationTime OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.PgCursor pgCursor(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgCursor p = new test.generated.pg_catalog.routines.PgCursor();

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.pg_database_size
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgDatabaseSize1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.PgDatabaseSize1 f = new test.generated.pg_catalog.routines.PgDatabaseSize1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_database_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgDatabaseSize1(java.lang.String __1) {
		test.generated.pg_catalog.routines.PgDatabaseSize1 f = new test.generated.pg_catalog.routines.PgDatabaseSize1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_database_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgDatabaseSize1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.PgDatabaseSize1 f = new test.generated.pg_catalog.routines.PgDatabaseSize1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_database_size
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgDatabaseSize2(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgDatabaseSize2 f = new test.generated.pg_catalog.routines.PgDatabaseSize2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_database_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgDatabaseSize2(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgDatabaseSize2 f = new test.generated.pg_catalog.routines.PgDatabaseSize2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_database_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgDatabaseSize2(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgDatabaseSize2 f = new test.generated.pg_catalog.routines.PgDatabaseSize2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_encoding_max_length
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer pgEncodingMaxLength(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgEncodingMaxLength f = new test.generated.pg_catalog.routines.PgEncodingMaxLength();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_encoding_max_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pgEncodingMaxLength(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgEncodingMaxLength f = new test.generated.pg_catalog.routines.PgEncodingMaxLength();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_encoding_max_length as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pgEncodingMaxLength(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgEncodingMaxLength f = new test.generated.pg_catalog.routines.PgEncodingMaxLength();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_encoding_to_char
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgEncodingToChar(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgEncodingToChar f = new test.generated.pg_catalog.routines.PgEncodingToChar();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_encoding_to_char as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgEncodingToChar(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgEncodingToChar f = new test.generated.pg_catalog.routines.PgEncodingToChar();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_encoding_to_char as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgEncodingToChar(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgEncodingToChar f = new test.generated.pg_catalog.routines.PgEncodingToChar();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_function_is_visible
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgFunctionIsVisible(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgFunctionIsVisible f = new test.generated.pg_catalog.routines.PgFunctionIsVisible();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_function_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgFunctionIsVisible(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgFunctionIsVisible f = new test.generated.pg_catalog.routines.PgFunctionIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_function_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgFunctionIsVisible(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgFunctionIsVisible f = new test.generated.pg_catalog.routines.PgFunctionIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_constraintdef
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetConstraintdef1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetConstraintdef1 f = new test.generated.pg_catalog.routines.PgGetConstraintdef1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_constraintdef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetConstraintdef1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetConstraintdef1 f = new test.generated.pg_catalog.routines.PgGetConstraintdef1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_constraintdef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetConstraintdef1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgGetConstraintdef1 f = new test.generated.pg_catalog.routines.PgGetConstraintdef1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_constraintdef
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetConstraintdef2(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.PgGetConstraintdef2 f = new test.generated.pg_catalog.routines.PgGetConstraintdef2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_constraintdef as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetConstraintdef2(java.lang.Long __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.PgGetConstraintdef2 f = new test.generated.pg_catalog.routines.PgGetConstraintdef2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_constraintdef as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetConstraintdef2(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.PgGetConstraintdef2 f = new test.generated.pg_catalog.routines.PgGetConstraintdef2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_expr
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetExpr2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.PgGetExpr2 f = new test.generated.pg_catalog.routines.PgGetExpr2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_expr as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> pgGetExpr2(java.lang.String __1, java.lang.Long __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.PgGetExpr2 f = new test.generated.pg_catalog.routines.PgGetExpr2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_expr as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> pgGetExpr2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Boolean> __3) {
		test.generated.pg_catalog.routines.PgGetExpr2 f = new test.generated.pg_catalog.routines.PgGetExpr2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_expr
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetExpr1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.PgGetExpr1 f = new test.generated.pg_catalog.routines.PgGetExpr1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_expr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetExpr1(java.lang.String __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.PgGetExpr1 f = new test.generated.pg_catalog.routines.PgGetExpr1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_expr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetExpr1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.PgGetExpr1 f = new test.generated.pg_catalog.routines.PgGetExpr1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_function_arguments
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetFunctionArguments(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetFunctionArguments f = new test.generated.pg_catalog.routines.PgGetFunctionArguments();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_function_arguments as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetFunctionArguments(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetFunctionArguments f = new test.generated.pg_catalog.routines.PgGetFunctionArguments();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_function_arguments as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetFunctionArguments(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgGetFunctionArguments f = new test.generated.pg_catalog.routines.PgGetFunctionArguments();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_function_identity_arguments
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetFunctionIdentityArguments(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetFunctionIdentityArguments f = new test.generated.pg_catalog.routines.PgGetFunctionIdentityArguments();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_function_identity_arguments as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetFunctionIdentityArguments(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetFunctionIdentityArguments f = new test.generated.pg_catalog.routines.PgGetFunctionIdentityArguments();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_function_identity_arguments as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetFunctionIdentityArguments(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgGetFunctionIdentityArguments f = new test.generated.pg_catalog.routines.PgGetFunctionIdentityArguments();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_function_result
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetFunctionResult(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetFunctionResult f = new test.generated.pg_catalog.routines.PgGetFunctionResult();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_function_result as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetFunctionResult(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetFunctionResult f = new test.generated.pg_catalog.routines.PgGetFunctionResult();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_function_result as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetFunctionResult(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgGetFunctionResult f = new test.generated.pg_catalog.routines.PgGetFunctionResult();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_functiondef
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetFunctiondef(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetFunctiondef f = new test.generated.pg_catalog.routines.PgGetFunctiondef();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_functiondef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetFunctiondef(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetFunctiondef f = new test.generated.pg_catalog.routines.PgGetFunctiondef();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_functiondef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetFunctiondef(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgGetFunctiondef f = new test.generated.pg_catalog.routines.PgGetFunctiondef();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_indexdef
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetIndexdef1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetIndexdef1 f = new test.generated.pg_catalog.routines.PgGetIndexdef1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_indexdef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetIndexdef1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetIndexdef1 f = new test.generated.pg_catalog.routines.PgGetIndexdef1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_indexdef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetIndexdef1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgGetIndexdef1 f = new test.generated.pg_catalog.routines.PgGetIndexdef1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_indexdef
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetIndexdef2(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.PgGetIndexdef2 f = new test.generated.pg_catalog.routines.PgGetIndexdef2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_indexdef as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> pgGetIndexdef2(java.lang.Long __1, java.lang.Integer __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.PgGetIndexdef2 f = new test.generated.pg_catalog.routines.PgGetIndexdef2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_indexdef as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> pgGetIndexdef2(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Boolean> __3) {
		test.generated.pg_catalog.routines.PgGetIndexdef2 f = new test.generated.pg_catalog.routines.PgGetIndexdef2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_keywords
	 *
	 * @param word OUT parameter
	 * @param catcode OUT parameter
	 * @param catdesc OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.PgGetKeywords pgGetKeywords(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgGetKeywords p = new test.generated.pg_catalog.routines.PgGetKeywords();

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.pg_get_ruledef
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetRuledef2(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.PgGetRuledef2 f = new test.generated.pg_catalog.routines.PgGetRuledef2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_ruledef as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetRuledef2(java.lang.Long __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.PgGetRuledef2 f = new test.generated.pg_catalog.routines.PgGetRuledef2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_ruledef as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetRuledef2(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.PgGetRuledef2 f = new test.generated.pg_catalog.routines.PgGetRuledef2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_ruledef
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetRuledef1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetRuledef1 f = new test.generated.pg_catalog.routines.PgGetRuledef1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_ruledef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetRuledef1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetRuledef1 f = new test.generated.pg_catalog.routines.PgGetRuledef1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_ruledef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetRuledef1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgGetRuledef1 f = new test.generated.pg_catalog.routines.PgGetRuledef1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_serial_sequence
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetSerialSequence(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.PgGetSerialSequence f = new test.generated.pg_catalog.routines.PgGetSerialSequence();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_serial_sequence as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetSerialSequence(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.PgGetSerialSequence f = new test.generated.pg_catalog.routines.PgGetSerialSequence();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_serial_sequence as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetSerialSequence(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.PgGetSerialSequence f = new test.generated.pg_catalog.routines.PgGetSerialSequence();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_triggerdef
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetTriggerdef2(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.PgGetTriggerdef2 f = new test.generated.pg_catalog.routines.PgGetTriggerdef2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_triggerdef as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetTriggerdef2(java.lang.Long __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.PgGetTriggerdef2 f = new test.generated.pg_catalog.routines.PgGetTriggerdef2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_triggerdef as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetTriggerdef2(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.PgGetTriggerdef2 f = new test.generated.pg_catalog.routines.PgGetTriggerdef2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_triggerdef
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetTriggerdef1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetTriggerdef1 f = new test.generated.pg_catalog.routines.PgGetTriggerdef1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_triggerdef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetTriggerdef1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetTriggerdef1 f = new test.generated.pg_catalog.routines.PgGetTriggerdef1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_triggerdef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetTriggerdef1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgGetTriggerdef1 f = new test.generated.pg_catalog.routines.PgGetTriggerdef1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_userbyid
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetUserbyid(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetUserbyid f = new test.generated.pg_catalog.routines.PgGetUserbyid();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_userbyid as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetUserbyid(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetUserbyid f = new test.generated.pg_catalog.routines.PgGetUserbyid();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_userbyid as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetUserbyid(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgGetUserbyid f = new test.generated.pg_catalog.routines.PgGetUserbyid();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_viewdef
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetViewdef3(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.PgGetViewdef3 f = new test.generated.pg_catalog.routines.PgGetViewdef3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_viewdef as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetViewdef3(java.lang.String __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.PgGetViewdef3 f = new test.generated.pg_catalog.routines.PgGetViewdef3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_viewdef as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetViewdef3(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.PgGetViewdef3 f = new test.generated.pg_catalog.routines.PgGetViewdef3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_viewdef
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetViewdef1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.PgGetViewdef1 f = new test.generated.pg_catalog.routines.PgGetViewdef1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_viewdef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetViewdef1(java.lang.String __1) {
		test.generated.pg_catalog.routines.PgGetViewdef1 f = new test.generated.pg_catalog.routines.PgGetViewdef1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_viewdef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetViewdef1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.PgGetViewdef1 f = new test.generated.pg_catalog.routines.PgGetViewdef1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_viewdef
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetViewdef2(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetViewdef2 f = new test.generated.pg_catalog.routines.PgGetViewdef2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_viewdef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetViewdef2(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgGetViewdef2 f = new test.generated.pg_catalog.routines.PgGetViewdef2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_viewdef as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgGetViewdef2(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgGetViewdef2 f = new test.generated.pg_catalog.routines.PgGetViewdef2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_get_viewdef
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgGetViewdef4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.PgGetViewdef4 f = new test.generated.pg_catalog.routines.PgGetViewdef4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_get_viewdef as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetViewdef4(java.lang.Long __1, java.lang.Boolean __2) {
		test.generated.pg_catalog.routines.PgGetViewdef4 f = new test.generated.pg_catalog.routines.PgGetViewdef4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_get_viewdef as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> pgGetViewdef4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Boolean> __2) {
		test.generated.pg_catalog.routines.PgGetViewdef4 f = new test.generated.pg_catalog.routines.PgGetViewdef4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_has_role
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgHasRole1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.PgHasRole1 f = new test.generated.pg_catalog.routines.PgHasRole1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_has_role as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> pgHasRole1(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.PgHasRole1 f = new test.generated.pg_catalog.routines.PgHasRole1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_has_role as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> pgHasRole1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.PgHasRole1 f = new test.generated.pg_catalog.routines.PgHasRole1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_has_role
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgHasRole6(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.PgHasRole6 f = new test.generated.pg_catalog.routines.PgHasRole6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_has_role as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pgHasRole6(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.PgHasRole6 f = new test.generated.pg_catalog.routines.PgHasRole6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_has_role as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pgHasRole6(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.PgHasRole6 f = new test.generated.pg_catalog.routines.PgHasRole6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_has_role
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgHasRole5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.PgHasRole5 f = new test.generated.pg_catalog.routines.PgHasRole5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_has_role as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pgHasRole5(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.PgHasRole5 f = new test.generated.pg_catalog.routines.PgHasRole5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_has_role as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pgHasRole5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.PgHasRole5 f = new test.generated.pg_catalog.routines.PgHasRole5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_has_role
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgHasRole4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.PgHasRole4 f = new test.generated.pg_catalog.routines.PgHasRole4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_has_role as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> pgHasRole4(java.lang.Long __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.PgHasRole4 f = new test.generated.pg_catalog.routines.PgHasRole4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_has_role as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> pgHasRole4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.PgHasRole4 f = new test.generated.pg_catalog.routines.PgHasRole4();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_has_role
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgHasRole3(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.PgHasRole3 f = new test.generated.pg_catalog.routines.PgHasRole3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_has_role as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> pgHasRole3(java.lang.Long __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.PgHasRole3 f = new test.generated.pg_catalog.routines.PgHasRole3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_has_role as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> pgHasRole3(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.PgHasRole3 f = new test.generated.pg_catalog.routines.PgHasRole3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_has_role
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgHasRole2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.PgHasRole2 f = new test.generated.pg_catalog.routines.PgHasRole2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_has_role as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> pgHasRole2(java.lang.String __1, java.lang.Long __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.PgHasRole2 f = new test.generated.pg_catalog.routines.PgHasRole2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_has_role as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Boolean> pgHasRole2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.PgHasRole2 f = new test.generated.pg_catalog.routines.PgHasRole2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_indexes_size
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgIndexesSize(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgIndexesSize f = new test.generated.pg_catalog.routines.PgIndexesSize();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_indexes_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgIndexesSize(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgIndexesSize f = new test.generated.pg_catalog.routines.PgIndexesSize();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_indexes_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgIndexesSize(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PgIndexesSize f = new test.generated.pg_catalog.routines.PgIndexesSize();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_is_in_recovery
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgIsInRecovery(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgIsInRecovery f = new test.generated.pg_catalog.routines.PgIsInRecovery();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_is_in_recovery as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Boolean> pgIsInRecovery() {
		test.generated.pg_catalog.routines.PgIsInRecovery f = new test.generated.pg_catalog.routines.PgIsInRecovery();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_is_other_temp_schema
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgIsOtherTempSchema(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgIsOtherTempSchema f = new test.generated.pg_catalog.routines.PgIsOtherTempSchema();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_is_other_temp_schema as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgIsOtherTempSchema(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgIsOtherTempSchema f = new test.generated.pg_catalog.routines.PgIsOtherTempSchema();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_is_other_temp_schema as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgIsOtherTempSchema(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgIsOtherTempSchema f = new test.generated.pg_catalog.routines.PgIsOtherTempSchema();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_last_xlog_receive_location
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgLastXlogReceiveLocation(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgLastXlogReceiveLocation f = new test.generated.pg_catalog.routines.PgLastXlogReceiveLocation();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_last_xlog_receive_location as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> pgLastXlogReceiveLocation() {
		test.generated.pg_catalog.routines.PgLastXlogReceiveLocation f = new test.generated.pg_catalog.routines.PgLastXlogReceiveLocation();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_last_xlog_replay_location
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgLastXlogReplayLocation(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgLastXlogReplayLocation f = new test.generated.pg_catalog.routines.PgLastXlogReplayLocation();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_last_xlog_replay_location as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> pgLastXlogReplayLocation() {
		test.generated.pg_catalog.routines.PgLastXlogReplayLocation f = new test.generated.pg_catalog.routines.PgLastXlogReplayLocation();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_listening_channels
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgListeningChannels(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgListeningChannels f = new test.generated.pg_catalog.routines.PgListeningChannels();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_listening_channels as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> pgListeningChannels() {
		test.generated.pg_catalog.routines.PgListeningChannels f = new test.generated.pg_catalog.routines.PgListeningChannels();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_lock_status
	 *
	 * @param locktype OUT parameter
	 * @param database OUT parameter
	 * @param relation OUT parameter
	 * @param page OUT parameter
	 * @param tuple OUT parameter
	 * @param virtualxid OUT parameter
	 * @param transactionid OUT parameter
	 * @param classid OUT parameter
	 * @param objid OUT parameter
	 * @param objsubid OUT parameter
	 * @param virtualtransaction OUT parameter
	 * @param pid OUT parameter
	 * @param mode OUT parameter
	 * @param granted OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.PgLockStatus pgLockStatus(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgLockStatus p = new test.generated.pg_catalog.routines.PgLockStatus();

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.pg_ls_dir
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgLsDir(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.PgLsDir f = new test.generated.pg_catalog.routines.PgLsDir();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_ls_dir as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgLsDir(java.lang.String __1) {
		test.generated.pg_catalog.routines.PgLsDir f = new test.generated.pg_catalog.routines.PgLsDir();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_ls_dir as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgLsDir(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.PgLsDir f = new test.generated.pg_catalog.routines.PgLsDir();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_my_temp_schema
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgMyTempSchema(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgMyTempSchema f = new test.generated.pg_catalog.routines.PgMyTempSchema();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_my_temp_schema as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> pgMyTempSchema() {
		test.generated.pg_catalog.routines.PgMyTempSchema f = new test.generated.pg_catalog.routines.PgMyTempSchema();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_notify
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void pgNotify(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.PgNotify p = new test.generated.pg_catalog.routines.PgNotify();
		p.set__1(__1);
		p.set__2(__2);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.pg_opclass_is_visible
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgOpclassIsVisible(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgOpclassIsVisible f = new test.generated.pg_catalog.routines.PgOpclassIsVisible();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_opclass_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgOpclassIsVisible(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgOpclassIsVisible f = new test.generated.pg_catalog.routines.PgOpclassIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_opclass_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgOpclassIsVisible(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgOpclassIsVisible f = new test.generated.pg_catalog.routines.PgOpclassIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_operator_is_visible
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgOperatorIsVisible(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgOperatorIsVisible f = new test.generated.pg_catalog.routines.PgOperatorIsVisible();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_operator_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgOperatorIsVisible(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgOperatorIsVisible f = new test.generated.pg_catalog.routines.PgOperatorIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_operator_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgOperatorIsVisible(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgOperatorIsVisible f = new test.generated.pg_catalog.routines.PgOperatorIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_options_to_table
	 *
	 * @param optionsArray IN parameter
	 * @param optionName OUT parameter
	 * @param optionValue OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.PgOptionsToTable pgOptionsToTable(org.jooq.Configuration configuration, java.lang.String[] optionsArray) {
		test.generated.pg_catalog.routines.PgOptionsToTable p = new test.generated.pg_catalog.routines.PgOptionsToTable();
		p.setOptionsArray(optionsArray);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.pg_postmaster_start_time
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp pgPostmasterStartTime(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgPostmasterStartTime f = new test.generated.pg_catalog.routines.PgPostmasterStartTime();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_postmaster_start_time as a field
	 *
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgPostmasterStartTime() {
		test.generated.pg_catalog.routines.PgPostmasterStartTime f = new test.generated.pg_catalog.routines.PgPostmasterStartTime();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_prepared_statement
	 *
	 * @param name OUT parameter
	 * @param statement OUT parameter
	 * @param prepareTime OUT parameter
	 * @param parameterTypes OUT parameter
	 * @param fromSql OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.PgPreparedStatement pgPreparedStatement(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgPreparedStatement p = new test.generated.pg_catalog.routines.PgPreparedStatement();

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.pg_prepared_xact
	 *
	 * @param transaction OUT parameter
	 * @param gid OUT parameter
	 * @param prepared OUT parameter
	 * @param ownerid OUT parameter
	 * @param dbid OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.PgPreparedXact pgPreparedXact(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgPreparedXact p = new test.generated.pg_catalog.routines.PgPreparedXact();

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.pg_read_file
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgReadFile(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Long __2, java.lang.Long __3) {
		test.generated.pg_catalog.routines.PgReadFile f = new test.generated.pg_catalog.routines.PgReadFile();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_read_file as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> pgReadFile(java.lang.String __1, java.lang.Long __2, java.lang.Long __3) {
		test.generated.pg_catalog.routines.PgReadFile f = new test.generated.pg_catalog.routines.PgReadFile();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_read_file as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> pgReadFile(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Long> __3) {
		test.generated.pg_catalog.routines.PgReadFile f = new test.generated.pg_catalog.routines.PgReadFile();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_relation_filenode
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgRelationFilenode(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgRelationFilenode f = new test.generated.pg_catalog.routines.PgRelationFilenode();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_relation_filenode as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgRelationFilenode(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgRelationFilenode f = new test.generated.pg_catalog.routines.PgRelationFilenode();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_relation_filenode as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgRelationFilenode(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PgRelationFilenode f = new test.generated.pg_catalog.routines.PgRelationFilenode();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_relation_filepath
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgRelationFilepath(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgRelationFilepath f = new test.generated.pg_catalog.routines.PgRelationFilepath();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_relation_filepath as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgRelationFilepath(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgRelationFilepath f = new test.generated.pg_catalog.routines.PgRelationFilepath();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_relation_filepath as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgRelationFilepath(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PgRelationFilepath f = new test.generated.pg_catalog.routines.PgRelationFilepath();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_relation_size
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgRelationSize1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgRelationSize1 f = new test.generated.pg_catalog.routines.PgRelationSize1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_relation_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgRelationSize1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgRelationSize1 f = new test.generated.pg_catalog.routines.PgRelationSize1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_relation_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgRelationSize1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PgRelationSize1 f = new test.generated.pg_catalog.routines.PgRelationSize1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_relation_size
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgRelationSize2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.PgRelationSize2 f = new test.generated.pg_catalog.routines.PgRelationSize2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_relation_size as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> pgRelationSize2(java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.PgRelationSize2 f = new test.generated.pg_catalog.routines.PgRelationSize2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_relation_size as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> pgRelationSize2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.PgRelationSize2 f = new test.generated.pg_catalog.routines.PgRelationSize2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_reload_conf
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgReloadConf(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgReloadConf f = new test.generated.pg_catalog.routines.PgReloadConf();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_reload_conf as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Boolean> pgReloadConf() {
		test.generated.pg_catalog.routines.PgReloadConf f = new test.generated.pg_catalog.routines.PgReloadConf();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_rotate_logfile
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgRotateLogfile(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgRotateLogfile f = new test.generated.pg_catalog.routines.PgRotateLogfile();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_rotate_logfile as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Boolean> pgRotateLogfile() {
		test.generated.pg_catalog.routines.PgRotateLogfile f = new test.generated.pg_catalog.routines.PgRotateLogfile();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_show_all_settings
	 *
	 * @param name OUT parameter
	 * @param setting OUT parameter
	 * @param unit OUT parameter
	 * @param category OUT parameter
	 * @param shortDesc OUT parameter
	 * @param extraDesc OUT parameter
	 * @param context OUT parameter
	 * @param vartype OUT parameter
	 * @param source OUT parameter
	 * @param minVal OUT parameter
	 * @param maxVal OUT parameter
	 * @param enumvals OUT parameter
	 * @param bootVal OUT parameter
	 * @param resetVal OUT parameter
	 * @param sourcefile OUT parameter
	 * @param sourceline OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.PgShowAllSettings pgShowAllSettings(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgShowAllSettings p = new test.generated.pg_catalog.routines.PgShowAllSettings();

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.pg_size_pretty
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgSizePretty(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgSizePretty f = new test.generated.pg_catalog.routines.PgSizePretty();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_size_pretty as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgSizePretty(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgSizePretty f = new test.generated.pg_catalog.routines.PgSizePretty();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_size_pretty as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgSizePretty(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgSizePretty f = new test.generated.pg_catalog.routines.PgSizePretty();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_sleep
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void pgSleep(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.PgSleep p = new test.generated.pg_catalog.routines.PgSleep();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.pg_start_backup
	 *
	 * @param label
	 * @param fast
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgStartBackup(org.jooq.Configuration configuration, java.lang.String label, java.lang.Boolean fast) {
		test.generated.pg_catalog.routines.PgStartBackup f = new test.generated.pg_catalog.routines.PgStartBackup();
		f.setLabel(label);
		f.setFast(fast);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_start_backup as a field
	 *
	 * @param label
	 * @param fast
	 */
	public static org.jooq.Field<java.lang.String> pgStartBackup(java.lang.String label, java.lang.Boolean fast) {
		test.generated.pg_catalog.routines.PgStartBackup f = new test.generated.pg_catalog.routines.PgStartBackup();
		f.setLabel(label);
		f.setFast(fast);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_start_backup as a field
	 *
	 * @param label
	 * @param fast
	 */
	public static org.jooq.Field<java.lang.String> pgStartBackup(org.jooq.Field<java.lang.String> label, org.jooq.Field<java.lang.Boolean> fast) {
		test.generated.pg_catalog.routines.PgStartBackup f = new test.generated.pg_catalog.routines.PgStartBackup();
		f.setLabel(label);
		f.setFast(fast);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_clear_snapshot
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void pgStatClearSnapshot(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgStatClearSnapshot p = new test.generated.pg_catalog.routines.PgStatClearSnapshot();

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.pg_stat_file
	 *
	 * @param filename IN parameter
	 * @param size OUT parameter
	 * @param access OUT parameter
	 * @param modification OUT parameter
	 * @param change OUT parameter
	 * @param creation OUT parameter
	 * @param isdir OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.PgStatFile pgStatFile(org.jooq.Configuration configuration, java.lang.String filename) {
		test.generated.pg_catalog.routines.PgStatFile p = new test.generated.pg_catalog.routines.PgStatFile();
		p.setFilename(filename);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.pg_stat_get_activity
	 *
	 * @param pid IN parameter
	 * @param datid OUT parameter
	 * @param procpid OUT parameter
	 * @param usesysid OUT parameter
	 * @param applicationName OUT parameter
	 * @param currentQuery OUT parameter
	 * @param waiting OUT parameter
	 * @param xactStart OUT parameter
	 * @param queryStart OUT parameter
	 * @param backendStart OUT parameter
	 * @param clientAddr OUT parameter
	 * @param clientPort OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.PgStatGetActivity pgStatGetActivity(org.jooq.Configuration configuration, java.lang.Integer pid) {
		test.generated.pg_catalog.routines.PgStatGetActivity p = new test.generated.pg_catalog.routines.PgStatGetActivity();
		p.setPid(pid);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.pg_stat_get_backend_activity
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgStatGetBackendActivity(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendActivity f = new test.generated.pg_catalog.routines.PgStatGetBackendActivity();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_activity as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgStatGetBackendActivity(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendActivity f = new test.generated.pg_catalog.routines.PgStatGetBackendActivity();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_activity as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgStatGetBackendActivity(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendActivity f = new test.generated.pg_catalog.routines.PgStatGetBackendActivity();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_backend_activity_start
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp pgStatGetBackendActivityStart(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendActivityStart f = new test.generated.pg_catalog.routines.PgStatGetBackendActivityStart();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_activity_start as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetBackendActivityStart(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendActivityStart f = new test.generated.pg_catalog.routines.PgStatGetBackendActivityStart();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_activity_start as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetBackendActivityStart(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendActivityStart f = new test.generated.pg_catalog.routines.PgStatGetBackendActivityStart();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_backend_client_addr
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pgStatGetBackendClientAddr(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendClientAddr f = new test.generated.pg_catalog.routines.PgStatGetBackendClientAddr();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_client_addr as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pgStatGetBackendClientAddr(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendClientAddr f = new test.generated.pg_catalog.routines.PgStatGetBackendClientAddr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_client_addr as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pgStatGetBackendClientAddr(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendClientAddr f = new test.generated.pg_catalog.routines.PgStatGetBackendClientAddr();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_backend_client_port
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer pgStatGetBackendClientPort(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendClientPort f = new test.generated.pg_catalog.routines.PgStatGetBackendClientPort();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_client_port as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pgStatGetBackendClientPort(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendClientPort f = new test.generated.pg_catalog.routines.PgStatGetBackendClientPort();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_client_port as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pgStatGetBackendClientPort(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendClientPort f = new test.generated.pg_catalog.routines.PgStatGetBackendClientPort();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_backend_dbid
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetBackendDbid(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendDbid f = new test.generated.pg_catalog.routines.PgStatGetBackendDbid();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_dbid as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBackendDbid(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendDbid f = new test.generated.pg_catalog.routines.PgStatGetBackendDbid();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_dbid as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBackendDbid(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendDbid f = new test.generated.pg_catalog.routines.PgStatGetBackendDbid();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_backend_idset
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer pgStatGetBackendIdset(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgStatGetBackendIdset f = new test.generated.pg_catalog.routines.PgStatGetBackendIdset();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_idset as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Integer> pgStatGetBackendIdset() {
		test.generated.pg_catalog.routines.PgStatGetBackendIdset f = new test.generated.pg_catalog.routines.PgStatGetBackendIdset();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_backend_pid
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer pgStatGetBackendPid(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendPid f = new test.generated.pg_catalog.routines.PgStatGetBackendPid();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_pid as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pgStatGetBackendPid(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendPid f = new test.generated.pg_catalog.routines.PgStatGetBackendPid();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_pid as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pgStatGetBackendPid(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendPid f = new test.generated.pg_catalog.routines.PgStatGetBackendPid();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_backend_start
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp pgStatGetBackendStart(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendStart f = new test.generated.pg_catalog.routines.PgStatGetBackendStart();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_start as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetBackendStart(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendStart f = new test.generated.pg_catalog.routines.PgStatGetBackendStart();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_start as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetBackendStart(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendStart f = new test.generated.pg_catalog.routines.PgStatGetBackendStart();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_backend_userid
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetBackendUserid(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendUserid f = new test.generated.pg_catalog.routines.PgStatGetBackendUserid();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_userid as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBackendUserid(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendUserid f = new test.generated.pg_catalog.routines.PgStatGetBackendUserid();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_userid as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBackendUserid(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendUserid f = new test.generated.pg_catalog.routines.PgStatGetBackendUserid();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_backend_waiting
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgStatGetBackendWaiting(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendWaiting f = new test.generated.pg_catalog.routines.PgStatGetBackendWaiting();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_waiting as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgStatGetBackendWaiting(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendWaiting f = new test.generated.pg_catalog.routines.PgStatGetBackendWaiting();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_waiting as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgStatGetBackendWaiting(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendWaiting f = new test.generated.pg_catalog.routines.PgStatGetBackendWaiting();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_backend_xact_start
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp pgStatGetBackendXactStart(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendXactStart f = new test.generated.pg_catalog.routines.PgStatGetBackendXactStart();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_xact_start as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetBackendXactStart(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendXactStart f = new test.generated.pg_catalog.routines.PgStatGetBackendXactStart();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_backend_xact_start as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetBackendXactStart(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgStatGetBackendXactStart f = new test.generated.pg_catalog.routines.PgStatGetBackendXactStart();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_bgwriter_buf_written_checkpoints
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetBgwriterBufWrittenCheckpoints(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgStatGetBgwriterBufWrittenCheckpoints f = new test.generated.pg_catalog.routines.PgStatGetBgwriterBufWrittenCheckpoints();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_bgwriter_buf_written_checkpoints as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBgwriterBufWrittenCheckpoints() {
		test.generated.pg_catalog.routines.PgStatGetBgwriterBufWrittenCheckpoints f = new test.generated.pg_catalog.routines.PgStatGetBgwriterBufWrittenCheckpoints();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_bgwriter_buf_written_clean
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetBgwriterBufWrittenClean(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgStatGetBgwriterBufWrittenClean f = new test.generated.pg_catalog.routines.PgStatGetBgwriterBufWrittenClean();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_bgwriter_buf_written_clean as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBgwriterBufWrittenClean() {
		test.generated.pg_catalog.routines.PgStatGetBgwriterBufWrittenClean f = new test.generated.pg_catalog.routines.PgStatGetBgwriterBufWrittenClean();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_bgwriter_maxwritten_clean
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetBgwriterMaxwrittenClean(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgStatGetBgwriterMaxwrittenClean f = new test.generated.pg_catalog.routines.PgStatGetBgwriterMaxwrittenClean();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_bgwriter_maxwritten_clean as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBgwriterMaxwrittenClean() {
		test.generated.pg_catalog.routines.PgStatGetBgwriterMaxwrittenClean f = new test.generated.pg_catalog.routines.PgStatGetBgwriterMaxwrittenClean();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_bgwriter_requested_checkpoints
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetBgwriterRequestedCheckpoints(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgStatGetBgwriterRequestedCheckpoints f = new test.generated.pg_catalog.routines.PgStatGetBgwriterRequestedCheckpoints();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_bgwriter_requested_checkpoints as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBgwriterRequestedCheckpoints() {
		test.generated.pg_catalog.routines.PgStatGetBgwriterRequestedCheckpoints f = new test.generated.pg_catalog.routines.PgStatGetBgwriterRequestedCheckpoints();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_bgwriter_timed_checkpoints
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetBgwriterTimedCheckpoints(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgStatGetBgwriterTimedCheckpoints f = new test.generated.pg_catalog.routines.PgStatGetBgwriterTimedCheckpoints();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_bgwriter_timed_checkpoints as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBgwriterTimedCheckpoints() {
		test.generated.pg_catalog.routines.PgStatGetBgwriterTimedCheckpoints f = new test.generated.pg_catalog.routines.PgStatGetBgwriterTimedCheckpoints();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_blocks_fetched
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetBlocksFetched(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetBlocksFetched f = new test.generated.pg_catalog.routines.PgStatGetBlocksFetched();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_blocks_fetched as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBlocksFetched(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetBlocksFetched f = new test.generated.pg_catalog.routines.PgStatGetBlocksFetched();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_blocks_fetched as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBlocksFetched(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetBlocksFetched f = new test.generated.pg_catalog.routines.PgStatGetBlocksFetched();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_blocks_hit
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetBlocksHit(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetBlocksHit f = new test.generated.pg_catalog.routines.PgStatGetBlocksHit();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_blocks_hit as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBlocksHit(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetBlocksHit f = new test.generated.pg_catalog.routines.PgStatGetBlocksHit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_blocks_hit as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBlocksHit(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetBlocksHit f = new test.generated.pg_catalog.routines.PgStatGetBlocksHit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_buf_alloc
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetBufAlloc(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgStatGetBufAlloc f = new test.generated.pg_catalog.routines.PgStatGetBufAlloc();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_buf_alloc as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBufAlloc() {
		test.generated.pg_catalog.routines.PgStatGetBufAlloc f = new test.generated.pg_catalog.routines.PgStatGetBufAlloc();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_buf_written_backend
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetBufWrittenBackend(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgStatGetBufWrittenBackend f = new test.generated.pg_catalog.routines.PgStatGetBufWrittenBackend();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_buf_written_backend as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetBufWrittenBackend() {
		test.generated.pg_catalog.routines.PgStatGetBufWrittenBackend f = new test.generated.pg_catalog.routines.PgStatGetBufWrittenBackend();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_db_blocks_fetched
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetDbBlocksFetched(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbBlocksFetched f = new test.generated.pg_catalog.routines.PgStatGetDbBlocksFetched();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_blocks_fetched as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbBlocksFetched(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbBlocksFetched f = new test.generated.pg_catalog.routines.PgStatGetDbBlocksFetched();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_blocks_fetched as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbBlocksFetched(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetDbBlocksFetched f = new test.generated.pg_catalog.routines.PgStatGetDbBlocksFetched();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_db_blocks_hit
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetDbBlocksHit(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbBlocksHit f = new test.generated.pg_catalog.routines.PgStatGetDbBlocksHit();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_blocks_hit as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbBlocksHit(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbBlocksHit f = new test.generated.pg_catalog.routines.PgStatGetDbBlocksHit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_blocks_hit as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbBlocksHit(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetDbBlocksHit f = new test.generated.pg_catalog.routines.PgStatGetDbBlocksHit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_db_numbackends
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer pgStatGetDbNumbackends(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbNumbackends f = new test.generated.pg_catalog.routines.PgStatGetDbNumbackends();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_numbackends as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pgStatGetDbNumbackends(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbNumbackends f = new test.generated.pg_catalog.routines.PgStatGetDbNumbackends();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_numbackends as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> pgStatGetDbNumbackends(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetDbNumbackends f = new test.generated.pg_catalog.routines.PgStatGetDbNumbackends();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_db_tuples_deleted
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetDbTuplesDeleted(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesDeleted f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesDeleted();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_tuples_deleted as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbTuplesDeleted(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesDeleted f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesDeleted();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_tuples_deleted as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbTuplesDeleted(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesDeleted f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesDeleted();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_db_tuples_fetched
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetDbTuplesFetched(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesFetched f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesFetched();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_tuples_fetched as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbTuplesFetched(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesFetched f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesFetched();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_tuples_fetched as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbTuplesFetched(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesFetched f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesFetched();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_db_tuples_inserted
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetDbTuplesInserted(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesInserted f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesInserted();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_tuples_inserted as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbTuplesInserted(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesInserted f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesInserted();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_tuples_inserted as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbTuplesInserted(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesInserted f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesInserted();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_db_tuples_returned
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetDbTuplesReturned(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesReturned f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesReturned();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_tuples_returned as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbTuplesReturned(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesReturned f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesReturned();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_tuples_returned as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbTuplesReturned(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesReturned f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesReturned();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_db_tuples_updated
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetDbTuplesUpdated(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesUpdated f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesUpdated();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_tuples_updated as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbTuplesUpdated(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesUpdated f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesUpdated();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_tuples_updated as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbTuplesUpdated(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetDbTuplesUpdated f = new test.generated.pg_catalog.routines.PgStatGetDbTuplesUpdated();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_db_xact_commit
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetDbXactCommit(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbXactCommit f = new test.generated.pg_catalog.routines.PgStatGetDbXactCommit();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_xact_commit as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbXactCommit(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbXactCommit f = new test.generated.pg_catalog.routines.PgStatGetDbXactCommit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_xact_commit as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbXactCommit(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetDbXactCommit f = new test.generated.pg_catalog.routines.PgStatGetDbXactCommit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_db_xact_rollback
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetDbXactRollback(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbXactRollback f = new test.generated.pg_catalog.routines.PgStatGetDbXactRollback();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_xact_rollback as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbXactRollback(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDbXactRollback f = new test.generated.pg_catalog.routines.PgStatGetDbXactRollback();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_db_xact_rollback as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDbXactRollback(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetDbXactRollback f = new test.generated.pg_catalog.routines.PgStatGetDbXactRollback();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_dead_tuples
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetDeadTuples(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDeadTuples f = new test.generated.pg_catalog.routines.PgStatGetDeadTuples();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_dead_tuples as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDeadTuples(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetDeadTuples f = new test.generated.pg_catalog.routines.PgStatGetDeadTuples();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_dead_tuples as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetDeadTuples(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetDeadTuples f = new test.generated.pg_catalog.routines.PgStatGetDeadTuples();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_function_calls
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetFunctionCalls(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetFunctionCalls f = new test.generated.pg_catalog.routines.PgStatGetFunctionCalls();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_function_calls as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetFunctionCalls(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetFunctionCalls f = new test.generated.pg_catalog.routines.PgStatGetFunctionCalls();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_function_calls as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetFunctionCalls(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetFunctionCalls f = new test.generated.pg_catalog.routines.PgStatGetFunctionCalls();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_function_self_time
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetFunctionSelfTime(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetFunctionSelfTime f = new test.generated.pg_catalog.routines.PgStatGetFunctionSelfTime();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_function_self_time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetFunctionSelfTime(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetFunctionSelfTime f = new test.generated.pg_catalog.routines.PgStatGetFunctionSelfTime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_function_self_time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetFunctionSelfTime(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetFunctionSelfTime f = new test.generated.pg_catalog.routines.PgStatGetFunctionSelfTime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_function_time
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetFunctionTime(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetFunctionTime f = new test.generated.pg_catalog.routines.PgStatGetFunctionTime();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_function_time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetFunctionTime(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetFunctionTime f = new test.generated.pg_catalog.routines.PgStatGetFunctionTime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_function_time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetFunctionTime(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetFunctionTime f = new test.generated.pg_catalog.routines.PgStatGetFunctionTime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_last_analyze_time
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp pgStatGetLastAnalyzeTime(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetLastAnalyzeTime f = new test.generated.pg_catalog.routines.PgStatGetLastAnalyzeTime();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_last_analyze_time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetLastAnalyzeTime(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetLastAnalyzeTime f = new test.generated.pg_catalog.routines.PgStatGetLastAnalyzeTime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_last_analyze_time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetLastAnalyzeTime(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetLastAnalyzeTime f = new test.generated.pg_catalog.routines.PgStatGetLastAnalyzeTime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_last_autoanalyze_time
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp pgStatGetLastAutoanalyzeTime(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetLastAutoanalyzeTime f = new test.generated.pg_catalog.routines.PgStatGetLastAutoanalyzeTime();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_last_autoanalyze_time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetLastAutoanalyzeTime(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetLastAutoanalyzeTime f = new test.generated.pg_catalog.routines.PgStatGetLastAutoanalyzeTime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_last_autoanalyze_time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetLastAutoanalyzeTime(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetLastAutoanalyzeTime f = new test.generated.pg_catalog.routines.PgStatGetLastAutoanalyzeTime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_last_autovacuum_time
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp pgStatGetLastAutovacuumTime(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetLastAutovacuumTime f = new test.generated.pg_catalog.routines.PgStatGetLastAutovacuumTime();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_last_autovacuum_time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetLastAutovacuumTime(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetLastAutovacuumTime f = new test.generated.pg_catalog.routines.PgStatGetLastAutovacuumTime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_last_autovacuum_time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetLastAutovacuumTime(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetLastAutovacuumTime f = new test.generated.pg_catalog.routines.PgStatGetLastAutovacuumTime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_last_vacuum_time
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp pgStatGetLastVacuumTime(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetLastVacuumTime f = new test.generated.pg_catalog.routines.PgStatGetLastVacuumTime();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_last_vacuum_time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetLastVacuumTime(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetLastVacuumTime f = new test.generated.pg_catalog.routines.PgStatGetLastVacuumTime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_last_vacuum_time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> pgStatGetLastVacuumTime(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetLastVacuumTime f = new test.generated.pg_catalog.routines.PgStatGetLastVacuumTime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_live_tuples
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetLiveTuples(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetLiveTuples f = new test.generated.pg_catalog.routines.PgStatGetLiveTuples();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_live_tuples as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetLiveTuples(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetLiveTuples f = new test.generated.pg_catalog.routines.PgStatGetLiveTuples();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_live_tuples as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetLiveTuples(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetLiveTuples f = new test.generated.pg_catalog.routines.PgStatGetLiveTuples();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_numscans
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetNumscans(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetNumscans f = new test.generated.pg_catalog.routines.PgStatGetNumscans();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_numscans as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetNumscans(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetNumscans f = new test.generated.pg_catalog.routines.PgStatGetNumscans();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_numscans as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetNumscans(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetNumscans f = new test.generated.pg_catalog.routines.PgStatGetNumscans();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_tuples_deleted
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetTuplesDeleted(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesDeleted f = new test.generated.pg_catalog.routines.PgStatGetTuplesDeleted();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_tuples_deleted as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetTuplesDeleted(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesDeleted f = new test.generated.pg_catalog.routines.PgStatGetTuplesDeleted();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_tuples_deleted as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetTuplesDeleted(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesDeleted f = new test.generated.pg_catalog.routines.PgStatGetTuplesDeleted();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_tuples_fetched
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetTuplesFetched(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesFetched f = new test.generated.pg_catalog.routines.PgStatGetTuplesFetched();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_tuples_fetched as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetTuplesFetched(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesFetched f = new test.generated.pg_catalog.routines.PgStatGetTuplesFetched();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_tuples_fetched as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetTuplesFetched(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesFetched f = new test.generated.pg_catalog.routines.PgStatGetTuplesFetched();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_tuples_hot_updated
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetTuplesHotUpdated(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesHotUpdated f = new test.generated.pg_catalog.routines.PgStatGetTuplesHotUpdated();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_tuples_hot_updated as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetTuplesHotUpdated(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesHotUpdated f = new test.generated.pg_catalog.routines.PgStatGetTuplesHotUpdated();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_tuples_hot_updated as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetTuplesHotUpdated(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesHotUpdated f = new test.generated.pg_catalog.routines.PgStatGetTuplesHotUpdated();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_tuples_inserted
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetTuplesInserted(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesInserted f = new test.generated.pg_catalog.routines.PgStatGetTuplesInserted();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_tuples_inserted as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetTuplesInserted(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesInserted f = new test.generated.pg_catalog.routines.PgStatGetTuplesInserted();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_tuples_inserted as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetTuplesInserted(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesInserted f = new test.generated.pg_catalog.routines.PgStatGetTuplesInserted();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_tuples_returned
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetTuplesReturned(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesReturned f = new test.generated.pg_catalog.routines.PgStatGetTuplesReturned();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_tuples_returned as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetTuplesReturned(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesReturned f = new test.generated.pg_catalog.routines.PgStatGetTuplesReturned();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_tuples_returned as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetTuplesReturned(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesReturned f = new test.generated.pg_catalog.routines.PgStatGetTuplesReturned();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_get_tuples_updated
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgStatGetTuplesUpdated(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesUpdated f = new test.generated.pg_catalog.routines.PgStatGetTuplesUpdated();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stat_get_tuples_updated as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetTuplesUpdated(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesUpdated f = new test.generated.pg_catalog.routines.PgStatGetTuplesUpdated();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_stat_get_tuples_updated as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgStatGetTuplesUpdated(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgStatGetTuplesUpdated f = new test.generated.pg_catalog.routines.PgStatGetTuplesUpdated();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_stat_reset
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void pgStatReset(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgStatReset p = new test.generated.pg_catalog.routines.PgStatReset();

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.pg_stat_reset_shared
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void pgStatResetShared(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.PgStatResetShared p = new test.generated.pg_catalog.routines.PgStatResetShared();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.pg_stat_reset_single_function_counters
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void pgStatResetSingleFunctionCounters(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatResetSingleFunctionCounters p = new test.generated.pg_catalog.routines.PgStatResetSingleFunctionCounters();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.pg_stat_reset_single_table_counters
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void pgStatResetSingleTableCounters(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgStatResetSingleTableCounters p = new test.generated.pg_catalog.routines.PgStatResetSingleTableCounters();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.pg_stop_backup
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgStopBackup(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgStopBackup f = new test.generated.pg_catalog.routines.PgStopBackup();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_stop_backup as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> pgStopBackup() {
		test.generated.pg_catalog.routines.PgStopBackup f = new test.generated.pg_catalog.routines.PgStopBackup();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_switch_xlog
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgSwitchXlog(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgSwitchXlog f = new test.generated.pg_catalog.routines.PgSwitchXlog();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_switch_xlog as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> pgSwitchXlog() {
		test.generated.pg_catalog.routines.PgSwitchXlog f = new test.generated.pg_catalog.routines.PgSwitchXlog();

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_table_is_visible
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgTableIsVisible(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTableIsVisible f = new test.generated.pg_catalog.routines.PgTableIsVisible();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_table_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTableIsVisible(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTableIsVisible f = new test.generated.pg_catalog.routines.PgTableIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_table_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTableIsVisible(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgTableIsVisible f = new test.generated.pg_catalog.routines.PgTableIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_table_size
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgTableSize(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgTableSize f = new test.generated.pg_catalog.routines.PgTableSize();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_table_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgTableSize(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgTableSize f = new test.generated.pg_catalog.routines.PgTableSize();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_table_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgTableSize(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PgTableSize f = new test.generated.pg_catalog.routines.PgTableSize();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_tablespace_databases
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgTablespaceDatabases(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTablespaceDatabases f = new test.generated.pg_catalog.routines.PgTablespaceDatabases();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_tablespace_databases as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgTablespaceDatabases(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTablespaceDatabases f = new test.generated.pg_catalog.routines.PgTablespaceDatabases();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_tablespace_databases as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgTablespaceDatabases(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgTablespaceDatabases f = new test.generated.pg_catalog.routines.PgTablespaceDatabases();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_tablespace_size
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgTablespaceSize1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTablespaceSize1 f = new test.generated.pg_catalog.routines.PgTablespaceSize1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_tablespace_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgTablespaceSize1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTablespaceSize1 f = new test.generated.pg_catalog.routines.PgTablespaceSize1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_tablespace_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgTablespaceSize1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgTablespaceSize1 f = new test.generated.pg_catalog.routines.PgTablespaceSize1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_tablespace_size
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgTablespaceSize2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.PgTablespaceSize2 f = new test.generated.pg_catalog.routines.PgTablespaceSize2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_tablespace_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgTablespaceSize2(java.lang.String __1) {
		test.generated.pg_catalog.routines.PgTablespaceSize2 f = new test.generated.pg_catalog.routines.PgTablespaceSize2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_tablespace_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgTablespaceSize2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.PgTablespaceSize2 f = new test.generated.pg_catalog.routines.PgTablespaceSize2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_terminate_backend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgTerminateBackend(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgTerminateBackend f = new test.generated.pg_catalog.routines.PgTerminateBackend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_terminate_backend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTerminateBackend(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.PgTerminateBackend f = new test.generated.pg_catalog.routines.PgTerminateBackend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_terminate_backend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTerminateBackend(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.PgTerminateBackend f = new test.generated.pg_catalog.routines.PgTerminateBackend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_timezone_abbrevs
	 *
	 * @param abbrev OUT parameter
	 * @param utcOffset OUT parameter
	 * @param isDst OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.PgTimezoneAbbrevs pgTimezoneAbbrevs(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgTimezoneAbbrevs p = new test.generated.pg_catalog.routines.PgTimezoneAbbrevs();

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.pg_timezone_names
	 *
	 * @param name OUT parameter
	 * @param abbrev OUT parameter
	 * @param utcOffset OUT parameter
	 * @param isDst OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.PgTimezoneNames pgTimezoneNames(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PgTimezoneNames p = new test.generated.pg_catalog.routines.PgTimezoneNames();

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.pg_total_relation_size
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long pgTotalRelationSize(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgTotalRelationSize f = new test.generated.pg_catalog.routines.PgTotalRelationSize();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_total_relation_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgTotalRelationSize(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgTotalRelationSize f = new test.generated.pg_catalog.routines.PgTotalRelationSize();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_total_relation_size as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> pgTotalRelationSize(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PgTotalRelationSize f = new test.generated.pg_catalog.routines.PgTotalRelationSize();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_try_advisory_lock
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgTryAdvisoryLock1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTryAdvisoryLock1 f = new test.generated.pg_catalog.routines.PgTryAdvisoryLock1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_try_advisory_lock as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTryAdvisoryLock1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTryAdvisoryLock1 f = new test.generated.pg_catalog.routines.PgTryAdvisoryLock1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_try_advisory_lock as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTryAdvisoryLock1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgTryAdvisoryLock1 f = new test.generated.pg_catalog.routines.PgTryAdvisoryLock1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_try_advisory_lock
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgTryAdvisoryLock2(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.PgTryAdvisoryLock2 f = new test.generated.pg_catalog.routines.PgTryAdvisoryLock2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_try_advisory_lock as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTryAdvisoryLock2(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.PgTryAdvisoryLock2 f = new test.generated.pg_catalog.routines.PgTryAdvisoryLock2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_try_advisory_lock as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTryAdvisoryLock2(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.PgTryAdvisoryLock2 f = new test.generated.pg_catalog.routines.PgTryAdvisoryLock2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_try_advisory_lock_shared
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgTryAdvisoryLockShared1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTryAdvisoryLockShared1 f = new test.generated.pg_catalog.routines.PgTryAdvisoryLockShared1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_try_advisory_lock_shared as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTryAdvisoryLockShared1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTryAdvisoryLockShared1 f = new test.generated.pg_catalog.routines.PgTryAdvisoryLockShared1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_try_advisory_lock_shared as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTryAdvisoryLockShared1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgTryAdvisoryLockShared1 f = new test.generated.pg_catalog.routines.PgTryAdvisoryLockShared1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_try_advisory_lock_shared
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgTryAdvisoryLockShared2(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.PgTryAdvisoryLockShared2 f = new test.generated.pg_catalog.routines.PgTryAdvisoryLockShared2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_try_advisory_lock_shared as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTryAdvisoryLockShared2(java.lang.Integer __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.PgTryAdvisoryLockShared2 f = new test.generated.pg_catalog.routines.PgTryAdvisoryLockShared2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_try_advisory_lock_shared as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTryAdvisoryLockShared2(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.PgTryAdvisoryLockShared2 f = new test.generated.pg_catalog.routines.PgTryAdvisoryLockShared2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_ts_config_is_visible
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgTsConfigIsVisible(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTsConfigIsVisible f = new test.generated.pg_catalog.routines.PgTsConfigIsVisible();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_ts_config_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTsConfigIsVisible(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTsConfigIsVisible f = new test.generated.pg_catalog.routines.PgTsConfigIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_ts_config_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTsConfigIsVisible(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgTsConfigIsVisible f = new test.generated.pg_catalog.routines.PgTsConfigIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_ts_dict_is_visible
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgTsDictIsVisible(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTsDictIsVisible f = new test.generated.pg_catalog.routines.PgTsDictIsVisible();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_ts_dict_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTsDictIsVisible(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTsDictIsVisible f = new test.generated.pg_catalog.routines.PgTsDictIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_ts_dict_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTsDictIsVisible(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgTsDictIsVisible f = new test.generated.pg_catalog.routines.PgTsDictIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_ts_parser_is_visible
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgTsParserIsVisible(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTsParserIsVisible f = new test.generated.pg_catalog.routines.PgTsParserIsVisible();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_ts_parser_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTsParserIsVisible(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTsParserIsVisible f = new test.generated.pg_catalog.routines.PgTsParserIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_ts_parser_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTsParserIsVisible(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgTsParserIsVisible f = new test.generated.pg_catalog.routines.PgTsParserIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_ts_template_is_visible
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgTsTemplateIsVisible(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTsTemplateIsVisible f = new test.generated.pg_catalog.routines.PgTsTemplateIsVisible();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_ts_template_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTsTemplateIsVisible(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTsTemplateIsVisible f = new test.generated.pg_catalog.routines.PgTsTemplateIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_ts_template_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTsTemplateIsVisible(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgTsTemplateIsVisible f = new test.generated.pg_catalog.routines.PgTsTemplateIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_type_is_visible
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pgTypeIsVisible(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTypeIsVisible f = new test.generated.pg_catalog.routines.PgTypeIsVisible();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_type_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTypeIsVisible(java.lang.Long __1) {
		test.generated.pg_catalog.routines.PgTypeIsVisible f = new test.generated.pg_catalog.routines.PgTypeIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_type_is_visible as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> pgTypeIsVisible(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.PgTypeIsVisible f = new test.generated.pg_catalog.routines.PgTypeIsVisible();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_typeof
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pgTypeof(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgTypeof f = new test.generated.pg_catalog.routines.PgTypeof();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_typeof as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pgTypeof(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PgTypeof f = new test.generated.pg_catalog.routines.PgTypeof();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_typeof as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pgTypeof(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PgTypeof f = new test.generated.pg_catalog.routines.PgTypeof();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_xlogfile_name
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String pgXlogfileName(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.PgXlogfileName f = new test.generated.pg_catalog.routines.PgXlogfileName();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pg_xlogfile_name as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgXlogfileName(java.lang.String __1) {
		test.generated.pg_catalog.routines.PgXlogfileName f = new test.generated.pg_catalog.routines.PgXlogfileName();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pg_xlogfile_name as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> pgXlogfileName(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.PgXlogfileName f = new test.generated.pg_catalog.routines.PgXlogfileName();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pg_xlogfile_name_offset
	 *
	 * @param walLocation IN parameter
	 * @param fileName OUT parameter
	 * @param fileOffset OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.PgXlogfileNameOffset pgXlogfileNameOffset(org.jooq.Configuration configuration, java.lang.String walLocation) {
		test.generated.pg_catalog.routines.PgXlogfileNameOffset p = new test.generated.pg_catalog.routines.PgXlogfileNameOffset();
		p.setWalLocation(walLocation);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.pi
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double pi(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.Pi f = new test.generated.pg_catalog.routines.Pi();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pi as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Double> pi() {
		test.generated.pg_catalog.routines.Pi f = new test.generated.pg_catalog.routines.Pi();

		return f.asField();
	}

	/**
	 * Call pg_catalog.plainto_tsquery
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object plaintoTsquery1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.PlaintoTsquery1 f = new test.generated.pg_catalog.routines.PlaintoTsquery1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.plainto_tsquery as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> plaintoTsquery1(java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.PlaintoTsquery1 f = new test.generated.pg_catalog.routines.PlaintoTsquery1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.plainto_tsquery as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> plaintoTsquery1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.PlaintoTsquery1 f = new test.generated.pg_catalog.routines.PlaintoTsquery1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.plainto_tsquery
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object plaintoTsquery2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.PlaintoTsquery2 f = new test.generated.pg_catalog.routines.PlaintoTsquery2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.plainto_tsquery as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> plaintoTsquery2(java.lang.String __1) {
		test.generated.pg_catalog.routines.PlaintoTsquery2 f = new test.generated.pg_catalog.routines.PlaintoTsquery2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.plainto_tsquery as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> plaintoTsquery2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.PlaintoTsquery2 f = new test.generated.pg_catalog.routines.PlaintoTsquery2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.plpgsql_call_handler
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object plpgsqlCallHandler(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.PlpgsqlCallHandler f = new test.generated.pg_catalog.routines.PlpgsqlCallHandler();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.plpgsql_call_handler as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> plpgsqlCallHandler() {
		test.generated.pg_catalog.routines.PlpgsqlCallHandler f = new test.generated.pg_catalog.routines.PlpgsqlCallHandler();

		return f.asField();
	}

	/**
	 * Call pg_catalog.plpgsql_inline_handler
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void plpgsqlInlineHandler(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PlpgsqlInlineHandler p = new test.generated.pg_catalog.routines.PlpgsqlInlineHandler();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.plpgsql_validator
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void plpgsqlValidator(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.PlpgsqlValidator p = new test.generated.pg_catalog.routines.PlpgsqlValidator();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.point
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object point4(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Point4 f = new test.generated.pg_catalog.routines.Point4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> point4(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Point4 f = new test.generated.pg_catalog.routines.Point4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> point4(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Point4 f = new test.generated.pg_catalog.routines.Point4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object point2(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Point2 f = new test.generated.pg_catalog.routines.Point2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> point2(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Point2 f = new test.generated.pg_catalog.routines.Point2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> point2(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Point2 f = new test.generated.pg_catalog.routines.Point2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object point1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Point1 f = new test.generated.pg_catalog.routines.Point1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> point1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Point1 f = new test.generated.pg_catalog.routines.Point1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> point1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Point1 f = new test.generated.pg_catalog.routines.Point1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object point6(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Point6 f = new test.generated.pg_catalog.routines.Point6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> point6(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Point6 f = new test.generated.pg_catalog.routines.Point6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> point6(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Point6 f = new test.generated.pg_catalog.routines.Point6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object point3(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Point3 f = new test.generated.pg_catalog.routines.Point3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> point3(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Point3 f = new test.generated.pg_catalog.routines.Point3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> point3(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Point3 f = new test.generated.pg_catalog.routines.Point3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object point5(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Point5 f = new test.generated.pg_catalog.routines.Point5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> point5(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Point5 f = new test.generated.pg_catalog.routines.Point5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> point5(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Point5 f = new test.generated.pg_catalog.routines.Point5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_above
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pointAbove(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointAbove f = new test.generated.pg_catalog.routines.PointAbove();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_above as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointAbove(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointAbove f = new test.generated.pg_catalog.routines.PointAbove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_above as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointAbove(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointAbove f = new test.generated.pg_catalog.routines.PointAbove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_add
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pointAdd(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointAdd f = new test.generated.pg_catalog.routines.PointAdd();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_add as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pointAdd(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointAdd f = new test.generated.pg_catalog.routines.PointAdd();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_add as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pointAdd(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointAdd f = new test.generated.pg_catalog.routines.PointAdd();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_below
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pointBelow(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointBelow f = new test.generated.pg_catalog.routines.PointBelow();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_below as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointBelow(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointBelow f = new test.generated.pg_catalog.routines.PointBelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_below as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointBelow(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointBelow f = new test.generated.pg_catalog.routines.PointBelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_distance
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double pointDistance(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointDistance f = new test.generated.pg_catalog.routines.PointDistance();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> pointDistance(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointDistance f = new test.generated.pg_catalog.routines.PointDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> pointDistance(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointDistance f = new test.generated.pg_catalog.routines.PointDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_div
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pointDiv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointDiv f = new test.generated.pg_catalog.routines.PointDiv();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pointDiv(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointDiv f = new test.generated.pg_catalog.routines.PointDiv();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_div as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pointDiv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointDiv f = new test.generated.pg_catalog.routines.PointDiv();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pointEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointEq f = new test.generated.pg_catalog.routines.PointEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointEq f = new test.generated.pg_catalog.routines.PointEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointEq f = new test.generated.pg_catalog.routines.PointEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_horiz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pointHoriz(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointHoriz f = new test.generated.pg_catalog.routines.PointHoriz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_horiz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointHoriz(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointHoriz f = new test.generated.pg_catalog.routines.PointHoriz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_horiz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointHoriz(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointHoriz f = new test.generated.pg_catalog.routines.PointHoriz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pointIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PointIn f = new test.generated.pg_catalog.routines.PointIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pointIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PointIn f = new test.generated.pg_catalog.routines.PointIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pointIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PointIn f = new test.generated.pg_catalog.routines.PointIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_left
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pointLeft(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointLeft f = new test.generated.pg_catalog.routines.PointLeft();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_left as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointLeft(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointLeft f = new test.generated.pg_catalog.routines.PointLeft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_left as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointLeft(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointLeft f = new test.generated.pg_catalog.routines.PointLeft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_mul
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pointMul(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointMul f = new test.generated.pg_catalog.routines.PointMul();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pointMul(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointMul f = new test.generated.pg_catalog.routines.PointMul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_mul as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pointMul(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointMul f = new test.generated.pg_catalog.routines.PointMul();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pointNe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointNe f = new test.generated.pg_catalog.routines.PointNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointNe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointNe f = new test.generated.pg_catalog.routines.PointNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointNe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointNe f = new test.generated.pg_catalog.routines.PointNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pointOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PointOut f = new test.generated.pg_catalog.routines.PointOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pointOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PointOut f = new test.generated.pg_catalog.routines.PointOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pointOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PointOut f = new test.generated.pg_catalog.routines.PointOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pointRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PointRecv f = new test.generated.pg_catalog.routines.PointRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pointRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PointRecv f = new test.generated.pg_catalog.routines.PointRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> pointRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PointRecv f = new test.generated.pg_catalog.routines.PointRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_right
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pointRight(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointRight f = new test.generated.pg_catalog.routines.PointRight();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_right as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointRight(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointRight f = new test.generated.pg_catalog.routines.PointRight();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_right as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointRight(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointRight f = new test.generated.pg_catalog.routines.PointRight();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] pointSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PointSend f = new test.generated.pg_catalog.routines.PointSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> pointSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PointSend f = new test.generated.pg_catalog.routines.PointSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> pointSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PointSend f = new test.generated.pg_catalog.routines.PointSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_sub
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object pointSub(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointSub f = new test.generated.pg_catalog.routines.PointSub();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_sub as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pointSub(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointSub f = new test.generated.pg_catalog.routines.PointSub();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_sub as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> pointSub(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointSub f = new test.generated.pg_catalog.routines.PointSub();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.point_vert
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean pointVert(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointVert f = new test.generated.pg_catalog.routines.PointVert();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.point_vert as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointVert(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PointVert f = new test.generated.pg_catalog.routines.PointVert();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.point_vert as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> pointVert(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PointVert f = new test.generated.pg_catalog.routines.PointVert();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_above
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polyAbove(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyAbove f = new test.generated.pg_catalog.routines.PolyAbove();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_above as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyAbove(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyAbove f = new test.generated.pg_catalog.routines.PolyAbove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_above as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyAbove(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyAbove f = new test.generated.pg_catalog.routines.PolyAbove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_below
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polyBelow(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyBelow f = new test.generated.pg_catalog.routines.PolyBelow();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_below as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyBelow(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyBelow f = new test.generated.pg_catalog.routines.PolyBelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_below as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyBelow(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyBelow f = new test.generated.pg_catalog.routines.PolyBelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_center
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object polyCenter(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PolyCenter f = new test.generated.pg_catalog.routines.PolyCenter();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polyCenter(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PolyCenter f = new test.generated.pg_catalog.routines.PolyCenter();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_center as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polyCenter(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PolyCenter f = new test.generated.pg_catalog.routines.PolyCenter();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_contain
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polyContain(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyContain f = new test.generated.pg_catalog.routines.PolyContain();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_contain as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyContain(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyContain f = new test.generated.pg_catalog.routines.PolyContain();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_contain as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyContain(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyContain f = new test.generated.pg_catalog.routines.PolyContain();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_contain_pt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polyContainPt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyContainPt f = new test.generated.pg_catalog.routines.PolyContainPt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_contain_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyContainPt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyContainPt f = new test.generated.pg_catalog.routines.PolyContainPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_contain_pt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyContainPt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyContainPt f = new test.generated.pg_catalog.routines.PolyContainPt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_contained
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polyContained(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyContained f = new test.generated.pg_catalog.routines.PolyContained();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_contained as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyContained(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyContained f = new test.generated.pg_catalog.routines.PolyContained();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_contained as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyContained(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyContained f = new test.generated.pg_catalog.routines.PolyContained();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_distance
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double polyDistance(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyDistance f = new test.generated.pg_catalog.routines.PolyDistance();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> polyDistance(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyDistance f = new test.generated.pg_catalog.routines.PolyDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_distance as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> polyDistance(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyDistance f = new test.generated.pg_catalog.routines.PolyDistance();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object polyIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PolyIn f = new test.generated.pg_catalog.routines.PolyIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polyIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PolyIn f = new test.generated.pg_catalog.routines.PolyIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polyIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PolyIn f = new test.generated.pg_catalog.routines.PolyIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_left
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polyLeft(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyLeft f = new test.generated.pg_catalog.routines.PolyLeft();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_left as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyLeft(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyLeft f = new test.generated.pg_catalog.routines.PolyLeft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_left as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyLeft(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyLeft f = new test.generated.pg_catalog.routines.PolyLeft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_npoints
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer polyNpoints(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PolyNpoints f = new test.generated.pg_catalog.routines.PolyNpoints();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_npoints as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> polyNpoints(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PolyNpoints f = new test.generated.pg_catalog.routines.PolyNpoints();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_npoints as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> polyNpoints(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PolyNpoints f = new test.generated.pg_catalog.routines.PolyNpoints();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object polyOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PolyOut f = new test.generated.pg_catalog.routines.PolyOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polyOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PolyOut f = new test.generated.pg_catalog.routines.PolyOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polyOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PolyOut f = new test.generated.pg_catalog.routines.PolyOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_overabove
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polyOverabove(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyOverabove f = new test.generated.pg_catalog.routines.PolyOverabove();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_overabove as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyOverabove(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyOverabove f = new test.generated.pg_catalog.routines.PolyOverabove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_overabove as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyOverabove(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyOverabove f = new test.generated.pg_catalog.routines.PolyOverabove();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_overbelow
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polyOverbelow(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyOverbelow f = new test.generated.pg_catalog.routines.PolyOverbelow();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_overbelow as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyOverbelow(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyOverbelow f = new test.generated.pg_catalog.routines.PolyOverbelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_overbelow as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyOverbelow(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyOverbelow f = new test.generated.pg_catalog.routines.PolyOverbelow();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_overlap
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polyOverlap(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyOverlap f = new test.generated.pg_catalog.routines.PolyOverlap();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_overlap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyOverlap(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyOverlap f = new test.generated.pg_catalog.routines.PolyOverlap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_overlap as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyOverlap(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyOverlap f = new test.generated.pg_catalog.routines.PolyOverlap();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_overleft
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polyOverleft(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyOverleft f = new test.generated.pg_catalog.routines.PolyOverleft();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_overleft as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyOverleft(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyOverleft f = new test.generated.pg_catalog.routines.PolyOverleft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_overleft as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyOverleft(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyOverleft f = new test.generated.pg_catalog.routines.PolyOverleft();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_overright
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polyOverright(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyOverright f = new test.generated.pg_catalog.routines.PolyOverright();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_overright as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyOverright(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyOverright f = new test.generated.pg_catalog.routines.PolyOverright();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_overright as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyOverright(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyOverright f = new test.generated.pg_catalog.routines.PolyOverright();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object polyRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PolyRecv f = new test.generated.pg_catalog.routines.PolyRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polyRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PolyRecv f = new test.generated.pg_catalog.routines.PolyRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polyRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PolyRecv f = new test.generated.pg_catalog.routines.PolyRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_right
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polyRight(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyRight f = new test.generated.pg_catalog.routines.PolyRight();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_right as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyRight(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolyRight f = new test.generated.pg_catalog.routines.PolyRight();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_right as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polyRight(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolyRight f = new test.generated.pg_catalog.routines.PolyRight();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_same
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean polySame(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolySame f = new test.generated.pg_catalog.routines.PolySame();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_same as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polySame(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PolySame f = new test.generated.pg_catalog.routines.PolySame();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_same as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> polySame(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PolySame f = new test.generated.pg_catalog.routines.PolySame();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.poly_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] polySend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PolySend f = new test.generated.pg_catalog.routines.PolySend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.poly_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> polySend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PolySend f = new test.generated.pg_catalog.routines.PolySend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.poly_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> polySend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PolySend f = new test.generated.pg_catalog.routines.PolySend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.polygon
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object polygon1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Polygon1 f = new test.generated.pg_catalog.routines.Polygon1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.polygon as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polygon1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Polygon1 f = new test.generated.pg_catalog.routines.Polygon1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.polygon as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polygon1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Polygon1 f = new test.generated.pg_catalog.routines.Polygon1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.polygon
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object polygon4(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Polygon4 f = new test.generated.pg_catalog.routines.Polygon4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.polygon as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polygon4(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Polygon4 f = new test.generated.pg_catalog.routines.Polygon4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.polygon as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polygon4(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Polygon4 f = new test.generated.pg_catalog.routines.Polygon4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.polygon
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object polygon3(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Polygon3 f = new test.generated.pg_catalog.routines.Polygon3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.polygon as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> polygon3(java.lang.Integer __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Polygon3 f = new test.generated.pg_catalog.routines.Polygon3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.polygon as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> polygon3(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Polygon3 f = new test.generated.pg_catalog.routines.Polygon3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.polygon
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object polygon2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Polygon2 f = new test.generated.pg_catalog.routines.Polygon2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.polygon as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polygon2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Polygon2 f = new test.generated.pg_catalog.routines.Polygon2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.polygon as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> polygon2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Polygon2 f = new test.generated.pg_catalog.routines.Polygon2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.popen
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object popen(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Popen f = new test.generated.pg_catalog.routines.Popen();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.popen as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> popen(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Popen f = new test.generated.pg_catalog.routines.Popen();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.popen as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> popen(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Popen f = new test.generated.pg_catalog.routines.Popen();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.position
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer position3(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Position3 f = new test.generated.pg_catalog.routines.Position3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.position as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> position3(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Position3 f = new test.generated.pg_catalog.routines.Position3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.position as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> position3(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Position3 f = new test.generated.pg_catalog.routines.Position3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.position
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer position1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Position1 f = new test.generated.pg_catalog.routines.Position1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.position as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> position1(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Position1 f = new test.generated.pg_catalog.routines.Position1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.position as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> position1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Position1 f = new test.generated.pg_catalog.routines.Position1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.position
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer position2(org.jooq.Configuration configuration, byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Position2 f = new test.generated.pg_catalog.routines.Position2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.position as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> position2(byte[] __1, byte[] __2) {
		test.generated.pg_catalog.routines.Position2 f = new test.generated.pg_catalog.routines.Position2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.position as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> position2(org.jooq.Field<byte[]> __1, org.jooq.Field<byte[]> __2) {
		test.generated.pg_catalog.routines.Position2 f = new test.generated.pg_catalog.routines.Position2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.positionjoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double positionjoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Positionjoinsel f = new test.generated.pg_catalog.routines.Positionjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.positionjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> positionjoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Positionjoinsel f = new test.generated.pg_catalog.routines.Positionjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.positionjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> positionjoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Positionjoinsel f = new test.generated.pg_catalog.routines.Positionjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.positionsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double positionsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Positionsel f = new test.generated.pg_catalog.routines.Positionsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.positionsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> positionsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Positionsel f = new test.generated.pg_catalog.routines.Positionsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.positionsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> positionsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Positionsel f = new test.generated.pg_catalog.routines.Positionsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.postgresql_fdw_validator
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean postgresqlFdwValidator(org.jooq.Configuration configuration, java.lang.String[] __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.PostgresqlFdwValidator f = new test.generated.pg_catalog.routines.PostgresqlFdwValidator();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.postgresql_fdw_validator as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> postgresqlFdwValidator(java.lang.String[] __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.PostgresqlFdwValidator f = new test.generated.pg_catalog.routines.PostgresqlFdwValidator();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.postgresql_fdw_validator as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> postgresqlFdwValidator(org.jooq.Field<java.lang.String[]> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.PostgresqlFdwValidator f = new test.generated.pg_catalog.routines.PostgresqlFdwValidator();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pow
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double pow1(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Pow1 f = new test.generated.pg_catalog.routines.Pow1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pow as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> pow1(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Pow1 f = new test.generated.pg_catalog.routines.Pow1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pow as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> pow1(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Pow1 f = new test.generated.pg_catalog.routines.Pow1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pow
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal pow2(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Pow2 f = new test.generated.pg_catalog.routines.Pow2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pow as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> pow2(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Pow2 f = new test.generated.pg_catalog.routines.Pow2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pow as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> pow2(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.Pow2 f = new test.generated.pg_catalog.routines.Pow2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.power
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal power2(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Power2 f = new test.generated.pg_catalog.routines.Power2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.power as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> power2(java.math.BigDecimal __1, java.math.BigDecimal __2) {
		test.generated.pg_catalog.routines.Power2 f = new test.generated.pg_catalog.routines.Power2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.power as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> power2(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2) {
		test.generated.pg_catalog.routines.Power2 f = new test.generated.pg_catalog.routines.Power2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.power
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double power1(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Power1 f = new test.generated.pg_catalog.routines.Power1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.power as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> power1(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.Power1 f = new test.generated.pg_catalog.routines.Power1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.power as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> power1(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.Power1 f = new test.generated.pg_catalog.routines.Power1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.prsd_end
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void prsdEnd(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PrsdEnd p = new test.generated.pg_catalog.routines.PrsdEnd();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.prsd_headline
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object prsdHeadline(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.PrsdHeadline f = new test.generated.pg_catalog.routines.PrsdHeadline();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.prsd_headline as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> prsdHeadline(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.PrsdHeadline f = new test.generated.pg_catalog.routines.PrsdHeadline();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.prsd_headline as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> prsdHeadline(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.PrsdHeadline f = new test.generated.pg_catalog.routines.PrsdHeadline();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.prsd_lextype
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object prsdLextype(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.PrsdLextype f = new test.generated.pg_catalog.routines.PrsdLextype();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.prsd_lextype as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> prsdLextype(java.lang.Object __1) {
		test.generated.pg_catalog.routines.PrsdLextype f = new test.generated.pg_catalog.routines.PrsdLextype();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.prsd_lextype as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> prsdLextype(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.PrsdLextype f = new test.generated.pg_catalog.routines.PrsdLextype();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.prsd_nexttoken
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object prsdNexttoken(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.PrsdNexttoken f = new test.generated.pg_catalog.routines.PrsdNexttoken();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.prsd_nexttoken as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> prsdNexttoken(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.PrsdNexttoken f = new test.generated.pg_catalog.routines.PrsdNexttoken();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.prsd_nexttoken as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> prsdNexttoken(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.PrsdNexttoken f = new test.generated.pg_catalog.routines.PrsdNexttoken();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.prsd_start
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object prsdStart(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.PrsdStart f = new test.generated.pg_catalog.routines.PrsdStart();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.prsd_start as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> prsdStart(java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.PrsdStart f = new test.generated.pg_catalog.routines.PrsdStart();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.prsd_start as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> prsdStart(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.PrsdStart f = new test.generated.pg_catalog.routines.PrsdStart();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pt_contained_circle
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean ptContainedCircle(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PtContainedCircle f = new test.generated.pg_catalog.routines.PtContainedCircle();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pt_contained_circle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> ptContainedCircle(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PtContainedCircle f = new test.generated.pg_catalog.routines.PtContainedCircle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pt_contained_circle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> ptContainedCircle(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PtContainedCircle f = new test.generated.pg_catalog.routines.PtContainedCircle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.pt_contained_poly
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean ptContainedPoly(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PtContainedPoly f = new test.generated.pg_catalog.routines.PtContainedPoly();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.pt_contained_poly as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> ptContainedPoly(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.PtContainedPoly f = new test.generated.pg_catalog.routines.PtContainedPoly();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.pt_contained_poly as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> ptContainedPoly(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.PtContainedPoly f = new test.generated.pg_catalog.routines.PtContainedPoly();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.query_to_xml
	 *
	 * @param query
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object queryToXml(org.jooq.Configuration configuration, java.lang.String query, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.QueryToXml f = new test.generated.pg_catalog.routines.QueryToXml();
		f.setQuery(query);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.query_to_xml as a field
	 *
	 * @param query
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> queryToXml(java.lang.String query, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.QueryToXml f = new test.generated.pg_catalog.routines.QueryToXml();
		f.setQuery(query);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.query_to_xml as a field
	 *
	 * @param query
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> queryToXml(org.jooq.Field<java.lang.String> query, org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.QueryToXml f = new test.generated.pg_catalog.routines.QueryToXml();
		f.setQuery(query);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.query_to_xml_and_xmlschema
	 *
	 * @param query
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object queryToXmlAndXmlschema(org.jooq.Configuration configuration, java.lang.String query, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.QueryToXmlAndXmlschema f = new test.generated.pg_catalog.routines.QueryToXmlAndXmlschema();
		f.setQuery(query);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.query_to_xml_and_xmlschema as a field
	 *
	 * @param query
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> queryToXmlAndXmlschema(java.lang.String query, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.QueryToXmlAndXmlschema f = new test.generated.pg_catalog.routines.QueryToXmlAndXmlschema();
		f.setQuery(query);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.query_to_xml_and_xmlschema as a field
	 *
	 * @param query
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> queryToXmlAndXmlschema(org.jooq.Field<java.lang.String> query, org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.QueryToXmlAndXmlschema f = new test.generated.pg_catalog.routines.QueryToXmlAndXmlschema();
		f.setQuery(query);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.query_to_xmlschema
	 *
	 * @param query
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object queryToXmlschema(org.jooq.Configuration configuration, java.lang.String query, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.QueryToXmlschema f = new test.generated.pg_catalog.routines.QueryToXmlschema();
		f.setQuery(query);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.query_to_xmlschema as a field
	 *
	 * @param query
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> queryToXmlschema(java.lang.String query, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.QueryToXmlschema f = new test.generated.pg_catalog.routines.QueryToXmlschema();
		f.setQuery(query);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.query_to_xmlschema as a field
	 *
	 * @param query
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> queryToXmlschema(org.jooq.Field<java.lang.String> query, org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.QueryToXmlschema f = new test.generated.pg_catalog.routines.QueryToXmlschema();
		f.setQuery(query);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.querytree
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String querytree(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Querytree f = new test.generated.pg_catalog.routines.Querytree();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.querytree as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> querytree(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Querytree f = new test.generated.pg_catalog.routines.Querytree();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.querytree as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> querytree(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Querytree f = new test.generated.pg_catalog.routines.Querytree();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.quote_ident
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String quoteIdent(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.QuoteIdent f = new test.generated.pg_catalog.routines.QuoteIdent();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.quote_ident as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> quoteIdent(java.lang.String __1) {
		test.generated.pg_catalog.routines.QuoteIdent f = new test.generated.pg_catalog.routines.QuoteIdent();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.quote_ident as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> quoteIdent(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.QuoteIdent f = new test.generated.pg_catalog.routines.QuoteIdent();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.quote_literal
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String quoteLiteral2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.QuoteLiteral2 f = new test.generated.pg_catalog.routines.QuoteLiteral2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.quote_literal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> quoteLiteral2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.QuoteLiteral2 f = new test.generated.pg_catalog.routines.QuoteLiteral2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.quote_literal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> quoteLiteral2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.QuoteLiteral2 f = new test.generated.pg_catalog.routines.QuoteLiteral2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.quote_literal
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String quoteLiteral1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.QuoteLiteral1 f = new test.generated.pg_catalog.routines.QuoteLiteral1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.quote_literal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> quoteLiteral1(java.lang.String __1) {
		test.generated.pg_catalog.routines.QuoteLiteral1 f = new test.generated.pg_catalog.routines.QuoteLiteral1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.quote_literal as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> quoteLiteral1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.QuoteLiteral1 f = new test.generated.pg_catalog.routines.QuoteLiteral1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.quote_nullable
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String quoteNullable1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.QuoteNullable1 f = new test.generated.pg_catalog.routines.QuoteNullable1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.quote_nullable as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> quoteNullable1(java.lang.String __1) {
		test.generated.pg_catalog.routines.QuoteNullable1 f = new test.generated.pg_catalog.routines.QuoteNullable1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.quote_nullable as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> quoteNullable1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.QuoteNullable1 f = new test.generated.pg_catalog.routines.QuoteNullable1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.quote_nullable
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String quoteNullable2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.QuoteNullable2 f = new test.generated.pg_catalog.routines.QuoteNullable2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.quote_nullable as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> quoteNullable2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.QuoteNullable2 f = new test.generated.pg_catalog.routines.QuoteNullable2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.quote_nullable as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> quoteNullable2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.QuoteNullable2 f = new test.generated.pg_catalog.routines.QuoteNullable2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.radians
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double radians(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Radians f = new test.generated.pg_catalog.routines.Radians();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.radians as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> radians(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Radians f = new test.generated.pg_catalog.routines.Radians();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.radians as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> radians(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Radians f = new test.generated.pg_catalog.routines.Radians();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.radius
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double radius(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Radius f = new test.generated.pg_catalog.routines.Radius();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.radius as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> radius(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Radius f = new test.generated.pg_catalog.routines.Radius();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.radius as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> radius(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Radius f = new test.generated.pg_catalog.routines.Radius();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.random
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double random(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.Random f = new test.generated.pg_catalog.routines.Random();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.random as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Double> random() {
		test.generated.pg_catalog.routines.Random f = new test.generated.pg_catalog.routines.Random();

		return f.asField();
	}

	/**
	 * Call pg_catalog.rank
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long rank(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.Rank f = new test.generated.pg_catalog.routines.Rank();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.rank as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> rank() {
		test.generated.pg_catalog.routines.Rank f = new test.generated.pg_catalog.routines.Rank();

		return f.asField();
	}

	/**
	 * Call pg_catalog.record_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean recordEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.RecordEq f = new test.generated.pg_catalog.routines.RecordEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.record_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> recordEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.RecordEq f = new test.generated.pg_catalog.routines.RecordEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.record_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> recordEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.RecordEq f = new test.generated.pg_catalog.routines.RecordEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.record_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean recordGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.RecordGe f = new test.generated.pg_catalog.routines.RecordGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.record_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> recordGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.RecordGe f = new test.generated.pg_catalog.routines.RecordGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.record_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> recordGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.RecordGe f = new test.generated.pg_catalog.routines.RecordGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.record_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean recordGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.RecordGt f = new test.generated.pg_catalog.routines.RecordGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.record_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> recordGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.RecordGt f = new test.generated.pg_catalog.routines.RecordGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.record_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> recordGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.RecordGt f = new test.generated.pg_catalog.routines.RecordGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.record_in
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void recordIn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.RecordIn p = new test.generated.pg_catalog.routines.RecordIn();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.record_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean recordLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.RecordLe f = new test.generated.pg_catalog.routines.RecordLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.record_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> recordLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.RecordLe f = new test.generated.pg_catalog.routines.RecordLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.record_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> recordLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.RecordLe f = new test.generated.pg_catalog.routines.RecordLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.record_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean recordLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.RecordLt f = new test.generated.pg_catalog.routines.RecordLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.record_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> recordLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.RecordLt f = new test.generated.pg_catalog.routines.RecordLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.record_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> recordLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.RecordLt f = new test.generated.pg_catalog.routines.RecordLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.record_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean recordNe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.RecordNe f = new test.generated.pg_catalog.routines.RecordNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.record_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> recordNe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.RecordNe f = new test.generated.pg_catalog.routines.RecordNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.record_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> recordNe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.RecordNe f = new test.generated.pg_catalog.routines.RecordNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.record_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object recordOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.RecordOut f = new test.generated.pg_catalog.routines.RecordOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.record_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> recordOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.RecordOut f = new test.generated.pg_catalog.routines.RecordOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.record_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> recordOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.RecordOut f = new test.generated.pg_catalog.routines.RecordOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.record_recv
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void recordRecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.RecordRecv p = new test.generated.pg_catalog.routines.RecordRecv();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.record_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] recordSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.RecordSend f = new test.generated.pg_catalog.routines.RecordSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.record_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> recordSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.RecordSend f = new test.generated.pg_catalog.routines.RecordSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.record_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> recordSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.RecordSend f = new test.generated.pg_catalog.routines.RecordSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regclass
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regclass(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Regclass f = new test.generated.pg_catalog.routines.Regclass();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regclass as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regclass(java.lang.String __1) {
		test.generated.pg_catalog.routines.Regclass f = new test.generated.pg_catalog.routines.Regclass();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regclass as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regclass(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Regclass f = new test.generated.pg_catalog.routines.Regclass();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regclassin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regclassin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regclassin f = new test.generated.pg_catalog.routines.Regclassin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regclassin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regclassin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regclassin f = new test.generated.pg_catalog.routines.Regclassin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regclassin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regclassin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regclassin f = new test.generated.pg_catalog.routines.Regclassin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regclassout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regclassout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regclassout f = new test.generated.pg_catalog.routines.Regclassout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regclassout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regclassout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regclassout f = new test.generated.pg_catalog.routines.Regclassout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regclassout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regclassout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regclassout f = new test.generated.pg_catalog.routines.Regclassout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regclassrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regclassrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regclassrecv f = new test.generated.pg_catalog.routines.Regclassrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regclassrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regclassrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regclassrecv f = new test.generated.pg_catalog.routines.Regclassrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regclassrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regclassrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regclassrecv f = new test.generated.pg_catalog.routines.Regclassrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regclasssend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] regclasssend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regclasssend f = new test.generated.pg_catalog.routines.Regclasssend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regclasssend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regclasssend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regclasssend f = new test.generated.pg_catalog.routines.Regclasssend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regclasssend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regclasssend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regclasssend f = new test.generated.pg_catalog.routines.Regclasssend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regconfigin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regconfigin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regconfigin f = new test.generated.pg_catalog.routines.Regconfigin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regconfigin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regconfigin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regconfigin f = new test.generated.pg_catalog.routines.Regconfigin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regconfigin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regconfigin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regconfigin f = new test.generated.pg_catalog.routines.Regconfigin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regconfigout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regconfigout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regconfigout f = new test.generated.pg_catalog.routines.Regconfigout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regconfigout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regconfigout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regconfigout f = new test.generated.pg_catalog.routines.Regconfigout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regconfigout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regconfigout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regconfigout f = new test.generated.pg_catalog.routines.Regconfigout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regconfigrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regconfigrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regconfigrecv f = new test.generated.pg_catalog.routines.Regconfigrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regconfigrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regconfigrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regconfigrecv f = new test.generated.pg_catalog.routines.Regconfigrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regconfigrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regconfigrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regconfigrecv f = new test.generated.pg_catalog.routines.Regconfigrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regconfigsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] regconfigsend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regconfigsend f = new test.generated.pg_catalog.routines.Regconfigsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regconfigsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regconfigsend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regconfigsend f = new test.generated.pg_catalog.routines.Regconfigsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regconfigsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regconfigsend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regconfigsend f = new test.generated.pg_catalog.routines.Regconfigsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regdictionaryin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regdictionaryin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regdictionaryin f = new test.generated.pg_catalog.routines.Regdictionaryin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regdictionaryin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regdictionaryin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regdictionaryin f = new test.generated.pg_catalog.routines.Regdictionaryin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regdictionaryin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regdictionaryin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regdictionaryin f = new test.generated.pg_catalog.routines.Regdictionaryin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regdictionaryout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regdictionaryout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regdictionaryout f = new test.generated.pg_catalog.routines.Regdictionaryout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regdictionaryout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regdictionaryout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regdictionaryout f = new test.generated.pg_catalog.routines.Regdictionaryout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regdictionaryout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regdictionaryout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regdictionaryout f = new test.generated.pg_catalog.routines.Regdictionaryout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regdictionaryrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regdictionaryrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regdictionaryrecv f = new test.generated.pg_catalog.routines.Regdictionaryrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regdictionaryrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regdictionaryrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regdictionaryrecv f = new test.generated.pg_catalog.routines.Regdictionaryrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regdictionaryrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regdictionaryrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regdictionaryrecv f = new test.generated.pg_catalog.routines.Regdictionaryrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regdictionarysend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] regdictionarysend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regdictionarysend f = new test.generated.pg_catalog.routines.Regdictionarysend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regdictionarysend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regdictionarysend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regdictionarysend f = new test.generated.pg_catalog.routines.Regdictionarysend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regdictionarysend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regdictionarysend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regdictionarysend f = new test.generated.pg_catalog.routines.Regdictionarysend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regexeqjoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double regexeqjoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Regexeqjoinsel f = new test.generated.pg_catalog.routines.Regexeqjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regexeqjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> regexeqjoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Regexeqjoinsel f = new test.generated.pg_catalog.routines.Regexeqjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regexeqjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> regexeqjoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Regexeqjoinsel f = new test.generated.pg_catalog.routines.Regexeqjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regexeqsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double regexeqsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Regexeqsel f = new test.generated.pg_catalog.routines.Regexeqsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regexeqsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> regexeqsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Regexeqsel f = new test.generated.pg_catalog.routines.Regexeqsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regexeqsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> regexeqsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Regexeqsel f = new test.generated.pg_catalog.routines.Regexeqsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regexnejoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double regexnejoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Regexnejoinsel f = new test.generated.pg_catalog.routines.Regexnejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regexnejoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> regexnejoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Regexnejoinsel f = new test.generated.pg_catalog.routines.Regexnejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regexnejoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> regexnejoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Regexnejoinsel f = new test.generated.pg_catalog.routines.Regexnejoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regexnesel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double regexnesel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Regexnesel f = new test.generated.pg_catalog.routines.Regexnesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regexnesel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> regexnesel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Regexnesel f = new test.generated.pg_catalog.routines.Regexnesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regexnesel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> regexnesel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Regexnesel f = new test.generated.pg_catalog.routines.Regexnesel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regexp_matches
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String[] regexpMatches1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.RegexpMatches1 f = new test.generated.pg_catalog.routines.RegexpMatches1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regexp_matches as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String[]> regexpMatches1(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.RegexpMatches1 f = new test.generated.pg_catalog.routines.RegexpMatches1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regexp_matches as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String[]> regexpMatches1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.RegexpMatches1 f = new test.generated.pg_catalog.routines.RegexpMatches1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regexp_matches
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String[] regexpMatches2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.RegexpMatches2 f = new test.generated.pg_catalog.routines.RegexpMatches2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regexp_matches as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String[]> regexpMatches2(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.RegexpMatches2 f = new test.generated.pg_catalog.routines.RegexpMatches2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regexp_matches as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String[]> regexpMatches2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.RegexpMatches2 f = new test.generated.pg_catalog.routines.RegexpMatches2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regexp_replace
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String regexpReplace2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.RegexpReplace2 f = new test.generated.pg_catalog.routines.RegexpReplace2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regexp_replace as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.String> regexpReplace2(java.lang.String __1, java.lang.String __2, java.lang.String __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.RegexpReplace2 f = new test.generated.pg_catalog.routines.RegexpReplace2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regexp_replace as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.String> regexpReplace2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3, org.jooq.Field<java.lang.String> __4) {
		test.generated.pg_catalog.routines.RegexpReplace2 f = new test.generated.pg_catalog.routines.RegexpReplace2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regexp_replace
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String regexpReplace1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.RegexpReplace1 f = new test.generated.pg_catalog.routines.RegexpReplace1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regexp_replace as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> regexpReplace1(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.RegexpReplace1 f = new test.generated.pg_catalog.routines.RegexpReplace1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regexp_replace as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> regexpReplace1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.RegexpReplace1 f = new test.generated.pg_catalog.routines.RegexpReplace1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regexp_split_to_array
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String[] regexpSplitToArray2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.RegexpSplitToArray2 f = new test.generated.pg_catalog.routines.RegexpSplitToArray2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regexp_split_to_array as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String[]> regexpSplitToArray2(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.RegexpSplitToArray2 f = new test.generated.pg_catalog.routines.RegexpSplitToArray2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regexp_split_to_array as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String[]> regexpSplitToArray2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.RegexpSplitToArray2 f = new test.generated.pg_catalog.routines.RegexpSplitToArray2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regexp_split_to_array
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String[] regexpSplitToArray1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.RegexpSplitToArray1 f = new test.generated.pg_catalog.routines.RegexpSplitToArray1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regexp_split_to_array as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String[]> regexpSplitToArray1(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.RegexpSplitToArray1 f = new test.generated.pg_catalog.routines.RegexpSplitToArray1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regexp_split_to_array as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String[]> regexpSplitToArray1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.RegexpSplitToArray1 f = new test.generated.pg_catalog.routines.RegexpSplitToArray1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regexp_split_to_table
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String regexpSplitToTable1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.RegexpSplitToTable1 f = new test.generated.pg_catalog.routines.RegexpSplitToTable1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regexp_split_to_table as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> regexpSplitToTable1(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.RegexpSplitToTable1 f = new test.generated.pg_catalog.routines.RegexpSplitToTable1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regexp_split_to_table as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> regexpSplitToTable1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.RegexpSplitToTable1 f = new test.generated.pg_catalog.routines.RegexpSplitToTable1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regexp_split_to_table
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String regexpSplitToTable2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.RegexpSplitToTable2 f = new test.generated.pg_catalog.routines.RegexpSplitToTable2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regexp_split_to_table as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> regexpSplitToTable2(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.RegexpSplitToTable2 f = new test.generated.pg_catalog.routines.RegexpSplitToTable2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regexp_split_to_table as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> regexpSplitToTable2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.RegexpSplitToTable2 f = new test.generated.pg_catalog.routines.RegexpSplitToTable2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regoperatorin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regoperatorin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperatorin f = new test.generated.pg_catalog.routines.Regoperatorin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regoperatorin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regoperatorin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperatorin f = new test.generated.pg_catalog.routines.Regoperatorin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regoperatorin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regoperatorin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regoperatorin f = new test.generated.pg_catalog.routines.Regoperatorin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regoperatorout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regoperatorout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperatorout f = new test.generated.pg_catalog.routines.Regoperatorout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regoperatorout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regoperatorout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperatorout f = new test.generated.pg_catalog.routines.Regoperatorout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regoperatorout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regoperatorout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regoperatorout f = new test.generated.pg_catalog.routines.Regoperatorout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regoperatorrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regoperatorrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperatorrecv f = new test.generated.pg_catalog.routines.Regoperatorrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regoperatorrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regoperatorrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperatorrecv f = new test.generated.pg_catalog.routines.Regoperatorrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regoperatorrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regoperatorrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regoperatorrecv f = new test.generated.pg_catalog.routines.Regoperatorrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regoperatorsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] regoperatorsend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperatorsend f = new test.generated.pg_catalog.routines.Regoperatorsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regoperatorsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regoperatorsend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperatorsend f = new test.generated.pg_catalog.routines.Regoperatorsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regoperatorsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regoperatorsend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regoperatorsend f = new test.generated.pg_catalog.routines.Regoperatorsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regoperin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regoperin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperin f = new test.generated.pg_catalog.routines.Regoperin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regoperin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regoperin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperin f = new test.generated.pg_catalog.routines.Regoperin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regoperin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regoperin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regoperin f = new test.generated.pg_catalog.routines.Regoperin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regoperout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regoperout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperout f = new test.generated.pg_catalog.routines.Regoperout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regoperout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regoperout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperout f = new test.generated.pg_catalog.routines.Regoperout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regoperout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regoperout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regoperout f = new test.generated.pg_catalog.routines.Regoperout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regoperrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regoperrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperrecv f = new test.generated.pg_catalog.routines.Regoperrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regoperrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regoperrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regoperrecv f = new test.generated.pg_catalog.routines.Regoperrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regoperrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regoperrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regoperrecv f = new test.generated.pg_catalog.routines.Regoperrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regopersend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] regopersend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regopersend f = new test.generated.pg_catalog.routines.Regopersend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regopersend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regopersend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regopersend f = new test.generated.pg_catalog.routines.Regopersend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regopersend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regopersend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regopersend f = new test.generated.pg_catalog.routines.Regopersend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regprocedurein
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regprocedurein(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regprocedurein f = new test.generated.pg_catalog.routines.Regprocedurein();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regprocedurein as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regprocedurein(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regprocedurein f = new test.generated.pg_catalog.routines.Regprocedurein();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regprocedurein as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regprocedurein(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regprocedurein f = new test.generated.pg_catalog.routines.Regprocedurein();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regprocedureout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regprocedureout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regprocedureout f = new test.generated.pg_catalog.routines.Regprocedureout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regprocedureout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regprocedureout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regprocedureout f = new test.generated.pg_catalog.routines.Regprocedureout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regprocedureout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regprocedureout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regprocedureout f = new test.generated.pg_catalog.routines.Regprocedureout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regprocedurerecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regprocedurerecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regprocedurerecv f = new test.generated.pg_catalog.routines.Regprocedurerecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regprocedurerecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regprocedurerecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regprocedurerecv f = new test.generated.pg_catalog.routines.Regprocedurerecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regprocedurerecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regprocedurerecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regprocedurerecv f = new test.generated.pg_catalog.routines.Regprocedurerecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regproceduresend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] regproceduresend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regproceduresend f = new test.generated.pg_catalog.routines.Regproceduresend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regproceduresend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regproceduresend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regproceduresend f = new test.generated.pg_catalog.routines.Regproceduresend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regproceduresend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regproceduresend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regproceduresend f = new test.generated.pg_catalog.routines.Regproceduresend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regprocin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String regprocin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regprocin f = new test.generated.pg_catalog.routines.Regprocin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regprocin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> regprocin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regprocin f = new test.generated.pg_catalog.routines.Regprocin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regprocin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> regprocin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regprocin f = new test.generated.pg_catalog.routines.Regprocin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regprocout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regprocout(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Regprocout f = new test.generated.pg_catalog.routines.Regprocout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regprocout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regprocout(java.lang.String __1) {
		test.generated.pg_catalog.routines.Regprocout f = new test.generated.pg_catalog.routines.Regprocout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regprocout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regprocout(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Regprocout f = new test.generated.pg_catalog.routines.Regprocout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regprocrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String regprocrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regprocrecv f = new test.generated.pg_catalog.routines.Regprocrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regprocrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> regprocrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regprocrecv f = new test.generated.pg_catalog.routines.Regprocrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regprocrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> regprocrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regprocrecv f = new test.generated.pg_catalog.routines.Regprocrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regprocsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] regprocsend(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Regprocsend f = new test.generated.pg_catalog.routines.Regprocsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regprocsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regprocsend(java.lang.String __1) {
		test.generated.pg_catalog.routines.Regprocsend f = new test.generated.pg_catalog.routines.Regprocsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regprocsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regprocsend(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Regprocsend f = new test.generated.pg_catalog.routines.Regprocsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regr_avgx
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double regrAvgx(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrAvgx f = new test.generated.pg_catalog.routines.RegrAvgx();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regr_avgx as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrAvgx(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrAvgx f = new test.generated.pg_catalog.routines.RegrAvgx();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regr_avgx as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrAvgx(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.RegrAvgx f = new test.generated.pg_catalog.routines.RegrAvgx();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regr_avgy
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double regrAvgy(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrAvgy f = new test.generated.pg_catalog.routines.RegrAvgy();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regr_avgy as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrAvgy(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrAvgy f = new test.generated.pg_catalog.routines.RegrAvgy();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regr_avgy as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrAvgy(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.RegrAvgy f = new test.generated.pg_catalog.routines.RegrAvgy();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regr_count
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long regrCount(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrCount f = new test.generated.pg_catalog.routines.RegrCount();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regr_count as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> regrCount(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrCount f = new test.generated.pg_catalog.routines.RegrCount();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regr_count as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> regrCount(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.RegrCount f = new test.generated.pg_catalog.routines.RegrCount();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regr_intercept
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double regrIntercept(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrIntercept f = new test.generated.pg_catalog.routines.RegrIntercept();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regr_intercept as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrIntercept(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrIntercept f = new test.generated.pg_catalog.routines.RegrIntercept();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regr_intercept as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrIntercept(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.RegrIntercept f = new test.generated.pg_catalog.routines.RegrIntercept();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regr_r2
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double regrR2(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrR2 f = new test.generated.pg_catalog.routines.RegrR2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regr_r2 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrR2(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrR2 f = new test.generated.pg_catalog.routines.RegrR2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regr_r2 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrR2(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.RegrR2 f = new test.generated.pg_catalog.routines.RegrR2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regr_slope
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double regrSlope(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrSlope f = new test.generated.pg_catalog.routines.RegrSlope();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regr_slope as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrSlope(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrSlope f = new test.generated.pg_catalog.routines.RegrSlope();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regr_slope as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrSlope(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.RegrSlope f = new test.generated.pg_catalog.routines.RegrSlope();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regr_sxx
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double regrSxx(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrSxx f = new test.generated.pg_catalog.routines.RegrSxx();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regr_sxx as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrSxx(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrSxx f = new test.generated.pg_catalog.routines.RegrSxx();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regr_sxx as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrSxx(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.RegrSxx f = new test.generated.pg_catalog.routines.RegrSxx();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regr_sxy
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double regrSxy(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrSxy f = new test.generated.pg_catalog.routines.RegrSxy();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regr_sxy as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrSxy(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrSxy f = new test.generated.pg_catalog.routines.RegrSxy();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regr_sxy as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrSxy(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.RegrSxy f = new test.generated.pg_catalog.routines.RegrSxy();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regr_syy
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double regrSyy(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrSyy f = new test.generated.pg_catalog.routines.RegrSyy();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regr_syy as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrSyy(java.lang.Double __1, java.lang.Double __2) {
		test.generated.pg_catalog.routines.RegrSyy f = new test.generated.pg_catalog.routines.RegrSyy();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regr_syy as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> regrSyy(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2) {
		test.generated.pg_catalog.routines.RegrSyy f = new test.generated.pg_catalog.routines.RegrSyy();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regtypein
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regtypein(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regtypein f = new test.generated.pg_catalog.routines.Regtypein();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regtypein as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regtypein(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regtypein f = new test.generated.pg_catalog.routines.Regtypein();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regtypein as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regtypein(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regtypein f = new test.generated.pg_catalog.routines.Regtypein();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regtypeout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regtypeout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regtypeout f = new test.generated.pg_catalog.routines.Regtypeout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regtypeout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regtypeout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regtypeout f = new test.generated.pg_catalog.routines.Regtypeout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regtypeout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regtypeout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regtypeout f = new test.generated.pg_catalog.routines.Regtypeout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regtyperecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object regtyperecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regtyperecv f = new test.generated.pg_catalog.routines.Regtyperecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regtyperecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regtyperecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regtyperecv f = new test.generated.pg_catalog.routines.Regtyperecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regtyperecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> regtyperecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regtyperecv f = new test.generated.pg_catalog.routines.Regtyperecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.regtypesend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] regtypesend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regtypesend f = new test.generated.pg_catalog.routines.Regtypesend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.regtypesend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regtypesend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Regtypesend f = new test.generated.pg_catalog.routines.Regtypesend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.regtypesend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> regtypesend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Regtypesend f = new test.generated.pg_catalog.routines.Regtypesend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.reltime
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object reltime(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Reltime f = new test.generated.pg_catalog.routines.Reltime();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.reltime as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> reltime(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Reltime f = new test.generated.pg_catalog.routines.Reltime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.reltime as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> reltime(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Reltime f = new test.generated.pg_catalog.routines.Reltime();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.reltimeeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean reltimeeq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Reltimeeq f = new test.generated.pg_catalog.routines.Reltimeeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.reltimeeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> reltimeeq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Reltimeeq f = new test.generated.pg_catalog.routines.Reltimeeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.reltimeeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> reltimeeq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Reltimeeq f = new test.generated.pg_catalog.routines.Reltimeeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.reltimege
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean reltimege(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Reltimege f = new test.generated.pg_catalog.routines.Reltimege();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.reltimege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> reltimege(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Reltimege f = new test.generated.pg_catalog.routines.Reltimege();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.reltimege as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> reltimege(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Reltimege f = new test.generated.pg_catalog.routines.Reltimege();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.reltimegt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean reltimegt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Reltimegt f = new test.generated.pg_catalog.routines.Reltimegt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.reltimegt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> reltimegt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Reltimegt f = new test.generated.pg_catalog.routines.Reltimegt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.reltimegt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> reltimegt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Reltimegt f = new test.generated.pg_catalog.routines.Reltimegt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.reltimein
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object reltimein(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Reltimein f = new test.generated.pg_catalog.routines.Reltimein();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.reltimein as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> reltimein(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Reltimein f = new test.generated.pg_catalog.routines.Reltimein();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.reltimein as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> reltimein(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Reltimein f = new test.generated.pg_catalog.routines.Reltimein();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.reltimele
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean reltimele(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Reltimele f = new test.generated.pg_catalog.routines.Reltimele();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.reltimele as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> reltimele(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Reltimele f = new test.generated.pg_catalog.routines.Reltimele();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.reltimele as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> reltimele(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Reltimele f = new test.generated.pg_catalog.routines.Reltimele();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.reltimelt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean reltimelt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Reltimelt f = new test.generated.pg_catalog.routines.Reltimelt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.reltimelt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> reltimelt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Reltimelt f = new test.generated.pg_catalog.routines.Reltimelt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.reltimelt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> reltimelt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Reltimelt f = new test.generated.pg_catalog.routines.Reltimelt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.reltimene
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean reltimene(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Reltimene f = new test.generated.pg_catalog.routines.Reltimene();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.reltimene as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> reltimene(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Reltimene f = new test.generated.pg_catalog.routines.Reltimene();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.reltimene as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> reltimene(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Reltimene f = new test.generated.pg_catalog.routines.Reltimene();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.reltimeout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object reltimeout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Reltimeout f = new test.generated.pg_catalog.routines.Reltimeout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.reltimeout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> reltimeout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Reltimeout f = new test.generated.pg_catalog.routines.Reltimeout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.reltimeout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> reltimeout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Reltimeout f = new test.generated.pg_catalog.routines.Reltimeout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.reltimerecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object reltimerecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Reltimerecv f = new test.generated.pg_catalog.routines.Reltimerecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.reltimerecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> reltimerecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Reltimerecv f = new test.generated.pg_catalog.routines.Reltimerecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.reltimerecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> reltimerecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Reltimerecv f = new test.generated.pg_catalog.routines.Reltimerecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.reltimesend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] reltimesend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Reltimesend f = new test.generated.pg_catalog.routines.Reltimesend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.reltimesend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> reltimesend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Reltimesend f = new test.generated.pg_catalog.routines.Reltimesend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.reltimesend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> reltimesend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Reltimesend f = new test.generated.pg_catalog.routines.Reltimesend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.repeat
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String repeat(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Repeat f = new test.generated.pg_catalog.routines.Repeat();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.repeat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> repeat(java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Repeat f = new test.generated.pg_catalog.routines.Repeat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.repeat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> repeat(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Repeat f = new test.generated.pg_catalog.routines.Repeat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.replace
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String replace(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.Replace f = new test.generated.pg_catalog.routines.Replace();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.replace as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> replace(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.Replace f = new test.generated.pg_catalog.routines.Replace();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.replace as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> replace(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.Replace f = new test.generated.pg_catalog.routines.Replace();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.RI_FKey_cascade_del
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object riFkeyCascadeDel(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RiFkeyCascadeDel f = new test.generated.pg_catalog.routines.RiFkeyCascadeDel();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.RI_FKey_cascade_del as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> riFkeyCascadeDel() {
		test.generated.pg_catalog.routines.RiFkeyCascadeDel f = new test.generated.pg_catalog.routines.RiFkeyCascadeDel();

		return f.asField();
	}

	/**
	 * Call pg_catalog.RI_FKey_cascade_upd
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object riFkeyCascadeUpd(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RiFkeyCascadeUpd f = new test.generated.pg_catalog.routines.RiFkeyCascadeUpd();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.RI_FKey_cascade_upd as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> riFkeyCascadeUpd() {
		test.generated.pg_catalog.routines.RiFkeyCascadeUpd f = new test.generated.pg_catalog.routines.RiFkeyCascadeUpd();

		return f.asField();
	}

	/**
	 * Call pg_catalog.RI_FKey_check_ins
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object riFkeyCheckIns(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RiFkeyCheckIns f = new test.generated.pg_catalog.routines.RiFkeyCheckIns();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.RI_FKey_check_ins as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> riFkeyCheckIns() {
		test.generated.pg_catalog.routines.RiFkeyCheckIns f = new test.generated.pg_catalog.routines.RiFkeyCheckIns();

		return f.asField();
	}

	/**
	 * Call pg_catalog.RI_FKey_check_upd
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object riFkeyCheckUpd(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RiFkeyCheckUpd f = new test.generated.pg_catalog.routines.RiFkeyCheckUpd();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.RI_FKey_check_upd as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> riFkeyCheckUpd() {
		test.generated.pg_catalog.routines.RiFkeyCheckUpd f = new test.generated.pg_catalog.routines.RiFkeyCheckUpd();

		return f.asField();
	}

	/**
	 * Call pg_catalog.RI_FKey_noaction_del
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object riFkeyNoactionDel(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RiFkeyNoactionDel f = new test.generated.pg_catalog.routines.RiFkeyNoactionDel();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.RI_FKey_noaction_del as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> riFkeyNoactionDel() {
		test.generated.pg_catalog.routines.RiFkeyNoactionDel f = new test.generated.pg_catalog.routines.RiFkeyNoactionDel();

		return f.asField();
	}

	/**
	 * Call pg_catalog.RI_FKey_noaction_upd
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object riFkeyNoactionUpd(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RiFkeyNoactionUpd f = new test.generated.pg_catalog.routines.RiFkeyNoactionUpd();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.RI_FKey_noaction_upd as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> riFkeyNoactionUpd() {
		test.generated.pg_catalog.routines.RiFkeyNoactionUpd f = new test.generated.pg_catalog.routines.RiFkeyNoactionUpd();

		return f.asField();
	}

	/**
	 * Call pg_catalog.RI_FKey_restrict_del
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object riFkeyRestrictDel(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RiFkeyRestrictDel f = new test.generated.pg_catalog.routines.RiFkeyRestrictDel();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.RI_FKey_restrict_del as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> riFkeyRestrictDel() {
		test.generated.pg_catalog.routines.RiFkeyRestrictDel f = new test.generated.pg_catalog.routines.RiFkeyRestrictDel();

		return f.asField();
	}

	/**
	 * Call pg_catalog.RI_FKey_restrict_upd
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object riFkeyRestrictUpd(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RiFkeyRestrictUpd f = new test.generated.pg_catalog.routines.RiFkeyRestrictUpd();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.RI_FKey_restrict_upd as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> riFkeyRestrictUpd() {
		test.generated.pg_catalog.routines.RiFkeyRestrictUpd f = new test.generated.pg_catalog.routines.RiFkeyRestrictUpd();

		return f.asField();
	}

	/**
	 * Call pg_catalog.RI_FKey_setdefault_del
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object riFkeySetdefaultDel(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RiFkeySetdefaultDel f = new test.generated.pg_catalog.routines.RiFkeySetdefaultDel();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.RI_FKey_setdefault_del as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> riFkeySetdefaultDel() {
		test.generated.pg_catalog.routines.RiFkeySetdefaultDel f = new test.generated.pg_catalog.routines.RiFkeySetdefaultDel();

		return f.asField();
	}

	/**
	 * Call pg_catalog.RI_FKey_setdefault_upd
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object riFkeySetdefaultUpd(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RiFkeySetdefaultUpd f = new test.generated.pg_catalog.routines.RiFkeySetdefaultUpd();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.RI_FKey_setdefault_upd as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> riFkeySetdefaultUpd() {
		test.generated.pg_catalog.routines.RiFkeySetdefaultUpd f = new test.generated.pg_catalog.routines.RiFkeySetdefaultUpd();

		return f.asField();
	}

	/**
	 * Call pg_catalog.RI_FKey_setnull_del
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object riFkeySetnullDel(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RiFkeySetnullDel f = new test.generated.pg_catalog.routines.RiFkeySetnullDel();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.RI_FKey_setnull_del as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> riFkeySetnullDel() {
		test.generated.pg_catalog.routines.RiFkeySetnullDel f = new test.generated.pg_catalog.routines.RiFkeySetnullDel();

		return f.asField();
	}

	/**
	 * Call pg_catalog.RI_FKey_setnull_upd
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object riFkeySetnullUpd(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RiFkeySetnullUpd f = new test.generated.pg_catalog.routines.RiFkeySetnullUpd();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.RI_FKey_setnull_upd as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> riFkeySetnullUpd() {
		test.generated.pg_catalog.routines.RiFkeySetnullUpd f = new test.generated.pg_catalog.routines.RiFkeySetnullUpd();

		return f.asField();
	}

	/**
	 * Call pg_catalog.round
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal round3(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Round3 f = new test.generated.pg_catalog.routines.Round3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.round as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> round3(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Round3 f = new test.generated.pg_catalog.routines.Round3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.round as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> round3(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Round3 f = new test.generated.pg_catalog.routines.Round3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.round
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal round2(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Round2 f = new test.generated.pg_catalog.routines.Round2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.round as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> round2(java.math.BigDecimal __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Round2 f = new test.generated.pg_catalog.routines.Round2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.round as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> round2(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Round2 f = new test.generated.pg_catalog.routines.Round2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.round
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double round1(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Round1 f = new test.generated.pg_catalog.routines.Round1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.round as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> round1(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Round1 f = new test.generated.pg_catalog.routines.Round1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.round as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> round1(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Round1 f = new test.generated.pg_catalog.routines.Round1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.row_number
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long rowNumber(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.RowNumber f = new test.generated.pg_catalog.routines.RowNumber();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.row_number as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> rowNumber() {
		test.generated.pg_catalog.routines.RowNumber f = new test.generated.pg_catalog.routines.RowNumber();

		return f.asField();
	}

	/**
	 * Call pg_catalog.rpad
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String rpad1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.Rpad1 f = new test.generated.pg_catalog.routines.Rpad1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.rpad as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> rpad1(java.lang.String __1, java.lang.Integer __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.Rpad1 f = new test.generated.pg_catalog.routines.Rpad1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.rpad as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> rpad1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.Rpad1 f = new test.generated.pg_catalog.routines.Rpad1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.rpad
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String rpad2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Rpad2 f = new test.generated.pg_catalog.routines.Rpad2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.rpad as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> rpad2(java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Rpad2 f = new test.generated.pg_catalog.routines.Rpad2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.rpad as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> rpad2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Rpad2 f = new test.generated.pg_catalog.routines.Rpad2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.rtrim
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String rtrim1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Rtrim1 f = new test.generated.pg_catalog.routines.Rtrim1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.rtrim as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> rtrim1(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Rtrim1 f = new test.generated.pg_catalog.routines.Rtrim1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.rtrim as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> rtrim1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Rtrim1 f = new test.generated.pg_catalog.routines.Rtrim1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.rtrim
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String rtrim2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Rtrim2 f = new test.generated.pg_catalog.routines.Rtrim2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.rtrim as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> rtrim2(java.lang.String __1) {
		test.generated.pg_catalog.routines.Rtrim2 f = new test.generated.pg_catalog.routines.Rtrim2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.rtrim as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> rtrim2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Rtrim2 f = new test.generated.pg_catalog.routines.Rtrim2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.scalargtjoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double scalargtjoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Scalargtjoinsel f = new test.generated.pg_catalog.routines.Scalargtjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.scalargtjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> scalargtjoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Scalargtjoinsel f = new test.generated.pg_catalog.routines.Scalargtjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.scalargtjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> scalargtjoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Scalargtjoinsel f = new test.generated.pg_catalog.routines.Scalargtjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.scalargtsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double scalargtsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Scalargtsel f = new test.generated.pg_catalog.routines.Scalargtsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.scalargtsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> scalargtsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Scalargtsel f = new test.generated.pg_catalog.routines.Scalargtsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.scalargtsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> scalargtsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Scalargtsel f = new test.generated.pg_catalog.routines.Scalargtsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.scalarltjoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double scalarltjoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Scalarltjoinsel f = new test.generated.pg_catalog.routines.Scalarltjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.scalarltjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> scalarltjoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Scalarltjoinsel f = new test.generated.pg_catalog.routines.Scalarltjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.scalarltjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> scalarltjoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Scalarltjoinsel f = new test.generated.pg_catalog.routines.Scalarltjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.scalarltsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double scalarltsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Scalarltsel f = new test.generated.pg_catalog.routines.Scalarltsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.scalarltsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> scalarltsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Scalarltsel f = new test.generated.pg_catalog.routines.Scalarltsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.scalarltsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> scalarltsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Scalarltsel f = new test.generated.pg_catalog.routines.Scalarltsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.schema_to_xml
	 *
	 * @param schema
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object schemaToXml(org.jooq.Configuration configuration, java.lang.String schema, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.SchemaToXml f = new test.generated.pg_catalog.routines.SchemaToXml();
		f.setSchema_(schema);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.schema_to_xml as a field
	 *
	 * @param schema
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> schemaToXml(java.lang.String schema, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.SchemaToXml f = new test.generated.pg_catalog.routines.SchemaToXml();
		f.setSchema_(schema);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.schema_to_xml as a field
	 *
	 * @param schema
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> schemaToXml(org.jooq.Field<java.lang.String> schema, org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.SchemaToXml f = new test.generated.pg_catalog.routines.SchemaToXml();
		f.setSchema_(schema);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.schema_to_xml_and_xmlschema
	 *
	 * @param schema
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object schemaToXmlAndXmlschema(org.jooq.Configuration configuration, java.lang.String schema, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.SchemaToXmlAndXmlschema f = new test.generated.pg_catalog.routines.SchemaToXmlAndXmlschema();
		f.setSchema_(schema);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.schema_to_xml_and_xmlschema as a field
	 *
	 * @param schema
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> schemaToXmlAndXmlschema(java.lang.String schema, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.SchemaToXmlAndXmlschema f = new test.generated.pg_catalog.routines.SchemaToXmlAndXmlschema();
		f.setSchema_(schema);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.schema_to_xml_and_xmlschema as a field
	 *
	 * @param schema
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> schemaToXmlAndXmlschema(org.jooq.Field<java.lang.String> schema, org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.SchemaToXmlAndXmlschema f = new test.generated.pg_catalog.routines.SchemaToXmlAndXmlschema();
		f.setSchema_(schema);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.schema_to_xmlschema
	 *
	 * @param schema
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object schemaToXmlschema(org.jooq.Configuration configuration, java.lang.String schema, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.SchemaToXmlschema f = new test.generated.pg_catalog.routines.SchemaToXmlschema();
		f.setSchema_(schema);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.schema_to_xmlschema as a field
	 *
	 * @param schema
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> schemaToXmlschema(java.lang.String schema, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.SchemaToXmlschema f = new test.generated.pg_catalog.routines.SchemaToXmlschema();
		f.setSchema_(schema);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.schema_to_xmlschema as a field
	 *
	 * @param schema
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> schemaToXmlschema(org.jooq.Field<java.lang.String> schema, org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.SchemaToXmlschema f = new test.generated.pg_catalog.routines.SchemaToXmlschema();
		f.setSchema_(schema);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.session_user
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String sessionUser(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.SessionUser f = new test.generated.pg_catalog.routines.SessionUser();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.session_user as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> sessionUser() {
		test.generated.pg_catalog.routines.SessionUser f = new test.generated.pg_catalog.routines.SessionUser();

		return f.asField();
	}

	/**
	 * Call pg_catalog.set_bit
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String setBit1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.SetBit1 f = new test.generated.pg_catalog.routines.SetBit1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.set_bit as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> setBit1(java.lang.String __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.SetBit1 f = new test.generated.pg_catalog.routines.SetBit1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.set_bit as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> setBit1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.SetBit1 f = new test.generated.pg_catalog.routines.SetBit1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.set_bit
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] setBit2(org.jooq.Configuration configuration, byte[] __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.SetBit2 f = new test.generated.pg_catalog.routines.SetBit2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.set_bit as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<byte[]> setBit2(byte[] __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.SetBit2 f = new test.generated.pg_catalog.routines.SetBit2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.set_bit as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<byte[]> setBit2(org.jooq.Field<byte[]> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.SetBit2 f = new test.generated.pg_catalog.routines.SetBit2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.set_byte
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] setByte(org.jooq.Configuration configuration, byte[] __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.SetByte f = new test.generated.pg_catalog.routines.SetByte();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.set_byte as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<byte[]> setByte(byte[] __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.SetByte f = new test.generated.pg_catalog.routines.SetByte();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.set_byte as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<byte[]> setByte(org.jooq.Field<byte[]> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.SetByte f = new test.generated.pg_catalog.routines.SetByte();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.set_config
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String setConfig(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.SetConfig f = new test.generated.pg_catalog.routines.SetConfig();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.set_config as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> setConfig(java.lang.String __1, java.lang.String __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.SetConfig f = new test.generated.pg_catalog.routines.SetConfig();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.set_config as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> setConfig(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.Boolean> __3) {
		test.generated.pg_catalog.routines.SetConfig f = new test.generated.pg_catalog.routines.SetConfig();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.set_masklen
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object setMasklen2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.SetMasklen2 f = new test.generated.pg_catalog.routines.SetMasklen2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.set_masklen as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> setMasklen2(java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.SetMasklen2 f = new test.generated.pg_catalog.routines.SetMasklen2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.set_masklen as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> setMasklen2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.SetMasklen2 f = new test.generated.pg_catalog.routines.SetMasklen2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.set_masklen
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object setMasklen1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.SetMasklen1 f = new test.generated.pg_catalog.routines.SetMasklen1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.set_masklen as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> setMasklen1(java.lang.Object __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.SetMasklen1 f = new test.generated.pg_catalog.routines.SetMasklen1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.set_masklen as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> setMasklen1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.SetMasklen1 f = new test.generated.pg_catalog.routines.SetMasklen1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.setseed
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void setseed(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Setseed p = new test.generated.pg_catalog.routines.Setseed();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.setval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long setval1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Setval1 f = new test.generated.pg_catalog.routines.Setval1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.setval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> setval1(java.lang.Object __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Setval1 f = new test.generated.pg_catalog.routines.Setval1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.setval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> setval1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Setval1 f = new test.generated.pg_catalog.routines.Setval1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.setval
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long setval2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.Setval2 f = new test.generated.pg_catalog.routines.Setval2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.setval as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Long> setval2(java.lang.Object __1, java.lang.Long __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.Setval2 f = new test.generated.pg_catalog.routines.Setval2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.setval as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Long> setval2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Boolean> __3) {
		test.generated.pg_catalog.routines.Setval2 f = new test.generated.pg_catalog.routines.Setval2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.setweight
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object setweight(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Setweight f = new test.generated.pg_catalog.routines.Setweight();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.setweight as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> setweight(java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Setweight f = new test.generated.pg_catalog.routines.Setweight();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.setweight as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> setweight(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Setweight f = new test.generated.pg_catalog.routines.Setweight();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.shell_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object shellIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.ShellIn f = new test.generated.pg_catalog.routines.ShellIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.shell_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> shellIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.ShellIn f = new test.generated.pg_catalog.routines.ShellIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.shell_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> shellIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.ShellIn f = new test.generated.pg_catalog.routines.ShellIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.shell_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object shellOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.ShellOut f = new test.generated.pg_catalog.routines.ShellOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.shell_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> shellOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.ShellOut f = new test.generated.pg_catalog.routines.ShellOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.shell_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> shellOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.ShellOut f = new test.generated.pg_catalog.routines.ShellOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.shift_jis_2004_to_euc_jis_2004
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void shiftJis_2004ToEucJis_2004(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.ShiftJis_2004ToEucJis_2004 p = new test.generated.pg_catalog.routines.ShiftJis_2004ToEucJis_2004();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.shift_jis_2004_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void shiftJis_2004ToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.ShiftJis_2004ToUtf8 p = new test.generated.pg_catalog.routines.ShiftJis_2004ToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.shobj_description
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String shobjDescription(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ShobjDescription f = new test.generated.pg_catalog.routines.ShobjDescription();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.shobj_description as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> shobjDescription(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ShobjDescription f = new test.generated.pg_catalog.routines.ShobjDescription();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.shobj_description as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> shobjDescription(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ShobjDescription f = new test.generated.pg_catalog.routines.ShobjDescription();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sign
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal sign1(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Sign1 f = new test.generated.pg_catalog.routines.Sign1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sign as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> sign1(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Sign1 f = new test.generated.pg_catalog.routines.Sign1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sign as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> sign1(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Sign1 f = new test.generated.pg_catalog.routines.Sign1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sign
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double sign2(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Sign2 f = new test.generated.pg_catalog.routines.Sign2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sign as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> sign2(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Sign2 f = new test.generated.pg_catalog.routines.Sign2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sign as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> sign2(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Sign2 f = new test.generated.pg_catalog.routines.Sign2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.similar_escape
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String similarEscape(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.SimilarEscape f = new test.generated.pg_catalog.routines.SimilarEscape();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.similar_escape as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> similarEscape(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.SimilarEscape f = new test.generated.pg_catalog.routines.SimilarEscape();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.similar_escape as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> similarEscape(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.SimilarEscape f = new test.generated.pg_catalog.routines.SimilarEscape();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double sin(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Sin f = new test.generated.pg_catalog.routines.Sin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> sin(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Sin f = new test.generated.pg_catalog.routines.Sin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> sin(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Sin f = new test.generated.pg_catalog.routines.Sin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sjis_to_euc_jp
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void sjisToEucJp(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.SjisToEucJp p = new test.generated.pg_catalog.routines.SjisToEucJp();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.sjis_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void sjisToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.SjisToMic p = new test.generated.pg_catalog.routines.SjisToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.sjis_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void sjisToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.SjisToUtf8 p = new test.generated.pg_catalog.routines.SjisToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.slope
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double slope(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Slope f = new test.generated.pg_catalog.routines.Slope();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.slope as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> slope(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Slope f = new test.generated.pg_catalog.routines.Slope();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.slope as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Double> slope(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Slope f = new test.generated.pg_catalog.routines.Slope();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.smgreq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean smgreq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Smgreq f = new test.generated.pg_catalog.routines.Smgreq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.smgreq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> smgreq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Smgreq f = new test.generated.pg_catalog.routines.Smgreq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.smgreq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> smgreq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Smgreq f = new test.generated.pg_catalog.routines.Smgreq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.smgrin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object smgrin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Smgrin f = new test.generated.pg_catalog.routines.Smgrin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.smgrin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> smgrin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Smgrin f = new test.generated.pg_catalog.routines.Smgrin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.smgrin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> smgrin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Smgrin f = new test.generated.pg_catalog.routines.Smgrin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.smgrne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean smgrne(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Smgrne f = new test.generated.pg_catalog.routines.Smgrne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.smgrne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> smgrne(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Smgrne f = new test.generated.pg_catalog.routines.Smgrne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.smgrne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> smgrne(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Smgrne f = new test.generated.pg_catalog.routines.Smgrne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.smgrout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object smgrout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Smgrout f = new test.generated.pg_catalog.routines.Smgrout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.smgrout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> smgrout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Smgrout f = new test.generated.pg_catalog.routines.Smgrout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.smgrout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> smgrout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Smgrout f = new test.generated.pg_catalog.routines.Smgrout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.split_part
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String splitPart(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.SplitPart f = new test.generated.pg_catalog.routines.SplitPart();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.split_part as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> splitPart(java.lang.String __1, java.lang.String __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.SplitPart f = new test.generated.pg_catalog.routines.SplitPart();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.split_part as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> splitPart(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.SplitPart f = new test.generated.pg_catalog.routines.SplitPart();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sqrt
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double sqrt1(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Sqrt1 f = new test.generated.pg_catalog.routines.Sqrt1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sqrt as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> sqrt1(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Sqrt1 f = new test.generated.pg_catalog.routines.Sqrt1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sqrt as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> sqrt1(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Sqrt1 f = new test.generated.pg_catalog.routines.Sqrt1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sqrt
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal sqrt2(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Sqrt2 f = new test.generated.pg_catalog.routines.Sqrt2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sqrt as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> sqrt2(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Sqrt2 f = new test.generated.pg_catalog.routines.Sqrt2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sqrt as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> sqrt2(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Sqrt2 f = new test.generated.pg_catalog.routines.Sqrt2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.statement_timestamp
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp statementTimestamp(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.StatementTimestamp f = new test.generated.pg_catalog.routines.StatementTimestamp();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.statement_timestamp as a field
	 *
	 */
	public static org.jooq.Field<java.sql.Timestamp> statementTimestamp() {
		test.generated.pg_catalog.routines.StatementTimestamp f = new test.generated.pg_catalog.routines.StatementTimestamp();

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal stddev3(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Stddev3 f = new test.generated.pg_catalog.routines.Stddev3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddev3(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Stddev3 f = new test.generated.pg_catalog.routines.Stddev3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddev3(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Stddev3 f = new test.generated.pg_catalog.routines.Stddev3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double stddev4(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Stddev4 f = new test.generated.pg_catalog.routines.Stddev4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> stddev4(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Stddev4 f = new test.generated.pg_catalog.routines.Stddev4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> stddev4(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Stddev4 f = new test.generated.pg_catalog.routines.Stddev4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal stddev2(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Stddev2 f = new test.generated.pg_catalog.routines.Stddev2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddev2(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Stddev2 f = new test.generated.pg_catalog.routines.Stddev2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddev2(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Stddev2 f = new test.generated.pg_catalog.routines.Stddev2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal stddev6(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Stddev6 f = new test.generated.pg_catalog.routines.Stddev6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddev6(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Stddev6 f = new test.generated.pg_catalog.routines.Stddev6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddev6(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Stddev6 f = new test.generated.pg_catalog.routines.Stddev6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal stddev1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Stddev1 f = new test.generated.pg_catalog.routines.Stddev1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddev1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Stddev1 f = new test.generated.pg_catalog.routines.Stddev1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddev1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Stddev1 f = new test.generated.pg_catalog.routines.Stddev1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double stddev5(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Stddev5 f = new test.generated.pg_catalog.routines.Stddev5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> stddev5(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Stddev5 f = new test.generated.pg_catalog.routines.Stddev5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> stddev5(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Stddev5 f = new test.generated.pg_catalog.routines.Stddev5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double stddevPop4(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.StddevPop4 f = new test.generated.pg_catalog.routines.StddevPop4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> stddevPop4(java.lang.Float __1) {
		test.generated.pg_catalog.routines.StddevPop4 f = new test.generated.pg_catalog.routines.StddevPop4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> stddevPop4(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.StddevPop4 f = new test.generated.pg_catalog.routines.StddevPop4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal stddevPop1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.StddevPop1 f = new test.generated.pg_catalog.routines.StddevPop1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevPop1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.StddevPop1 f = new test.generated.pg_catalog.routines.StddevPop1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevPop1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.StddevPop1 f = new test.generated.pg_catalog.routines.StddevPop1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal stddevPop2(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.StddevPop2 f = new test.generated.pg_catalog.routines.StddevPop2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevPop2(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.StddevPop2 f = new test.generated.pg_catalog.routines.StddevPop2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevPop2(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.StddevPop2 f = new test.generated.pg_catalog.routines.StddevPop2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal stddevPop3(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.StddevPop3 f = new test.generated.pg_catalog.routines.StddevPop3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevPop3(java.lang.Short __1) {
		test.generated.pg_catalog.routines.StddevPop3 f = new test.generated.pg_catalog.routines.StddevPop3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevPop3(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.StddevPop3 f = new test.generated.pg_catalog.routines.StddevPop3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double stddevPop5(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.StddevPop5 f = new test.generated.pg_catalog.routines.StddevPop5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> stddevPop5(java.lang.Double __1) {
		test.generated.pg_catalog.routines.StddevPop5 f = new test.generated.pg_catalog.routines.StddevPop5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> stddevPop5(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.StddevPop5 f = new test.generated.pg_catalog.routines.StddevPop5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal stddevPop6(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.StddevPop6 f = new test.generated.pg_catalog.routines.StddevPop6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevPop6(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.StddevPop6 f = new test.generated.pg_catalog.routines.StddevPop6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevPop6(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.StddevPop6 f = new test.generated.pg_catalog.routines.StddevPop6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double stddevSamp4(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.StddevSamp4 f = new test.generated.pg_catalog.routines.StddevSamp4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> stddevSamp4(java.lang.Float __1) {
		test.generated.pg_catalog.routines.StddevSamp4 f = new test.generated.pg_catalog.routines.StddevSamp4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> stddevSamp4(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.StddevSamp4 f = new test.generated.pg_catalog.routines.StddevSamp4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal stddevSamp1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.StddevSamp1 f = new test.generated.pg_catalog.routines.StddevSamp1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevSamp1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.StddevSamp1 f = new test.generated.pg_catalog.routines.StddevSamp1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevSamp1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.StddevSamp1 f = new test.generated.pg_catalog.routines.StddevSamp1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal stddevSamp2(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.StddevSamp2 f = new test.generated.pg_catalog.routines.StddevSamp2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevSamp2(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.StddevSamp2 f = new test.generated.pg_catalog.routines.StddevSamp2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevSamp2(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.StddevSamp2 f = new test.generated.pg_catalog.routines.StddevSamp2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal stddevSamp3(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.StddevSamp3 f = new test.generated.pg_catalog.routines.StddevSamp3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevSamp3(java.lang.Short __1) {
		test.generated.pg_catalog.routines.StddevSamp3 f = new test.generated.pg_catalog.routines.StddevSamp3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevSamp3(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.StddevSamp3 f = new test.generated.pg_catalog.routines.StddevSamp3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal stddevSamp6(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.StddevSamp6 f = new test.generated.pg_catalog.routines.StddevSamp6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevSamp6(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.StddevSamp6 f = new test.generated.pg_catalog.routines.StddevSamp6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> stddevSamp6(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.StddevSamp6 f = new test.generated.pg_catalog.routines.StddevSamp6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.stddev_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double stddevSamp5(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.StddevSamp5 f = new test.generated.pg_catalog.routines.StddevSamp5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> stddevSamp5(java.lang.Double __1) {
		test.generated.pg_catalog.routines.StddevSamp5 f = new test.generated.pg_catalog.routines.StddevSamp5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.stddev_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> stddevSamp5(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.StddevSamp5 f = new test.generated.pg_catalog.routines.StddevSamp5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.string_agg
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String stringAgg(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.StringAgg f = new test.generated.pg_catalog.routines.StringAgg();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.string_agg as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> stringAgg(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.StringAgg f = new test.generated.pg_catalog.routines.StringAgg();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.string_agg as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> stringAgg(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.StringAgg f = new test.generated.pg_catalog.routines.StringAgg();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.string_agg_finalfn
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String stringAggFinalfn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.StringAggFinalfn f = new test.generated.pg_catalog.routines.StringAggFinalfn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.string_agg_finalfn as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> stringAggFinalfn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.StringAggFinalfn f = new test.generated.pg_catalog.routines.StringAggFinalfn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.string_agg_finalfn as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> stringAggFinalfn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.StringAggFinalfn f = new test.generated.pg_catalog.routines.StringAggFinalfn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.string_agg_transfn
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object stringAggTransfn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.StringAggTransfn f = new test.generated.pg_catalog.routines.StringAggTransfn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.string_agg_transfn as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> stringAggTransfn(java.lang.Object __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.StringAggTransfn f = new test.generated.pg_catalog.routines.StringAggTransfn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.string_agg_transfn as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> stringAggTransfn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.StringAggTransfn f = new test.generated.pg_catalog.routines.StringAggTransfn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.string_to_array
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String[] stringToArray(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.StringToArray f = new test.generated.pg_catalog.routines.StringToArray();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.string_to_array as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String[]> stringToArray(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.StringToArray f = new test.generated.pg_catalog.routines.StringToArray();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.string_to_array as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String[]> stringToArray(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.StringToArray f = new test.generated.pg_catalog.routines.StringToArray();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.strip
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object strip(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Strip f = new test.generated.pg_catalog.routines.Strip();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.strip as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> strip(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Strip f = new test.generated.pg_catalog.routines.Strip();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.strip as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> strip(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Strip f = new test.generated.pg_catalog.routines.Strip();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.strpos
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer strpos(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Strpos f = new test.generated.pg_catalog.routines.Strpos();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.strpos as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> strpos(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Strpos f = new test.generated.pg_catalog.routines.Strpos();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.strpos as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> strpos(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Strpos f = new test.generated.pg_catalog.routines.Strpos();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.substr
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] substr2(org.jooq.Configuration configuration, byte[] __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Substr2 f = new test.generated.pg_catalog.routines.Substr2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.substr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> substr2(byte[] __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Substr2 f = new test.generated.pg_catalog.routines.Substr2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.substr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> substr2(org.jooq.Field<byte[]> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Substr2 f = new test.generated.pg_catalog.routines.Substr2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.substr
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String substr4(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Substr4 f = new test.generated.pg_catalog.routines.Substr4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.substr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> substr4(java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Substr4 f = new test.generated.pg_catalog.routines.Substr4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.substr as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> substr4(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Substr4 f = new test.generated.pg_catalog.routines.Substr4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.substr
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] substr1(org.jooq.Configuration configuration, byte[] __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Substr1 f = new test.generated.pg_catalog.routines.Substr1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.substr as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<byte[]> substr1(byte[] __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Substr1 f = new test.generated.pg_catalog.routines.Substr1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.substr as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<byte[]> substr1(org.jooq.Field<byte[]> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.Substr1 f = new test.generated.pg_catalog.routines.Substr1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.substr
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String substr3(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Substr3 f = new test.generated.pg_catalog.routines.Substr3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.substr as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> substr3(java.lang.String __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Substr3 f = new test.generated.pg_catalog.routines.Substr3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.substr as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> substr3(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.Substr3 f = new test.generated.pg_catalog.routines.Substr3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.substring
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String substring1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Substring1 f = new test.generated.pg_catalog.routines.Substring1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> substring1(java.lang.String __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Substring1 f = new test.generated.pg_catalog.routines.Substring1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> substring1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.Substring1 f = new test.generated.pg_catalog.routines.Substring1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.substring
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String substring8(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Substring8 f = new test.generated.pg_catalog.routines.Substring8();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> substring8(java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Substring8 f = new test.generated.pg_catalog.routines.Substring8();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> substring8(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Substring8 f = new test.generated.pg_catalog.routines.Substring8();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.substring
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String substring7(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Substring7 f = new test.generated.pg_catalog.routines.Substring7();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> substring7(java.lang.String __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Substring7 f = new test.generated.pg_catalog.routines.Substring7();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> substring7(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.Substring7 f = new test.generated.pg_catalog.routines.Substring7();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.substring
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] substring3(org.jooq.Configuration configuration, byte[] __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Substring3 f = new test.generated.pg_catalog.routines.Substring3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<byte[]> substring3(byte[] __1, java.lang.Integer __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Substring3 f = new test.generated.pg_catalog.routines.Substring3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<byte[]> substring3(org.jooq.Field<byte[]> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.Substring3 f = new test.generated.pg_catalog.routines.Substring3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.substring
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] substring4(org.jooq.Configuration configuration, byte[] __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Substring4 f = new test.generated.pg_catalog.routines.Substring4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> substring4(byte[] __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Substring4 f = new test.generated.pg_catalog.routines.Substring4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<byte[]> substring4(org.jooq.Field<byte[]> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Substring4 f = new test.generated.pg_catalog.routines.Substring4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.substring
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String substring2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Substring2 f = new test.generated.pg_catalog.routines.Substring2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> substring2(java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Substring2 f = new test.generated.pg_catalog.routines.Substring2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> substring2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Substring2 f = new test.generated.pg_catalog.routines.Substring2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.substring
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String substring6(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.Substring6 f = new test.generated.pg_catalog.routines.Substring6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> substring6(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.Substring6 f = new test.generated.pg_catalog.routines.Substring6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> substring6(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.Substring6 f = new test.generated.pg_catalog.routines.Substring6();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.substring
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String substring5(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Substring5 f = new test.generated.pg_catalog.routines.Substring5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> substring5(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Substring5 f = new test.generated.pg_catalog.routines.Substring5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.substring as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> substring5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Substring5 f = new test.generated.pg_catalog.routines.Substring5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sum
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal sum1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Sum1 f = new test.generated.pg_catalog.routines.Sum1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> sum1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Sum1 f = new test.generated.pg_catalog.routines.Sum1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> sum1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Sum1 f = new test.generated.pg_catalog.routines.Sum1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sum
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal sum8(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Sum8 f = new test.generated.pg_catalog.routines.Sum8();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> sum8(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Sum8 f = new test.generated.pg_catalog.routines.Sum8();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> sum8(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Sum8 f = new test.generated.pg_catalog.routines.Sum8();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sum
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object sum7(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Sum7 f = new test.generated.pg_catalog.routines.Sum7();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> sum7(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Sum7 f = new test.generated.pg_catalog.routines.Sum7();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> sum7(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Sum7 f = new test.generated.pg_catalog.routines.Sum7();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sum
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal sum6(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Sum6 f = new test.generated.pg_catalog.routines.Sum6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> sum6(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Sum6 f = new test.generated.pg_catalog.routines.Sum6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> sum6(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Sum6 f = new test.generated.pg_catalog.routines.Sum6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sum
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double sum5(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Sum5 f = new test.generated.pg_catalog.routines.Sum5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> sum5(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Sum5 f = new test.generated.pg_catalog.routines.Sum5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> sum5(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Sum5 f = new test.generated.pg_catalog.routines.Sum5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sum
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float sum4(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Sum4 f = new test.generated.pg_catalog.routines.Sum4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> sum4(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Sum4 f = new test.generated.pg_catalog.routines.Sum4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Float> sum4(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Sum4 f = new test.generated.pg_catalog.routines.Sum4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sum
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long sum3(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Sum3 f = new test.generated.pg_catalog.routines.Sum3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> sum3(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Sum3 f = new test.generated.pg_catalog.routines.Sum3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> sum3(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Sum3 f = new test.generated.pg_catalog.routines.Sum3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.sum
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long sum2(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Sum2 f = new test.generated.pg_catalog.routines.Sum2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> sum2(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Sum2 f = new test.generated.pg_catalog.routines.Sum2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.sum as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> sum2(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Sum2 f = new test.generated.pg_catalog.routines.Sum2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.suppress_redundant_updates_trigger
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object suppressRedundantUpdatesTrigger(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.SuppressRedundantUpdatesTrigger f = new test.generated.pg_catalog.routines.SuppressRedundantUpdatesTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.suppress_redundant_updates_trigger as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> suppressRedundantUpdatesTrigger() {
		test.generated.pg_catalog.routines.SuppressRedundantUpdatesTrigger f = new test.generated.pg_catalog.routines.SuppressRedundantUpdatesTrigger();

		return f.asField();
	}

	/**
	 * Call pg_catalog.table_to_xml
	 *
	 * @param tbl
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tableToXml(org.jooq.Configuration configuration, java.lang.Object tbl, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.TableToXml f = new test.generated.pg_catalog.routines.TableToXml();
		f.setTbl(tbl);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.table_to_xml as a field
	 *
	 * @param tbl
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> tableToXml(java.lang.Object tbl, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.TableToXml f = new test.generated.pg_catalog.routines.TableToXml();
		f.setTbl(tbl);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.table_to_xml as a field
	 *
	 * @param tbl
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> tableToXml(org.jooq.Field<java.lang.Object> tbl, org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.TableToXml f = new test.generated.pg_catalog.routines.TableToXml();
		f.setTbl(tbl);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.table_to_xml_and_xmlschema
	 *
	 * @param tbl
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tableToXmlAndXmlschema(org.jooq.Configuration configuration, java.lang.Object tbl, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.TableToXmlAndXmlschema f = new test.generated.pg_catalog.routines.TableToXmlAndXmlschema();
		f.setTbl(tbl);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.table_to_xml_and_xmlschema as a field
	 *
	 * @param tbl
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> tableToXmlAndXmlschema(java.lang.Object tbl, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.TableToXmlAndXmlschema f = new test.generated.pg_catalog.routines.TableToXmlAndXmlschema();
		f.setTbl(tbl);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.table_to_xml_and_xmlschema as a field
	 *
	 * @param tbl
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> tableToXmlAndXmlschema(org.jooq.Field<java.lang.Object> tbl, org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.TableToXmlAndXmlschema f = new test.generated.pg_catalog.routines.TableToXmlAndXmlschema();
		f.setTbl(tbl);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.table_to_xmlschema
	 *
	 * @param tbl
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tableToXmlschema(org.jooq.Configuration configuration, java.lang.Object tbl, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.TableToXmlschema f = new test.generated.pg_catalog.routines.TableToXmlschema();
		f.setTbl(tbl);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.table_to_xmlschema as a field
	 *
	 * @param tbl
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> tableToXmlschema(java.lang.Object tbl, java.lang.Boolean nulls, java.lang.Boolean tableforest, java.lang.String targetns) {
		test.generated.pg_catalog.routines.TableToXmlschema f = new test.generated.pg_catalog.routines.TableToXmlschema();
		f.setTbl(tbl);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Get pg_catalog.table_to_xmlschema as a field
	 *
	 * @param tbl
	 * @param nulls
	 * @param tableforest
	 * @param targetns
	 */
	public static org.jooq.Field<java.lang.Object> tableToXmlschema(org.jooq.Field<java.lang.Object> tbl, org.jooq.Field<java.lang.Boolean> nulls, org.jooq.Field<java.lang.Boolean> tableforest, org.jooq.Field<java.lang.String> targetns) {
		test.generated.pg_catalog.routines.TableToXmlschema f = new test.generated.pg_catalog.routines.TableToXmlschema();
		f.setTbl(tbl);
		f.setNulls(nulls);
		f.setTableforest(tableforest);
		f.setTargetns(targetns);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tan
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double tan(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Tan f = new test.generated.pg_catalog.routines.Tan();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tan as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> tan(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Tan f = new test.generated.pg_catalog.routines.Tan();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tan as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> tan(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Tan f = new test.generated.pg_catalog.routines.Tan();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String text2(org.jooq.Configuration configuration, java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.Text2 f = new test.generated.pg_catalog.routines.Text2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> text2(java.lang.Boolean __1) {
		test.generated.pg_catalog.routines.Text2 f = new test.generated.pg_catalog.routines.Text2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> text2(org.jooq.Field<java.lang.Boolean> __1) {
		test.generated.pg_catalog.routines.Text2 f = new test.generated.pg_catalog.routines.Text2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String text4(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Text4 f = new test.generated.pg_catalog.routines.Text4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> text4(java.lang.String __1) {
		test.generated.pg_catalog.routines.Text4 f = new test.generated.pg_catalog.routines.Text4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> text4(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Text4 f = new test.generated.pg_catalog.routines.Text4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String text3(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Text3 f = new test.generated.pg_catalog.routines.Text3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> text3(java.lang.String __1) {
		test.generated.pg_catalog.routines.Text3 f = new test.generated.pg_catalog.routines.Text3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> text3(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Text3 f = new test.generated.pg_catalog.routines.Text3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String text5(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Text5 f = new test.generated.pg_catalog.routines.Text5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> text5(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Text5 f = new test.generated.pg_catalog.routines.Text5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> text5(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Text5 f = new test.generated.pg_catalog.routines.Text5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String text6(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Text6 f = new test.generated.pg_catalog.routines.Text6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> text6(java.lang.String __1) {
		test.generated.pg_catalog.routines.Text6 f = new test.generated.pg_catalog.routines.Text6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> text6(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Text6 f = new test.generated.pg_catalog.routines.Text6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String text1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Text1 f = new test.generated.pg_catalog.routines.Text1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> text1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Text1 f = new test.generated.pg_catalog.routines.Text1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> text1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Text1 f = new test.generated.pg_catalog.routines.Text1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textGe(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextGe f = new test.generated.pg_catalog.routines.TextGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textGe(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextGe f = new test.generated.pg_catalog.routines.TextGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textGe(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TextGe f = new test.generated.pg_catalog.routines.TextGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textGt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextGt f = new test.generated.pg_catalog.routines.TextGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textGt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextGt f = new test.generated.pg_catalog.routines.TextGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textGt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TextGt f = new test.generated.pg_catalog.routines.TextGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text_larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String textLarger(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextLarger f = new test.generated.pg_catalog.routines.TextLarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> textLarger(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextLarger f = new test.generated.pg_catalog.routines.TextLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> textLarger(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TextLarger f = new test.generated.pg_catalog.routines.TextLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textLe(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextLe f = new test.generated.pg_catalog.routines.TextLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textLe(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextLe f = new test.generated.pg_catalog.routines.TextLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textLe(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TextLe f = new test.generated.pg_catalog.routines.TextLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textLt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextLt f = new test.generated.pg_catalog.routines.TextLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textLt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextLt f = new test.generated.pg_catalog.routines.TextLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textLt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TextLt f = new test.generated.pg_catalog.routines.TextLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text_pattern_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textPatternGe(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextPatternGe f = new test.generated.pg_catalog.routines.TextPatternGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text_pattern_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textPatternGe(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextPatternGe f = new test.generated.pg_catalog.routines.TextPatternGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text_pattern_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textPatternGe(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TextPatternGe f = new test.generated.pg_catalog.routines.TextPatternGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text_pattern_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textPatternGt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextPatternGt f = new test.generated.pg_catalog.routines.TextPatternGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text_pattern_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textPatternGt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextPatternGt f = new test.generated.pg_catalog.routines.TextPatternGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text_pattern_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textPatternGt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TextPatternGt f = new test.generated.pg_catalog.routines.TextPatternGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text_pattern_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textPatternLe(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextPatternLe f = new test.generated.pg_catalog.routines.TextPatternLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text_pattern_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textPatternLe(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextPatternLe f = new test.generated.pg_catalog.routines.TextPatternLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text_pattern_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textPatternLe(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TextPatternLe f = new test.generated.pg_catalog.routines.TextPatternLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text_pattern_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textPatternLt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextPatternLt f = new test.generated.pg_catalog.routines.TextPatternLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text_pattern_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textPatternLt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextPatternLt f = new test.generated.pg_catalog.routines.TextPatternLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text_pattern_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textPatternLt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TextPatternLt f = new test.generated.pg_catalog.routines.TextPatternLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.text_smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String textSmaller(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextSmaller f = new test.generated.pg_catalog.routines.TextSmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.text_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> textSmaller(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TextSmaller f = new test.generated.pg_catalog.routines.TextSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.text_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> textSmaller(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TextSmaller f = new test.generated.pg_catalog.routines.TextSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.textanycat
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String textanycat(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Textanycat f = new test.generated.pg_catalog.routines.Textanycat();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.textanycat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> textanycat(java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Textanycat f = new test.generated.pg_catalog.routines.Textanycat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.textanycat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> textanycat(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Textanycat f = new test.generated.pg_catalog.routines.Textanycat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.textcat
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String textcat(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Textcat f = new test.generated.pg_catalog.routines.Textcat();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.textcat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> textcat(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Textcat f = new test.generated.pg_catalog.routines.Textcat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.textcat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> textcat(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Textcat f = new test.generated.pg_catalog.routines.Textcat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.texteq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean texteq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Texteq f = new test.generated.pg_catalog.routines.Texteq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.texteq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> texteq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Texteq f = new test.generated.pg_catalog.routines.Texteq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.texteq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> texteq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Texteq f = new test.generated.pg_catalog.routines.Texteq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.texticlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean texticlike(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Texticlike f = new test.generated.pg_catalog.routines.Texticlike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.texticlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> texticlike(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Texticlike f = new test.generated.pg_catalog.routines.Texticlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.texticlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> texticlike(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Texticlike f = new test.generated.pg_catalog.routines.Texticlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.texticnlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean texticnlike(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Texticnlike f = new test.generated.pg_catalog.routines.Texticnlike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.texticnlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> texticnlike(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Texticnlike f = new test.generated.pg_catalog.routines.Texticnlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.texticnlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> texticnlike(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Texticnlike f = new test.generated.pg_catalog.routines.Texticnlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.texticregexeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean texticregexeq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Texticregexeq f = new test.generated.pg_catalog.routines.Texticregexeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.texticregexeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> texticregexeq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Texticregexeq f = new test.generated.pg_catalog.routines.Texticregexeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.texticregexeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> texticregexeq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Texticregexeq f = new test.generated.pg_catalog.routines.Texticregexeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.texticregexne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean texticregexne(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Texticregexne f = new test.generated.pg_catalog.routines.Texticregexne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.texticregexne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> texticregexne(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Texticregexne f = new test.generated.pg_catalog.routines.Texticregexne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.texticregexne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> texticregexne(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Texticregexne f = new test.generated.pg_catalog.routines.Texticregexne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.textin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String textin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Textin f = new test.generated.pg_catalog.routines.Textin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.textin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> textin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Textin f = new test.generated.pg_catalog.routines.Textin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.textin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> textin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Textin f = new test.generated.pg_catalog.routines.Textin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.textlen
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer textlen(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Textlen f = new test.generated.pg_catalog.routines.Textlen();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.textlen as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> textlen(java.lang.String __1) {
		test.generated.pg_catalog.routines.Textlen f = new test.generated.pg_catalog.routines.Textlen();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.textlen as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> textlen(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Textlen f = new test.generated.pg_catalog.routines.Textlen();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.textlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textlike(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Textlike f = new test.generated.pg_catalog.routines.Textlike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.textlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textlike(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Textlike f = new test.generated.pg_catalog.routines.Textlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.textlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textlike(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Textlike f = new test.generated.pg_catalog.routines.Textlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.textne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textne(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Textne f = new test.generated.pg_catalog.routines.Textne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.textne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textne(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Textne f = new test.generated.pg_catalog.routines.Textne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.textne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textne(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Textne f = new test.generated.pg_catalog.routines.Textne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.textnlike
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textnlike(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Textnlike f = new test.generated.pg_catalog.routines.Textnlike();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.textnlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textnlike(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Textnlike f = new test.generated.pg_catalog.routines.Textnlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.textnlike as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textnlike(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Textnlike f = new test.generated.pg_catalog.routines.Textnlike();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.textout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object textout(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Textout f = new test.generated.pg_catalog.routines.Textout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.textout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> textout(java.lang.String __1) {
		test.generated.pg_catalog.routines.Textout f = new test.generated.pg_catalog.routines.Textout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.textout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> textout(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Textout f = new test.generated.pg_catalog.routines.Textout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.textrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String textrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Textrecv f = new test.generated.pg_catalog.routines.Textrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.textrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> textrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Textrecv f = new test.generated.pg_catalog.routines.Textrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.textrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> textrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Textrecv f = new test.generated.pg_catalog.routines.Textrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.textregexeq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textregexeq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Textregexeq f = new test.generated.pg_catalog.routines.Textregexeq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.textregexeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textregexeq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Textregexeq f = new test.generated.pg_catalog.routines.Textregexeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.textregexeq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textregexeq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Textregexeq f = new test.generated.pg_catalog.routines.Textregexeq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.textregexne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean textregexne(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Textregexne f = new test.generated.pg_catalog.routines.Textregexne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.textregexne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textregexne(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Textregexne f = new test.generated.pg_catalog.routines.Textregexne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.textregexne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> textregexne(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Textregexne f = new test.generated.pg_catalog.routines.Textregexne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.textsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] textsend(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Textsend f = new test.generated.pg_catalog.routines.Textsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.textsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> textsend(java.lang.String __1) {
		test.generated.pg_catalog.routines.Textsend f = new test.generated.pg_catalog.routines.Textsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.textsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> textsend(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Textsend f = new test.generated.pg_catalog.routines.Textsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.thesaurus_init
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object thesaurusInit(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.ThesaurusInit f = new test.generated.pg_catalog.routines.ThesaurusInit();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.thesaurus_init as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> thesaurusInit(java.lang.Object __1) {
		test.generated.pg_catalog.routines.ThesaurusInit f = new test.generated.pg_catalog.routines.ThesaurusInit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.thesaurus_init as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> thesaurusInit(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.ThesaurusInit f = new test.generated.pg_catalog.routines.ThesaurusInit();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.thesaurus_lexize
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object thesaurusLexize(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.ThesaurusLexize f = new test.generated.pg_catalog.routines.ThesaurusLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.thesaurus_lexize as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> thesaurusLexize(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3, java.lang.Object __4) {
		test.generated.pg_catalog.routines.ThesaurusLexize f = new test.generated.pg_catalog.routines.ThesaurusLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.thesaurus_lexize as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Object> thesaurusLexize(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Object> __4) {
		test.generated.pg_catalog.routines.ThesaurusLexize f = new test.generated.pg_catalog.routines.ThesaurusLexize();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tideq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tideq(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tideq f = new test.generated.pg_catalog.routines.Tideq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tideq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tideq(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tideq f = new test.generated.pg_catalog.routines.Tideq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tideq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tideq(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Tideq f = new test.generated.pg_catalog.routines.Tideq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tidge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tidge(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidge f = new test.generated.pg_catalog.routines.Tidge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tidge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tidge(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidge f = new test.generated.pg_catalog.routines.Tidge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tidge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tidge(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Tidge f = new test.generated.pg_catalog.routines.Tidge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tidgt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tidgt(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidgt f = new test.generated.pg_catalog.routines.Tidgt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tidgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tidgt(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidgt f = new test.generated.pg_catalog.routines.Tidgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tidgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tidgt(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Tidgt f = new test.generated.pg_catalog.routines.Tidgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tidin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long tidin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tidin f = new test.generated.pg_catalog.routines.Tidin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tidin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> tidin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tidin f = new test.generated.pg_catalog.routines.Tidin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tidin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> tidin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tidin f = new test.generated.pg_catalog.routines.Tidin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tidlarger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long tidlarger(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidlarger f = new test.generated.pg_catalog.routines.Tidlarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tidlarger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> tidlarger(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidlarger f = new test.generated.pg_catalog.routines.Tidlarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tidlarger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> tidlarger(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Tidlarger f = new test.generated.pg_catalog.routines.Tidlarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tidle
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tidle(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidle f = new test.generated.pg_catalog.routines.Tidle();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tidle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tidle(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidle f = new test.generated.pg_catalog.routines.Tidle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tidle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tidle(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Tidle f = new test.generated.pg_catalog.routines.Tidle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tidlt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tidlt(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidlt f = new test.generated.pg_catalog.routines.Tidlt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tidlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tidlt(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidlt f = new test.generated.pg_catalog.routines.Tidlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tidlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tidlt(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Tidlt f = new test.generated.pg_catalog.routines.Tidlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tidne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tidne(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidne f = new test.generated.pg_catalog.routines.Tidne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tidne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tidne(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidne f = new test.generated.pg_catalog.routines.Tidne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tidne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tidne(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Tidne f = new test.generated.pg_catalog.routines.Tidne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tidout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tidout(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Tidout f = new test.generated.pg_catalog.routines.Tidout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tidout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tidout(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Tidout f = new test.generated.pg_catalog.routines.Tidout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tidout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tidout(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Tidout f = new test.generated.pg_catalog.routines.Tidout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tidrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long tidrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tidrecv f = new test.generated.pg_catalog.routines.Tidrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tidrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> tidrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tidrecv f = new test.generated.pg_catalog.routines.Tidrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tidrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> tidrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tidrecv f = new test.generated.pg_catalog.routines.Tidrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tidsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] tidsend(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Tidsend f = new test.generated.pg_catalog.routines.Tidsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tidsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> tidsend(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Tidsend f = new test.generated.pg_catalog.routines.Tidsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tidsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> tidsend(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Tidsend f = new test.generated.pg_catalog.routines.Tidsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tidsmaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long tidsmaller(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidsmaller f = new test.generated.pg_catalog.routines.Tidsmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tidsmaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> tidsmaller(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Tidsmaller f = new test.generated.pg_catalog.routines.Tidsmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tidsmaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Long> tidsmaller(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Tidsmaller f = new test.generated.pg_catalog.routines.Tidsmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time time6(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.Time6 f = new test.generated.pg_catalog.routines.Time6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> time6(java.sql.Time __1) {
		test.generated.pg_catalog.routines.Time6 f = new test.generated.pg_catalog.routines.Time6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> time6(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.Time6 f = new test.generated.pg_catalog.routines.Time6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time time4(org.jooq.Configuration configuration, java.sql.Time __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Time4 f = new test.generated.pg_catalog.routines.Time4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> time4(java.sql.Time __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Time4 f = new test.generated.pg_catalog.routines.Time4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> time4(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Time4 f = new test.generated.pg_catalog.routines.Time4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time time2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Time2 f = new test.generated.pg_catalog.routines.Time2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> time2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Time2 f = new test.generated.pg_catalog.routines.Time2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> time2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Time2 f = new test.generated.pg_catalog.routines.Time2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time time5(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Time5 f = new test.generated.pg_catalog.routines.Time5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> time5(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Time5 f = new test.generated.pg_catalog.routines.Time5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> time5(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Time5 f = new test.generated.pg_catalog.routines.Time5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time time1(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Time1 f = new test.generated.pg_catalog.routines.Time1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> time1(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Time1 f = new test.generated.pg_catalog.routines.Time1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> time1(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Time1 f = new test.generated.pg_catalog.routines.Time1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time time3(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Time3 f = new test.generated.pg_catalog.routines.Time3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> time3(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Time3 f = new test.generated.pg_catalog.routines.Time3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> time3(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Time3 f = new test.generated.pg_catalog.routines.Time3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timeCmp(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeCmp f = new test.generated.pg_catalog.routines.TimeCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timeCmp(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeCmp f = new test.generated.pg_catalog.routines.TimeCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timeCmp(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimeCmp f = new test.generated.pg_catalog.routines.TimeCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timeEq(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeEq f = new test.generated.pg_catalog.routines.TimeEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timeEq(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeEq f = new test.generated.pg_catalog.routines.TimeEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timeEq(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimeEq f = new test.generated.pg_catalog.routines.TimeEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timeGe(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeGe f = new test.generated.pg_catalog.routines.TimeGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timeGe(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeGe f = new test.generated.pg_catalog.routines.TimeGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timeGe(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimeGe f = new test.generated.pg_catalog.routines.TimeGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timeGt(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeGt f = new test.generated.pg_catalog.routines.TimeGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timeGt(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeGt f = new test.generated.pg_catalog.routines.TimeGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timeGt(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimeGt f = new test.generated.pg_catalog.routines.TimeGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_hash
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timeHash(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.TimeHash f = new test.generated.pg_catalog.routines.TimeHash();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_hash as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timeHash(java.sql.Time __1) {
		test.generated.pg_catalog.routines.TimeHash f = new test.generated.pg_catalog.routines.TimeHash();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_hash as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timeHash(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.TimeHash f = new test.generated.pg_catalog.routines.TimeHash();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_in
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timeIn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimeIn f = new test.generated.pg_catalog.routines.TimeIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Time> timeIn(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimeIn f = new test.generated.pg_catalog.routines.TimeIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Time> timeIn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.TimeIn f = new test.generated.pg_catalog.routines.TimeIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timeLarger(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeLarger f = new test.generated.pg_catalog.routines.TimeLarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timeLarger(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeLarger f = new test.generated.pg_catalog.routines.TimeLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timeLarger(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimeLarger f = new test.generated.pg_catalog.routines.TimeLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timeLe(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeLe f = new test.generated.pg_catalog.routines.TimeLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timeLe(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeLe f = new test.generated.pg_catalog.routines.TimeLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timeLe(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimeLe f = new test.generated.pg_catalog.routines.TimeLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timeLt(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeLt f = new test.generated.pg_catalog.routines.TimeLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timeLt(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeLt f = new test.generated.pg_catalog.routines.TimeLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timeLt(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimeLt f = new test.generated.pg_catalog.routines.TimeLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_mi_interval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timeMiInterval(org.jooq.Configuration configuration, java.sql.Time __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimeMiInterval f = new test.generated.pg_catalog.routines.TimeMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_mi_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timeMiInterval(java.sql.Time __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimeMiInterval f = new test.generated.pg_catalog.routines.TimeMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_mi_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timeMiInterval(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TimeMiInterval f = new test.generated.pg_catalog.routines.TimeMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_mi_time
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timeMiTime(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeMiTime f = new test.generated.pg_catalog.routines.TimeMiTime();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_mi_time as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> timeMiTime(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeMiTime f = new test.generated.pg_catalog.routines.TimeMiTime();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_mi_time as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> timeMiTime(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimeMiTime f = new test.generated.pg_catalog.routines.TimeMiTime();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timeNe(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeNe f = new test.generated.pg_catalog.routines.TimeNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timeNe(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeNe f = new test.generated.pg_catalog.routines.TimeNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timeNe(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimeNe f = new test.generated.pg_catalog.routines.TimeNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timeOut(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.TimeOut f = new test.generated.pg_catalog.routines.TimeOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timeOut(java.sql.Time __1) {
		test.generated.pg_catalog.routines.TimeOut f = new test.generated.pg_catalog.routines.TimeOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timeOut(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.TimeOut f = new test.generated.pg_catalog.routines.TimeOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_pl_interval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timePlInterval(org.jooq.Configuration configuration, java.sql.Time __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimePlInterval f = new test.generated.pg_catalog.routines.TimePlInterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_pl_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timePlInterval(java.sql.Time __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimePlInterval f = new test.generated.pg_catalog.routines.TimePlInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_pl_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timePlInterval(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TimePlInterval f = new test.generated.pg_catalog.routines.TimePlInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_recv
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timeRecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimeRecv f = new test.generated.pg_catalog.routines.TimeRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Time> timeRecv(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimeRecv f = new test.generated.pg_catalog.routines.TimeRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Time> timeRecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.TimeRecv f = new test.generated.pg_catalog.routines.TimeRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] timeSend(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.TimeSend f = new test.generated.pg_catalog.routines.TimeSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> timeSend(java.sql.Time __1) {
		test.generated.pg_catalog.routines.TimeSend f = new test.generated.pg_catalog.routines.TimeSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> timeSend(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.TimeSend f = new test.generated.pg_catalog.routines.TimeSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.time_smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timeSmaller(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeSmaller f = new test.generated.pg_catalog.routines.TimeSmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.time_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timeSmaller(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimeSmaller f = new test.generated.pg_catalog.routines.TimeSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.time_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timeSmaller(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimeSmaller f = new test.generated.pg_catalog.routines.TimeSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timedate_pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timedatePl(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimedatePl f = new test.generated.pg_catalog.routines.TimedatePl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timedate_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timedatePl(java.sql.Time __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimedatePl f = new test.generated.pg_catalog.routines.TimedatePl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timedate_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timedatePl(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimedatePl f = new test.generated.pg_catalog.routines.TimedatePl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timemi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timemi(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Timemi f = new test.generated.pg_catalog.routines.Timemi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timemi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> timemi(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Timemi f = new test.generated.pg_catalog.routines.Timemi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timemi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> timemi(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Timemi f = new test.generated.pg_catalog.routines.Timemi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timenow
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timenow(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.Timenow f = new test.generated.pg_catalog.routines.Timenow();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timenow as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> timenow() {
		test.generated.pg_catalog.routines.Timenow f = new test.generated.pg_catalog.routines.Timenow();

		return f.asField();
	}

	/**
	 * Call pg_catalog.timeofday
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String timeofday(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.Timeofday f = new test.generated.pg_catalog.routines.Timeofday();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timeofday as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> timeofday() {
		test.generated.pg_catalog.routines.Timeofday f = new test.generated.pg_catalog.routines.Timeofday();

		return f.asField();
	}

	/**
	 * Call pg_catalog.timepl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timepl(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Timepl f = new test.generated.pg_catalog.routines.Timepl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timepl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> timepl(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Timepl f = new test.generated.pg_catalog.routines.Timepl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timepl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> timepl(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Timepl f = new test.generated.pg_catalog.routines.Timepl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamp3(org.jooq.Configuration configuration, java.sql.Date __1) {
		test.generated.pg_catalog.routines.Timestamp3 f = new test.generated.pg_catalog.routines.Timestamp3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamp3(java.sql.Date __1) {
		test.generated.pg_catalog.routines.Timestamp3 f = new test.generated.pg_catalog.routines.Timestamp3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamp3(org.jooq.Field<java.sql.Date> __1) {
		test.generated.pg_catalog.routines.Timestamp3 f = new test.generated.pg_catalog.routines.Timestamp3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamp1(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Timestamp1 f = new test.generated.pg_catalog.routines.Timestamp1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamp1(java.sql.Timestamp __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Timestamp1 f = new test.generated.pg_catalog.routines.Timestamp1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamp1(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Timestamp1 f = new test.generated.pg_catalog.routines.Timestamp1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamp2(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Timestamp2 f = new test.generated.pg_catalog.routines.Timestamp2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamp2(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Timestamp2 f = new test.generated.pg_catalog.routines.Timestamp2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamp2(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Timestamp2 f = new test.generated.pg_catalog.routines.Timestamp2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamp5(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Timestamp5 f = new test.generated.pg_catalog.routines.Timestamp5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamp5(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Timestamp5 f = new test.generated.pg_catalog.routines.Timestamp5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamp5(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Timestamp5 f = new test.generated.pg_catalog.routines.Timestamp5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamp4(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.Timestamp4 f = new test.generated.pg_catalog.routines.Timestamp4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamp4(java.sql.Date __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.Timestamp4 f = new test.generated.pg_catalog.routines.Timestamp4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamp4(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.Timestamp4 f = new test.generated.pg_catalog.routines.Timestamp4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timestampCmp(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampCmp f = new test.generated.pg_catalog.routines.TimestampCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timestampCmp(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampCmp f = new test.generated.pg_catalog.routines.TimestampCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timestampCmp(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampCmp f = new test.generated.pg_catalog.routines.TimestampCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_cmp_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timestampCmpDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampCmpDate f = new test.generated.pg_catalog.routines.TimestampCmpDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_cmp_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timestampCmpDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampCmpDate f = new test.generated.pg_catalog.routines.TimestampCmpDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_cmp_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timestampCmpDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestampCmpDate f = new test.generated.pg_catalog.routines.TimestampCmpDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_cmp_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timestampCmpTimestamptz(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampCmpTimestamptz f = new test.generated.pg_catalog.routines.TimestampCmpTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_cmp_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timestampCmpTimestamptz(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampCmpTimestamptz f = new test.generated.pg_catalog.routines.TimestampCmpTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_cmp_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timestampCmpTimestamptz(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampCmpTimestamptz f = new test.generated.pg_catalog.routines.TimestampCmpTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampEq(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampEq f = new test.generated.pg_catalog.routines.TimestampEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampEq(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampEq f = new test.generated.pg_catalog.routines.TimestampEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampEq(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampEq f = new test.generated.pg_catalog.routines.TimestampEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_eq_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampEqDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampEqDate f = new test.generated.pg_catalog.routines.TimestampEqDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_eq_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampEqDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampEqDate f = new test.generated.pg_catalog.routines.TimestampEqDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_eq_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampEqDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestampEqDate f = new test.generated.pg_catalog.routines.TimestampEqDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_eq_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampEqTimestamptz(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampEqTimestamptz f = new test.generated.pg_catalog.routines.TimestampEqTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_eq_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampEqTimestamptz(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampEqTimestamptz f = new test.generated.pg_catalog.routines.TimestampEqTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_eq_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampEqTimestamptz(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampEqTimestamptz f = new test.generated.pg_catalog.routines.TimestampEqTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampGe(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampGe f = new test.generated.pg_catalog.routines.TimestampGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampGe(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampGe f = new test.generated.pg_catalog.routines.TimestampGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampGe(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampGe f = new test.generated.pg_catalog.routines.TimestampGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_ge_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampGeDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampGeDate f = new test.generated.pg_catalog.routines.TimestampGeDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_ge_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampGeDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampGeDate f = new test.generated.pg_catalog.routines.TimestampGeDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_ge_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampGeDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestampGeDate f = new test.generated.pg_catalog.routines.TimestampGeDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_ge_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampGeTimestamptz(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampGeTimestamptz f = new test.generated.pg_catalog.routines.TimestampGeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_ge_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampGeTimestamptz(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampGeTimestamptz f = new test.generated.pg_catalog.routines.TimestampGeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_ge_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampGeTimestamptz(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampGeTimestamptz f = new test.generated.pg_catalog.routines.TimestampGeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampGt(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampGt f = new test.generated.pg_catalog.routines.TimestampGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampGt(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampGt f = new test.generated.pg_catalog.routines.TimestampGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampGt(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampGt f = new test.generated.pg_catalog.routines.TimestampGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_gt_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampGtDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampGtDate f = new test.generated.pg_catalog.routines.TimestampGtDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_gt_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampGtDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampGtDate f = new test.generated.pg_catalog.routines.TimestampGtDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_gt_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampGtDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestampGtDate f = new test.generated.pg_catalog.routines.TimestampGtDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_gt_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampGtTimestamptz(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampGtTimestamptz f = new test.generated.pg_catalog.routines.TimestampGtTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_gt_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampGtTimestamptz(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampGtTimestamptz f = new test.generated.pg_catalog.routines.TimestampGtTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_gt_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampGtTimestamptz(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampGtTimestamptz f = new test.generated.pg_catalog.routines.TimestampGtTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_hash
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timestampHash(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.TimestampHash f = new test.generated.pg_catalog.routines.TimestampHash();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_hash as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timestampHash(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.TimestampHash f = new test.generated.pg_catalog.routines.TimestampHash();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_hash as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timestampHash(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.TimestampHash f = new test.generated.pg_catalog.routines.TimestampHash();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_in
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestampIn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimestampIn f = new test.generated.pg_catalog.routines.TimestampIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestampIn(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimestampIn f = new test.generated.pg_catalog.routines.TimestampIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestampIn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.TimestampIn f = new test.generated.pg_catalog.routines.TimestampIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestampLarger(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampLarger f = new test.generated.pg_catalog.routines.TimestampLarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestampLarger(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampLarger f = new test.generated.pg_catalog.routines.TimestampLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestampLarger(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampLarger f = new test.generated.pg_catalog.routines.TimestampLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampLe(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampLe f = new test.generated.pg_catalog.routines.TimestampLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampLe(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampLe f = new test.generated.pg_catalog.routines.TimestampLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampLe(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampLe f = new test.generated.pg_catalog.routines.TimestampLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_le_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampLeDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampLeDate f = new test.generated.pg_catalog.routines.TimestampLeDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_le_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampLeDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampLeDate f = new test.generated.pg_catalog.routines.TimestampLeDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_le_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampLeDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestampLeDate f = new test.generated.pg_catalog.routines.TimestampLeDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_le_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampLeTimestamptz(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampLeTimestamptz f = new test.generated.pg_catalog.routines.TimestampLeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_le_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampLeTimestamptz(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampLeTimestamptz f = new test.generated.pg_catalog.routines.TimestampLeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_le_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampLeTimestamptz(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampLeTimestamptz f = new test.generated.pg_catalog.routines.TimestampLeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampLt(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampLt f = new test.generated.pg_catalog.routines.TimestampLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampLt(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampLt f = new test.generated.pg_catalog.routines.TimestampLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampLt(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampLt f = new test.generated.pg_catalog.routines.TimestampLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_lt_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampLtDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampLtDate f = new test.generated.pg_catalog.routines.TimestampLtDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_lt_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampLtDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampLtDate f = new test.generated.pg_catalog.routines.TimestampLtDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_lt_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampLtDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestampLtDate f = new test.generated.pg_catalog.routines.TimestampLtDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_lt_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampLtTimestamptz(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampLtTimestamptz f = new test.generated.pg_catalog.routines.TimestampLtTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_lt_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampLtTimestamptz(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampLtTimestamptz f = new test.generated.pg_catalog.routines.TimestampLtTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_lt_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampLtTimestamptz(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampLtTimestamptz f = new test.generated.pg_catalog.routines.TimestampLtTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timestampMi(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampMi f = new test.generated.pg_catalog.routines.TimestampMi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> timestampMi(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampMi f = new test.generated.pg_catalog.routines.TimestampMi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> timestampMi(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampMi f = new test.generated.pg_catalog.routines.TimestampMi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_mi_interval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestampMiInterval(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimestampMiInterval f = new test.generated.pg_catalog.routines.TimestampMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_mi_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestampMiInterval(java.sql.Timestamp __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimestampMiInterval f = new test.generated.pg_catalog.routines.TimestampMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_mi_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestampMiInterval(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TimestampMiInterval f = new test.generated.pg_catalog.routines.TimestampMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampNe(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampNe f = new test.generated.pg_catalog.routines.TimestampNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampNe(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampNe f = new test.generated.pg_catalog.routines.TimestampNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampNe(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampNe f = new test.generated.pg_catalog.routines.TimestampNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_ne_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampNeDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampNeDate f = new test.generated.pg_catalog.routines.TimestampNeDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_ne_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampNeDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestampNeDate f = new test.generated.pg_catalog.routines.TimestampNeDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_ne_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampNeDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestampNeDate f = new test.generated.pg_catalog.routines.TimestampNeDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_ne_timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestampNeTimestamptz(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampNeTimestamptz f = new test.generated.pg_catalog.routines.TimestampNeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_ne_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampNeTimestamptz(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampNeTimestamptz f = new test.generated.pg_catalog.routines.TimestampNeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_ne_timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestampNeTimestamptz(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampNeTimestamptz f = new test.generated.pg_catalog.routines.TimestampNeTimestamptz();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timestampOut(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.TimestampOut f = new test.generated.pg_catalog.routines.TimestampOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timestampOut(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.TimestampOut f = new test.generated.pg_catalog.routines.TimestampOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timestampOut(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.TimestampOut f = new test.generated.pg_catalog.routines.TimestampOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_pl_interval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestampPlInterval(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimestampPlInterval f = new test.generated.pg_catalog.routines.TimestampPlInterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_pl_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestampPlInterval(java.sql.Timestamp __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimestampPlInterval f = new test.generated.pg_catalog.routines.TimestampPlInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_pl_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestampPlInterval(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TimestampPlInterval f = new test.generated.pg_catalog.routines.TimestampPlInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_recv
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestampRecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimestampRecv f = new test.generated.pg_catalog.routines.TimestampRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestampRecv(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimestampRecv f = new test.generated.pg_catalog.routines.TimestampRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestampRecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.TimestampRecv f = new test.generated.pg_catalog.routines.TimestampRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] timestampSend(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.TimestampSend f = new test.generated.pg_catalog.routines.TimestampSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> timestampSend(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.TimestampSend f = new test.generated.pg_catalog.routines.TimestampSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> timestampSend(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.TimestampSend f = new test.generated.pg_catalog.routines.TimestampSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamp_smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestampSmaller(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampSmaller f = new test.generated.pg_catalog.routines.TimestampSmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamp_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestampSmaller(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestampSmaller f = new test.generated.pg_catalog.routines.TimestampSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamp_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestampSmaller(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestampSmaller f = new test.generated.pg_catalog.routines.TimestampSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptypmodin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timestamptypmodin(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Timestamptypmodin f = new test.generated.pg_catalog.routines.Timestamptypmodin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timestamptypmodin(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Timestamptypmodin f = new test.generated.pg_catalog.routines.Timestamptypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timestamptypmodin(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Timestamptypmodin f = new test.generated.pg_catalog.routines.Timestamptypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptypmodout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timestamptypmodout(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Timestamptypmodout f = new test.generated.pg_catalog.routines.Timestamptypmodout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timestamptypmodout(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Timestamptypmodout f = new test.generated.pg_catalog.routines.Timestamptypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timestamptypmodout(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Timestamptypmodout f = new test.generated.pg_catalog.routines.Timestamptypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamptz1(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Timestamptz1 f = new test.generated.pg_catalog.routines.Timestamptz1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptz1(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Timestamptz1 f = new test.generated.pg_catalog.routines.Timestamptz1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptz1(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Timestamptz1 f = new test.generated.pg_catalog.routines.Timestamptz1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamptz6(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Timestamptz6 f = new test.generated.pg_catalog.routines.Timestamptz6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptz6(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Timestamptz6 f = new test.generated.pg_catalog.routines.Timestamptz6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptz6(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Timestamptz6 f = new test.generated.pg_catalog.routines.Timestamptz6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamptz2(org.jooq.Configuration configuration, java.sql.Date __1) {
		test.generated.pg_catalog.routines.Timestamptz2 f = new test.generated.pg_catalog.routines.Timestamptz2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptz2(java.sql.Date __1) {
		test.generated.pg_catalog.routines.Timestamptz2 f = new test.generated.pg_catalog.routines.Timestamptz2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptz2(org.jooq.Field<java.sql.Date> __1) {
		test.generated.pg_catalog.routines.Timestamptz2 f = new test.generated.pg_catalog.routines.Timestamptz2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamptz3(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.Timestamptz3 f = new test.generated.pg_catalog.routines.Timestamptz3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptz3(java.sql.Date __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.Timestamptz3 f = new test.generated.pg_catalog.routines.Timestamptz3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptz3(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.Timestamptz3 f = new test.generated.pg_catalog.routines.Timestamptz3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamptz5(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Timestamptz5 f = new test.generated.pg_catalog.routines.Timestamptz5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptz5(java.sql.Timestamp __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Timestamptz5 f = new test.generated.pg_catalog.routines.Timestamptz5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptz5(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Timestamptz5 f = new test.generated.pg_catalog.routines.Timestamptz5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamptz4(org.jooq.Configuration configuration, java.sql.Date __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.Timestamptz4 f = new test.generated.pg_catalog.routines.Timestamptz4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptz4(java.sql.Date __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.Timestamptz4 f = new test.generated.pg_catalog.routines.Timestamptz4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptz4(org.jooq.Field<java.sql.Date> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.Timestamptz4 f = new test.generated.pg_catalog.routines.Timestamptz4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timestamptzCmp(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzCmp f = new test.generated.pg_catalog.routines.TimestamptzCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timestamptzCmp(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzCmp f = new test.generated.pg_catalog.routines.TimestamptzCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timestamptzCmp(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzCmp f = new test.generated.pg_catalog.routines.TimestamptzCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_cmp_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timestamptzCmpDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzCmpDate f = new test.generated.pg_catalog.routines.TimestamptzCmpDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_cmp_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timestamptzCmpDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzCmpDate f = new test.generated.pg_catalog.routines.TimestamptzCmpDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_cmp_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timestamptzCmpDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestamptzCmpDate f = new test.generated.pg_catalog.routines.TimestamptzCmpDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_cmp_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timestamptzCmpTimestamp(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzCmpTimestamp f = new test.generated.pg_catalog.routines.TimestamptzCmpTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_cmp_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timestamptzCmpTimestamp(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzCmpTimestamp f = new test.generated.pg_catalog.routines.TimestamptzCmpTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_cmp_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timestamptzCmpTimestamp(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzCmpTimestamp f = new test.generated.pg_catalog.routines.TimestamptzCmpTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzEq(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzEq f = new test.generated.pg_catalog.routines.TimestamptzEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzEq(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzEq f = new test.generated.pg_catalog.routines.TimestamptzEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzEq(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzEq f = new test.generated.pg_catalog.routines.TimestamptzEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_eq_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzEqDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzEqDate f = new test.generated.pg_catalog.routines.TimestamptzEqDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_eq_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzEqDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzEqDate f = new test.generated.pg_catalog.routines.TimestamptzEqDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_eq_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzEqDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestamptzEqDate f = new test.generated.pg_catalog.routines.TimestamptzEqDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_eq_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzEqTimestamp(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzEqTimestamp f = new test.generated.pg_catalog.routines.TimestamptzEqTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_eq_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzEqTimestamp(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzEqTimestamp f = new test.generated.pg_catalog.routines.TimestamptzEqTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_eq_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzEqTimestamp(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzEqTimestamp f = new test.generated.pg_catalog.routines.TimestamptzEqTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzGe(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzGe f = new test.generated.pg_catalog.routines.TimestamptzGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzGe(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzGe f = new test.generated.pg_catalog.routines.TimestamptzGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzGe(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzGe f = new test.generated.pg_catalog.routines.TimestamptzGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_ge_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzGeDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzGeDate f = new test.generated.pg_catalog.routines.TimestamptzGeDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_ge_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzGeDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzGeDate f = new test.generated.pg_catalog.routines.TimestamptzGeDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_ge_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzGeDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestamptzGeDate f = new test.generated.pg_catalog.routines.TimestamptzGeDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_ge_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzGeTimestamp(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzGeTimestamp f = new test.generated.pg_catalog.routines.TimestamptzGeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_ge_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzGeTimestamp(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzGeTimestamp f = new test.generated.pg_catalog.routines.TimestamptzGeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_ge_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzGeTimestamp(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzGeTimestamp f = new test.generated.pg_catalog.routines.TimestamptzGeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzGt(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzGt f = new test.generated.pg_catalog.routines.TimestamptzGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzGt(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzGt f = new test.generated.pg_catalog.routines.TimestamptzGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzGt(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzGt f = new test.generated.pg_catalog.routines.TimestamptzGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_gt_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzGtDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzGtDate f = new test.generated.pg_catalog.routines.TimestamptzGtDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_gt_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzGtDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzGtDate f = new test.generated.pg_catalog.routines.TimestamptzGtDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_gt_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzGtDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestamptzGtDate f = new test.generated.pg_catalog.routines.TimestamptzGtDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_gt_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzGtTimestamp(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzGtTimestamp f = new test.generated.pg_catalog.routines.TimestamptzGtTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_gt_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzGtTimestamp(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzGtTimestamp f = new test.generated.pg_catalog.routines.TimestamptzGtTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_gt_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzGtTimestamp(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzGtTimestamp f = new test.generated.pg_catalog.routines.TimestamptzGtTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_in
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamptzIn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimestamptzIn f = new test.generated.pg_catalog.routines.TimestamptzIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptzIn(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimestamptzIn f = new test.generated.pg_catalog.routines.TimestamptzIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptzIn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.TimestamptzIn f = new test.generated.pg_catalog.routines.TimestamptzIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamptzLarger(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzLarger f = new test.generated.pg_catalog.routines.TimestamptzLarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptzLarger(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzLarger f = new test.generated.pg_catalog.routines.TimestamptzLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptzLarger(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzLarger f = new test.generated.pg_catalog.routines.TimestamptzLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzLe(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzLe f = new test.generated.pg_catalog.routines.TimestamptzLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzLe(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzLe f = new test.generated.pg_catalog.routines.TimestamptzLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzLe(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzLe f = new test.generated.pg_catalog.routines.TimestamptzLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_le_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzLeDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzLeDate f = new test.generated.pg_catalog.routines.TimestamptzLeDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_le_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzLeDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzLeDate f = new test.generated.pg_catalog.routines.TimestamptzLeDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_le_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzLeDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestamptzLeDate f = new test.generated.pg_catalog.routines.TimestamptzLeDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_le_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzLeTimestamp(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzLeTimestamp f = new test.generated.pg_catalog.routines.TimestamptzLeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_le_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzLeTimestamp(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzLeTimestamp f = new test.generated.pg_catalog.routines.TimestamptzLeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_le_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzLeTimestamp(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzLeTimestamp f = new test.generated.pg_catalog.routines.TimestamptzLeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzLt(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzLt f = new test.generated.pg_catalog.routines.TimestamptzLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzLt(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzLt f = new test.generated.pg_catalog.routines.TimestamptzLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzLt(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzLt f = new test.generated.pg_catalog.routines.TimestamptzLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_lt_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzLtDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzLtDate f = new test.generated.pg_catalog.routines.TimestamptzLtDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_lt_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzLtDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzLtDate f = new test.generated.pg_catalog.routines.TimestamptzLtDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_lt_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzLtDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestamptzLtDate f = new test.generated.pg_catalog.routines.TimestamptzLtDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_lt_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzLtTimestamp(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzLtTimestamp f = new test.generated.pg_catalog.routines.TimestamptzLtTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_lt_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzLtTimestamp(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzLtTimestamp f = new test.generated.pg_catalog.routines.TimestamptzLtTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_lt_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzLtTimestamp(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzLtTimestamp f = new test.generated.pg_catalog.routines.TimestamptzLtTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_mi
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timestamptzMi(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzMi f = new test.generated.pg_catalog.routines.TimestamptzMi();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> timestamptzMi(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzMi f = new test.generated.pg_catalog.routines.TimestamptzMi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_mi as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> timestamptzMi(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzMi f = new test.generated.pg_catalog.routines.TimestamptzMi();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_mi_interval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamptzMiInterval(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimestamptzMiInterval f = new test.generated.pg_catalog.routines.TimestamptzMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_mi_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptzMiInterval(java.sql.Timestamp __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimestamptzMiInterval f = new test.generated.pg_catalog.routines.TimestamptzMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_mi_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptzMiInterval(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TimestamptzMiInterval f = new test.generated.pg_catalog.routines.TimestamptzMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzNe(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzNe f = new test.generated.pg_catalog.routines.TimestamptzNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzNe(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzNe f = new test.generated.pg_catalog.routines.TimestamptzNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzNe(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzNe f = new test.generated.pg_catalog.routines.TimestamptzNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_ne_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzNeDate(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzNeDate f = new test.generated.pg_catalog.routines.TimestamptzNeDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_ne_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzNeDate(java.sql.Timestamp __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimestamptzNeDate f = new test.generated.pg_catalog.routines.TimestamptzNeDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_ne_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzNeDate(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimestamptzNeDate f = new test.generated.pg_catalog.routines.TimestamptzNeDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_ne_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timestamptzNeTimestamp(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzNeTimestamp f = new test.generated.pg_catalog.routines.TimestamptzNeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_ne_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzNeTimestamp(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzNeTimestamp f = new test.generated.pg_catalog.routines.TimestamptzNeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_ne_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timestamptzNeTimestamp(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzNeTimestamp f = new test.generated.pg_catalog.routines.TimestamptzNeTimestamp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timestamptzOut(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.TimestamptzOut f = new test.generated.pg_catalog.routines.TimestamptzOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timestamptzOut(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.TimestamptzOut f = new test.generated.pg_catalog.routines.TimestamptzOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timestamptzOut(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.TimestamptzOut f = new test.generated.pg_catalog.routines.TimestamptzOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_pl_interval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamptzPlInterval(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimestamptzPlInterval f = new test.generated.pg_catalog.routines.TimestamptzPlInterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_pl_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptzPlInterval(java.sql.Timestamp __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimestamptzPlInterval f = new test.generated.pg_catalog.routines.TimestamptzPlInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_pl_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptzPlInterval(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TimestamptzPlInterval f = new test.generated.pg_catalog.routines.TimestamptzPlInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_recv
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamptzRecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimestamptzRecv f = new test.generated.pg_catalog.routines.TimestamptzRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptzRecv(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimestamptzRecv f = new test.generated.pg_catalog.routines.TimestamptzRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptzRecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.TimestamptzRecv f = new test.generated.pg_catalog.routines.TimestamptzRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] timestamptzSend(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.TimestamptzSend f = new test.generated.pg_catalog.routines.TimestamptzSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> timestamptzSend(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.TimestamptzSend f = new test.generated.pg_catalog.routines.TimestamptzSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> timestamptzSend(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.TimestamptzSend f = new test.generated.pg_catalog.routines.TimestamptzSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptz_smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timestamptzSmaller(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzSmaller f = new test.generated.pg_catalog.routines.TimestamptzSmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptz_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptzSmaller(java.sql.Timestamp __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.TimestamptzSmaller f = new test.generated.pg_catalog.routines.TimestamptzSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptz_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timestamptzSmaller(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.TimestamptzSmaller f = new test.generated.pg_catalog.routines.TimestamptzSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptztypmodin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timestamptztypmodin(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Timestamptztypmodin f = new test.generated.pg_catalog.routines.Timestamptztypmodin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptztypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timestamptztypmodin(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Timestamptztypmodin f = new test.generated.pg_catalog.routines.Timestamptztypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptztypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timestamptztypmodin(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Timestamptztypmodin f = new test.generated.pg_catalog.routines.Timestamptztypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timestamptztypmodout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timestamptztypmodout(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Timestamptztypmodout f = new test.generated.pg_catalog.routines.Timestamptztypmodout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timestamptztypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timestamptztypmodout(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Timestamptztypmodout f = new test.generated.pg_catalog.routines.Timestamptztypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timestamptztypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timestamptztypmodout(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Timestamptztypmodout f = new test.generated.pg_catalog.routines.Timestamptztypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetypmodin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timetypmodin(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Timetypmodin f = new test.generated.pg_catalog.routines.Timetypmodin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timetypmodin(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Timetypmodin f = new test.generated.pg_catalog.routines.Timetypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timetypmodin(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Timetypmodin f = new test.generated.pg_catalog.routines.Timetypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetypmodout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timetypmodout(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Timetypmodout f = new test.generated.pg_catalog.routines.Timetypmodout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timetypmodout(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Timetypmodout f = new test.generated.pg_catalog.routines.Timetypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timetypmodout(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Timetypmodout f = new test.generated.pg_catalog.routines.Timetypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timetz2(org.jooq.Configuration configuration, java.sql.Time __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Timetz2 f = new test.generated.pg_catalog.routines.Timetz2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timetz2(java.sql.Time __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Timetz2 f = new test.generated.pg_catalog.routines.Timetz2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timetz2(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Timetz2 f = new test.generated.pg_catalog.routines.Timetz2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timetz1(org.jooq.Configuration configuration, java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Timetz1 f = new test.generated.pg_catalog.routines.Timetz1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> timetz1(java.sql.Timestamp __1) {
		test.generated.pg_catalog.routines.Timetz1 f = new test.generated.pg_catalog.routines.Timetz1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> timetz1(org.jooq.Field<java.sql.Timestamp> __1) {
		test.generated.pg_catalog.routines.Timetz1 f = new test.generated.pg_catalog.routines.Timetz1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timetz3(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.Timetz3 f = new test.generated.pg_catalog.routines.Timetz3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> timetz3(java.sql.Time __1) {
		test.generated.pg_catalog.routines.Timetz3 f = new test.generated.pg_catalog.routines.Timetz3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Time> timetz3(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.Timetz3 f = new test.generated.pg_catalog.routines.Timetz3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timetzCmp(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzCmp f = new test.generated.pg_catalog.routines.TimetzCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timetzCmp(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzCmp f = new test.generated.pg_catalog.routines.TimetzCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> timetzCmp(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimetzCmp f = new test.generated.pg_catalog.routines.TimetzCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timetzEq(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzEq f = new test.generated.pg_catalog.routines.TimetzEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timetzEq(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzEq f = new test.generated.pg_catalog.routines.TimetzEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timetzEq(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimetzEq f = new test.generated.pg_catalog.routines.TimetzEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timetzGe(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzGe f = new test.generated.pg_catalog.routines.TimetzGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timetzGe(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzGe f = new test.generated.pg_catalog.routines.TimetzGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timetzGe(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimetzGe f = new test.generated.pg_catalog.routines.TimetzGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timetzGt(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzGt f = new test.generated.pg_catalog.routines.TimetzGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timetzGt(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzGt f = new test.generated.pg_catalog.routines.TimetzGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timetzGt(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimetzGt f = new test.generated.pg_catalog.routines.TimetzGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_hash
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timetzHash(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.TimetzHash f = new test.generated.pg_catalog.routines.TimetzHash();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_hash as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timetzHash(java.sql.Time __1) {
		test.generated.pg_catalog.routines.TimetzHash f = new test.generated.pg_catalog.routines.TimetzHash();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_hash as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timetzHash(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.TimetzHash f = new test.generated.pg_catalog.routines.TimetzHash();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_in
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timetzIn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimetzIn f = new test.generated.pg_catalog.routines.TimetzIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Time> timetzIn(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimetzIn f = new test.generated.pg_catalog.routines.TimetzIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Time> timetzIn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.TimetzIn f = new test.generated.pg_catalog.routines.TimetzIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_larger
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timetzLarger(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzLarger f = new test.generated.pg_catalog.routines.TimetzLarger();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timetzLarger(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzLarger f = new test.generated.pg_catalog.routines.TimetzLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_larger as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timetzLarger(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimetzLarger f = new test.generated.pg_catalog.routines.TimetzLarger();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timetzLe(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzLe f = new test.generated.pg_catalog.routines.TimetzLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timetzLe(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzLe f = new test.generated.pg_catalog.routines.TimetzLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timetzLe(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimetzLe f = new test.generated.pg_catalog.routines.TimetzLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timetzLt(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzLt f = new test.generated.pg_catalog.routines.TimetzLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timetzLt(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzLt f = new test.generated.pg_catalog.routines.TimetzLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timetzLt(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimetzLt f = new test.generated.pg_catalog.routines.TimetzLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_mi_interval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timetzMiInterval(org.jooq.Configuration configuration, java.sql.Time __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimetzMiInterval f = new test.generated.pg_catalog.routines.TimetzMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_mi_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timetzMiInterval(java.sql.Time __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimetzMiInterval f = new test.generated.pg_catalog.routines.TimetzMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_mi_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timetzMiInterval(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TimetzMiInterval f = new test.generated.pg_catalog.routines.TimetzMiInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean timetzNe(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzNe f = new test.generated.pg_catalog.routines.TimetzNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timetzNe(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzNe f = new test.generated.pg_catalog.routines.TimetzNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> timetzNe(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimetzNe f = new test.generated.pg_catalog.routines.TimetzNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timetzOut(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.TimetzOut f = new test.generated.pg_catalog.routines.TimetzOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timetzOut(java.sql.Time __1) {
		test.generated.pg_catalog.routines.TimetzOut f = new test.generated.pg_catalog.routines.TimetzOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timetzOut(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.TimetzOut f = new test.generated.pg_catalog.routines.TimetzOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_pl_interval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timetzPlInterval(org.jooq.Configuration configuration, java.sql.Time __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimetzPlInterval f = new test.generated.pg_catalog.routines.TimetzPlInterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_pl_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timetzPlInterval(java.sql.Time __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TimetzPlInterval f = new test.generated.pg_catalog.routines.TimetzPlInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_pl_interval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timetzPlInterval(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TimetzPlInterval f = new test.generated.pg_catalog.routines.TimetzPlInterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_recv
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timetzRecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimetzRecv f = new test.generated.pg_catalog.routines.TimetzRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Time> timetzRecv(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TimetzRecv f = new test.generated.pg_catalog.routines.TimetzRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.sql.Time> timetzRecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.TimetzRecv f = new test.generated.pg_catalog.routines.TimetzRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] timetzSend(org.jooq.Configuration configuration, java.sql.Time __1) {
		test.generated.pg_catalog.routines.TimetzSend f = new test.generated.pg_catalog.routines.TimetzSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> timetzSend(java.sql.Time __1) {
		test.generated.pg_catalog.routines.TimetzSend f = new test.generated.pg_catalog.routines.TimetzSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> timetzSend(org.jooq.Field<java.sql.Time> __1) {
		test.generated.pg_catalog.routines.TimetzSend f = new test.generated.pg_catalog.routines.TimetzSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetz_smaller
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timetzSmaller(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzSmaller f = new test.generated.pg_catalog.routines.TimetzSmaller();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetz_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timetzSmaller(java.sql.Time __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.TimetzSmaller f = new test.generated.pg_catalog.routines.TimetzSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetz_smaller as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timetzSmaller(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.TimetzSmaller f = new test.generated.pg_catalog.routines.TimetzSmaller();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetzdate_pl
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timetzdatePl(org.jooq.Configuration configuration, java.sql.Time __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimetzdatePl f = new test.generated.pg_catalog.routines.TimetzdatePl();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetzdate_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timetzdatePl(java.sql.Time __1, java.sql.Date __2) {
		test.generated.pg_catalog.routines.TimetzdatePl f = new test.generated.pg_catalog.routines.TimetzdatePl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetzdate_pl as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timetzdatePl(org.jooq.Field<java.sql.Time> __1, org.jooq.Field<java.sql.Date> __2) {
		test.generated.pg_catalog.routines.TimetzdatePl f = new test.generated.pg_catalog.routines.TimetzdatePl();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetztypmodin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer timetztypmodin(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Timetztypmodin f = new test.generated.pg_catalog.routines.Timetztypmodin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetztypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timetztypmodin(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Timetztypmodin f = new test.generated.pg_catalog.routines.Timetztypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetztypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> timetztypmodin(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Timetztypmodin f = new test.generated.pg_catalog.routines.Timetztypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timetztypmodout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object timetztypmodout(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Timetztypmodout f = new test.generated.pg_catalog.routines.Timetztypmodout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timetztypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timetztypmodout(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Timetztypmodout f = new test.generated.pg_catalog.routines.Timetztypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timetztypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> timetztypmodout(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Timetztypmodout f = new test.generated.pg_catalog.routines.Timetztypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timezone
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timezone2(org.jooq.Configuration configuration, java.lang.String __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.Timezone2 f = new test.generated.pg_catalog.routines.Timezone2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timezone as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timezone2(java.lang.String __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.Timezone2 f = new test.generated.pg_catalog.routines.Timezone2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timezone as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timezone2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.Timezone2 f = new test.generated.pg_catalog.routines.Timezone2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timezone
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timezone4(org.jooq.Configuration configuration, java.lang.Object __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.Timezone4 f = new test.generated.pg_catalog.routines.Timezone4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timezone as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timezone4(java.lang.Object __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.Timezone4 f = new test.generated.pg_catalog.routines.Timezone4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timezone as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timezone4(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.Timezone4 f = new test.generated.pg_catalog.routines.Timezone4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timezone
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Time timezone3(org.jooq.Configuration configuration, java.lang.String __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.Timezone3 f = new test.generated.pg_catalog.routines.Timezone3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timezone as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timezone3(java.lang.String __1, java.sql.Time __2) {
		test.generated.pg_catalog.routines.Timezone3 f = new test.generated.pg_catalog.routines.Timezone3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timezone as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Time> timezone3(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.sql.Time> __2) {
		test.generated.pg_catalog.routines.Timezone3 f = new test.generated.pg_catalog.routines.Timezone3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timezone
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timezone6(org.jooq.Configuration configuration, java.lang.Object __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.Timezone6 f = new test.generated.pg_catalog.routines.Timezone6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timezone as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timezone6(java.lang.Object __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.Timezone6 f = new test.generated.pg_catalog.routines.Timezone6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timezone as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timezone6(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.Timezone6 f = new test.generated.pg_catalog.routines.Timezone6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timezone
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timezone5(org.jooq.Configuration configuration, java.lang.String __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.Timezone5 f = new test.generated.pg_catalog.routines.Timezone5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timezone as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timezone5(java.lang.String __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.Timezone5 f = new test.generated.pg_catalog.routines.Timezone5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timezone as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timezone5(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.Timezone5 f = new test.generated.pg_catalog.routines.Timezone5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.timezone
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp timezone1(org.jooq.Configuration configuration, java.lang.Object __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.Timezone1 f = new test.generated.pg_catalog.routines.Timezone1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.timezone as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timezone1(java.lang.Object __1, java.sql.Timestamp __2) {
		test.generated.pg_catalog.routines.Timezone1 f = new test.generated.pg_catalog.routines.Timezone1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.timezone as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> timezone1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.sql.Timestamp> __2) {
		test.generated.pg_catalog.routines.Timezone1 f = new test.generated.pg_catalog.routines.Timezone1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tinterval
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tinterval(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tinterval f = new test.generated.pg_catalog.routines.Tinterval();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tinterval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> tinterval(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tinterval f = new test.generated.pg_catalog.routines.Tinterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tinterval as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> tinterval(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tinterval f = new test.generated.pg_catalog.routines.Tinterval();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalct
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervalct(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalct f = new test.generated.pg_catalog.routines.Tintervalct();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalct as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalct(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalct f = new test.generated.pg_catalog.routines.Tintervalct();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalct as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalct(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervalct f = new test.generated.pg_catalog.routines.Tintervalct();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tintervalend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalend f = new test.generated.pg_catalog.routines.Tintervalend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tintervalend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalend f = new test.generated.pg_catalog.routines.Tintervalend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tintervalend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tintervalend f = new test.generated.pg_catalog.routines.Tintervalend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervaleq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervaleq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervaleq f = new test.generated.pg_catalog.routines.Tintervaleq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervaleq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervaleq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervaleq f = new test.generated.pg_catalog.routines.Tintervaleq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervaleq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervaleq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervaleq f = new test.generated.pg_catalog.routines.Tintervaleq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervalge(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalge f = new test.generated.pg_catalog.routines.Tintervalge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalge(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalge f = new test.generated.pg_catalog.routines.Tintervalge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalge(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervalge f = new test.generated.pg_catalog.routines.Tintervalge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalgt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervalgt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalgt f = new test.generated.pg_catalog.routines.Tintervalgt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalgt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalgt f = new test.generated.pg_catalog.routines.Tintervalgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalgt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervalgt f = new test.generated.pg_catalog.routines.Tintervalgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tintervalin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalin f = new test.generated.pg_catalog.routines.Tintervalin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tintervalin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalin f = new test.generated.pg_catalog.routines.Tintervalin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tintervalin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tintervalin f = new test.generated.pg_catalog.routines.Tintervalin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalle
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervalle(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalle f = new test.generated.pg_catalog.routines.Tintervalle();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalle(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalle f = new test.generated.pg_catalog.routines.Tintervalle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalle(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervalle f = new test.generated.pg_catalog.routines.Tintervalle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalleneq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervalleneq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalleneq f = new test.generated.pg_catalog.routines.Tintervalleneq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalleneq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalleneq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalleneq f = new test.generated.pg_catalog.routines.Tintervalleneq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalleneq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalleneq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervalleneq f = new test.generated.pg_catalog.routines.Tintervalleneq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervallenge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervallenge(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervallenge f = new test.generated.pg_catalog.routines.Tintervallenge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervallenge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervallenge(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervallenge f = new test.generated.pg_catalog.routines.Tintervallenge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervallenge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervallenge(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervallenge f = new test.generated.pg_catalog.routines.Tintervallenge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervallengt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervallengt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervallengt f = new test.generated.pg_catalog.routines.Tintervallengt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervallengt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervallengt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervallengt f = new test.generated.pg_catalog.routines.Tintervallengt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervallengt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervallengt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervallengt f = new test.generated.pg_catalog.routines.Tintervallengt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervallenle
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervallenle(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervallenle f = new test.generated.pg_catalog.routines.Tintervallenle();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervallenle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervallenle(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervallenle f = new test.generated.pg_catalog.routines.Tintervallenle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervallenle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervallenle(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervallenle f = new test.generated.pg_catalog.routines.Tintervallenle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervallenlt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervallenlt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervallenlt f = new test.generated.pg_catalog.routines.Tintervallenlt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervallenlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervallenlt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervallenlt f = new test.generated.pg_catalog.routines.Tintervallenlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervallenlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervallenlt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervallenlt f = new test.generated.pg_catalog.routines.Tintervallenlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervallenne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervallenne(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervallenne f = new test.generated.pg_catalog.routines.Tintervallenne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervallenne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervallenne(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervallenne f = new test.generated.pg_catalog.routines.Tintervallenne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervallenne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervallenne(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervallenne f = new test.generated.pg_catalog.routines.Tintervallenne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervallt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervallt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervallt f = new test.generated.pg_catalog.routines.Tintervallt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervallt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervallt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervallt f = new test.generated.pg_catalog.routines.Tintervallt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervallt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervallt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervallt f = new test.generated.pg_catalog.routines.Tintervallt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervalne(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalne f = new test.generated.pg_catalog.routines.Tintervalne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalne(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalne f = new test.generated.pg_catalog.routines.Tintervalne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalne(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervalne f = new test.generated.pg_catalog.routines.Tintervalne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tintervalout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalout f = new test.generated.pg_catalog.routines.Tintervalout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tintervalout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalout f = new test.generated.pg_catalog.routines.Tintervalout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tintervalout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tintervalout f = new test.generated.pg_catalog.routines.Tintervalout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalov
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervalov(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalov f = new test.generated.pg_catalog.routines.Tintervalov();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalov as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalov(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalov f = new test.generated.pg_catalog.routines.Tintervalov();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalov as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalov(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervalov f = new test.generated.pg_catalog.routines.Tintervalov();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tintervalrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalrecv f = new test.generated.pg_catalog.routines.Tintervalrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tintervalrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalrecv f = new test.generated.pg_catalog.routines.Tintervalrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tintervalrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tintervalrecv f = new test.generated.pg_catalog.routines.Tintervalrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalrel
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tintervalrel(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalrel f = new test.generated.pg_catalog.routines.Tintervalrel();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalrel as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tintervalrel(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalrel f = new test.generated.pg_catalog.routines.Tintervalrel();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalrel as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tintervalrel(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tintervalrel f = new test.generated.pg_catalog.routines.Tintervalrel();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalsame
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tintervalsame(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalsame f = new test.generated.pg_catalog.routines.Tintervalsame();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalsame as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalsame(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Tintervalsame f = new test.generated.pg_catalog.routines.Tintervalsame();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalsame as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tintervalsame(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Tintervalsame f = new test.generated.pg_catalog.routines.Tintervalsame();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] tintervalsend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalsend f = new test.generated.pg_catalog.routines.Tintervalsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> tintervalsend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalsend f = new test.generated.pg_catalog.routines.Tintervalsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> tintervalsend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tintervalsend f = new test.generated.pg_catalog.routines.Tintervalsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tintervalstart
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tintervalstart(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalstart f = new test.generated.pg_catalog.routines.Tintervalstart();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tintervalstart as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tintervalstart(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tintervalstart f = new test.generated.pg_catalog.routines.Tintervalstart();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tintervalstart as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tintervalstart(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tintervalstart f = new test.generated.pg_catalog.routines.Tintervalstart();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_ascii
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toAscii3(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToAscii3 f = new test.generated.pg_catalog.routines.ToAscii3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_ascii as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toAscii3(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToAscii3 f = new test.generated.pg_catalog.routines.ToAscii3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_ascii as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toAscii3(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToAscii3 f = new test.generated.pg_catalog.routines.ToAscii3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_ascii
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toAscii1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.ToAscii1 f = new test.generated.pg_catalog.routines.ToAscii1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_ascii as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> toAscii1(java.lang.String __1) {
		test.generated.pg_catalog.routines.ToAscii1 f = new test.generated.pg_catalog.routines.ToAscii1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_ascii as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> toAscii1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.ToAscii1 f = new test.generated.pg_catalog.routines.ToAscii1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_ascii
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toAscii2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.ToAscii2 f = new test.generated.pg_catalog.routines.ToAscii2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_ascii as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toAscii2(java.lang.String __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.ToAscii2 f = new test.generated.pg_catalog.routines.ToAscii2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_ascii as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toAscii2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.ToAscii2 f = new test.generated.pg_catalog.routines.ToAscii2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_char
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toChar4(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar4 f = new test.generated.pg_catalog.routines.ToChar4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar4(java.lang.Integer __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar4 f = new test.generated.pg_catalog.routines.ToChar4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar4(org.jooq.Field<java.lang.Integer> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToChar4 f = new test.generated.pg_catalog.routines.ToChar4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_char
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toChar5(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar5 f = new test.generated.pg_catalog.routines.ToChar5();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar5(java.lang.Long __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar5 f = new test.generated.pg_catalog.routines.ToChar5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar5(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToChar5 f = new test.generated.pg_catalog.routines.ToChar5();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_char
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toChar2(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar2 f = new test.generated.pg_catalog.routines.ToChar2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar2(java.sql.Timestamp __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar2 f = new test.generated.pg_catalog.routines.ToChar2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar2(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToChar2 f = new test.generated.pg_catalog.routines.ToChar2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_char
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toChar6(org.jooq.Configuration configuration, java.lang.Float __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar6 f = new test.generated.pg_catalog.routines.ToChar6();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar6(java.lang.Float __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar6 f = new test.generated.pg_catalog.routines.ToChar6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar6(org.jooq.Field<java.lang.Float> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToChar6 f = new test.generated.pg_catalog.routines.ToChar6();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_char
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toChar3(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar3 f = new test.generated.pg_catalog.routines.ToChar3();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar3(java.math.BigDecimal __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar3 f = new test.generated.pg_catalog.routines.ToChar3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar3(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToChar3 f = new test.generated.pg_catalog.routines.ToChar3();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_char
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toChar7(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar7 f = new test.generated.pg_catalog.routines.ToChar7();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar7(java.lang.Double __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar7 f = new test.generated.pg_catalog.routines.ToChar7();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar7(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToChar7 f = new test.generated.pg_catalog.routines.ToChar7();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_char
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toChar1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar1 f = new test.generated.pg_catalog.routines.ToChar1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar1(java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar1 f = new test.generated.pg_catalog.routines.ToChar1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToChar1 f = new test.generated.pg_catalog.routines.ToChar1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_char
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toChar8(org.jooq.Configuration configuration, java.sql.Timestamp __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar8 f = new test.generated.pg_catalog.routines.ToChar8();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar8(java.sql.Timestamp __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToChar8 f = new test.generated.pg_catalog.routines.ToChar8();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_char as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> toChar8(org.jooq.Field<java.sql.Timestamp> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToChar8 f = new test.generated.pg_catalog.routines.ToChar8();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_date
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Date toDate(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToDate f = new test.generated.pg_catalog.routines.ToDate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Date> toDate(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToDate f = new test.generated.pg_catalog.routines.ToDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_date as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Date> toDate(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToDate f = new test.generated.pg_catalog.routines.ToDate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_hex
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toHex1(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.ToHex1 f = new test.generated.pg_catalog.routines.ToHex1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_hex as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> toHex1(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.ToHex1 f = new test.generated.pg_catalog.routines.ToHex1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_hex as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> toHex1(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.ToHex1 f = new test.generated.pg_catalog.routines.ToHex1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_hex
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String toHex2(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.ToHex2 f = new test.generated.pg_catalog.routines.ToHex2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_hex as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> toHex2(java.lang.Long __1) {
		test.generated.pg_catalog.routines.ToHex2 f = new test.generated.pg_catalog.routines.ToHex2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_hex as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> toHex2(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.ToHex2 f = new test.generated.pg_catalog.routines.ToHex2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_number
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal toNumber(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToNumber f = new test.generated.pg_catalog.routines.ToNumber();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_number as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> toNumber(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToNumber f = new test.generated.pg_catalog.routines.ToNumber();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_number as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> toNumber(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToNumber f = new test.generated.pg_catalog.routines.ToNumber();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_timestamp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp toTimestamp1(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.ToTimestamp1 f = new test.generated.pg_catalog.routines.ToTimestamp1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_timestamp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> toTimestamp1(java.lang.Double __1) {
		test.generated.pg_catalog.routines.ToTimestamp1 f = new test.generated.pg_catalog.routines.ToTimestamp1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_timestamp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.sql.Timestamp> toTimestamp1(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.ToTimestamp1 f = new test.generated.pg_catalog.routines.ToTimestamp1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_timestamp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp toTimestamp2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToTimestamp2 f = new test.generated.pg_catalog.routines.ToTimestamp2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> toTimestamp2(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToTimestamp2 f = new test.generated.pg_catalog.routines.ToTimestamp2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_timestamp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.sql.Timestamp> toTimestamp2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToTimestamp2 f = new test.generated.pg_catalog.routines.ToTimestamp2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_tsquery
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object toTsquery1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToTsquery1 f = new test.generated.pg_catalog.routines.ToTsquery1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_tsquery as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> toTsquery1(java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToTsquery1 f = new test.generated.pg_catalog.routines.ToTsquery1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_tsquery as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> toTsquery1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToTsquery1 f = new test.generated.pg_catalog.routines.ToTsquery1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_tsquery
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object toTsquery2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.ToTsquery2 f = new test.generated.pg_catalog.routines.ToTsquery2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_tsquery as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> toTsquery2(java.lang.String __1) {
		test.generated.pg_catalog.routines.ToTsquery2 f = new test.generated.pg_catalog.routines.ToTsquery2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_tsquery as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> toTsquery2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.ToTsquery2 f = new test.generated.pg_catalog.routines.ToTsquery2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_tsvector
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object toTsvector1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToTsvector1 f = new test.generated.pg_catalog.routines.ToTsvector1();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_tsvector as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> toTsvector1(java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.ToTsvector1 f = new test.generated.pg_catalog.routines.ToTsvector1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_tsvector as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> toTsvector1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.ToTsvector1 f = new test.generated.pg_catalog.routines.ToTsvector1();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.to_tsvector
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object toTsvector2(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.ToTsvector2 f = new test.generated.pg_catalog.routines.ToTsvector2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.to_tsvector as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> toTsvector2(java.lang.String __1) {
		test.generated.pg_catalog.routines.ToTsvector2 f = new test.generated.pg_catalog.routines.ToTsvector2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.to_tsvector as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> toTsvector2(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.ToTsvector2 f = new test.generated.pg_catalog.routines.ToTsvector2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.transaction_timestamp
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.sql.Timestamp transactionTimestamp(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.TransactionTimestamp f = new test.generated.pg_catalog.routines.TransactionTimestamp();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.transaction_timestamp as a field
	 *
	 */
	public static org.jooq.Field<java.sql.Timestamp> transactionTimestamp() {
		test.generated.pg_catalog.routines.TransactionTimestamp f = new test.generated.pg_catalog.routines.TransactionTimestamp();

		return f.asField();
	}

	/**
	 * Call pg_catalog.translate
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String translate(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.Translate f = new test.generated.pg_catalog.routines.Translate();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.translate as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> translate(java.lang.String __1, java.lang.String __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.Translate f = new test.generated.pg_catalog.routines.Translate();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.translate as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> translate(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.Translate f = new test.generated.pg_catalog.routines.Translate();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.trigger_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object triggerIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.TriggerIn f = new test.generated.pg_catalog.routines.TriggerIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.trigger_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> triggerIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.TriggerIn f = new test.generated.pg_catalog.routines.TriggerIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.trigger_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> triggerIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.TriggerIn f = new test.generated.pg_catalog.routines.TriggerIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.trigger_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object triggerOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.TriggerOut f = new test.generated.pg_catalog.routines.TriggerOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.trigger_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> triggerOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.TriggerOut f = new test.generated.pg_catalog.routines.TriggerOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.trigger_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> triggerOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.TriggerOut f = new test.generated.pg_catalog.routines.TriggerOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.trunc
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object trunc4(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Trunc4 f = new test.generated.pg_catalog.routines.Trunc4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.trunc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> trunc4(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Trunc4 f = new test.generated.pg_catalog.routines.Trunc4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.trunc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> trunc4(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Trunc4 f = new test.generated.pg_catalog.routines.Trunc4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.trunc
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal trunc2(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Trunc2 f = new test.generated.pg_catalog.routines.Trunc2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.trunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> trunc2(java.math.BigDecimal __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Trunc2 f = new test.generated.pg_catalog.routines.Trunc2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.trunc as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.math.BigDecimal> trunc2(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Trunc2 f = new test.generated.pg_catalog.routines.Trunc2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.trunc
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double trunc1(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Trunc1 f = new test.generated.pg_catalog.routines.Trunc1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.trunc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> trunc1(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Trunc1 f = new test.generated.pg_catalog.routines.Trunc1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.trunc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> trunc1(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Trunc1 f = new test.generated.pg_catalog.routines.Trunc1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.trunc
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal trunc3(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Trunc3 f = new test.generated.pg_catalog.routines.Trunc3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.trunc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> trunc3(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Trunc3 f = new test.generated.pg_catalog.routines.Trunc3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.trunc as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> trunc3(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Trunc3 f = new test.generated.pg_catalog.routines.Trunc3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_debug
	 *
	 * @param document IN parameter
	 * @param alias OUT parameter
	 * @param description OUT parameter
	 * @param token OUT parameter
	 * @param dictionaries OUT parameter
	 * @param dictionary OUT parameter
	 * @param lexemes OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.TsDebug2 tsDebug2(org.jooq.Configuration configuration, java.lang.String document) {
		test.generated.pg_catalog.routines.TsDebug2 p = new test.generated.pg_catalog.routines.TsDebug2();
		p.setDocument(document);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.ts_debug
	 *
	 * @param config IN parameter
	 * @param document IN parameter
	 * @param alias OUT parameter
	 * @param description OUT parameter
	 * @param token OUT parameter
	 * @param dictionaries OUT parameter
	 * @param dictionary OUT parameter
	 * @param lexemes OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.TsDebug1 tsDebug1(org.jooq.Configuration configuration, java.lang.Object config, java.lang.String document) {
		test.generated.pg_catalog.routines.TsDebug1 p = new test.generated.pg_catalog.routines.TsDebug1();
		p.setConfig(config);
		p.setDocument(document);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.ts_headline
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String tsHeadline1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2, java.lang.Object __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.TsHeadline1 f = new test.generated.pg_catalog.routines.TsHeadline1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_headline as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.String> tsHeadline1(java.lang.Object __1, java.lang.String __2, java.lang.Object __3, java.lang.String __4) {
		test.generated.pg_catalog.routines.TsHeadline1 f = new test.generated.pg_catalog.routines.TsHeadline1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_headline as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.String> tsHeadline1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.String> __4) {
		test.generated.pg_catalog.routines.TsHeadline1 f = new test.generated.pg_catalog.routines.TsHeadline1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_headline
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String tsHeadline4(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsHeadline4 f = new test.generated.pg_catalog.routines.TsHeadline4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_headline as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> tsHeadline4(java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsHeadline4 f = new test.generated.pg_catalog.routines.TsHeadline4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_headline as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String> tsHeadline4(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsHeadline4 f = new test.generated.pg_catalog.routines.TsHeadline4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_headline
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String tsHeadline3(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Object __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.TsHeadline3 f = new test.generated.pg_catalog.routines.TsHeadline3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_headline as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> tsHeadline3(java.lang.String __1, java.lang.Object __2, java.lang.String __3) {
		test.generated.pg_catalog.routines.TsHeadline3 f = new test.generated.pg_catalog.routines.TsHeadline3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_headline as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> tsHeadline3(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.String> __3) {
		test.generated.pg_catalog.routines.TsHeadline3 f = new test.generated.pg_catalog.routines.TsHeadline3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_headline
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String tsHeadline2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.TsHeadline2 f = new test.generated.pg_catalog.routines.TsHeadline2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_headline as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> tsHeadline2(java.lang.Object __1, java.lang.String __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.TsHeadline2 f = new test.generated.pg_catalog.routines.TsHeadline2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_headline as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> tsHeadline2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.TsHeadline2 f = new test.generated.pg_catalog.routines.TsHeadline2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_lexize
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String[] tsLexize(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TsLexize f = new test.generated.pg_catalog.routines.TsLexize();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_lexize as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String[]> tsLexize(java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TsLexize f = new test.generated.pg_catalog.routines.TsLexize();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_lexize as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.String[]> tsLexize(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TsLexize f = new test.generated.pg_catalog.routines.TsLexize();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_match_qv
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsMatchQv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsMatchQv f = new test.generated.pg_catalog.routines.TsMatchQv();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_match_qv as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsMatchQv(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsMatchQv f = new test.generated.pg_catalog.routines.TsMatchQv();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_match_qv as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsMatchQv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsMatchQv f = new test.generated.pg_catalog.routines.TsMatchQv();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_match_tq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsMatchTq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsMatchTq f = new test.generated.pg_catalog.routines.TsMatchTq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_match_tq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsMatchTq(java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsMatchTq f = new test.generated.pg_catalog.routines.TsMatchTq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_match_tq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsMatchTq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsMatchTq f = new test.generated.pg_catalog.routines.TsMatchTq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_match_tt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsMatchTt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TsMatchTt f = new test.generated.pg_catalog.routines.TsMatchTt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_match_tt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsMatchTt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TsMatchTt f = new test.generated.pg_catalog.routines.TsMatchTt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_match_tt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsMatchTt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TsMatchTt f = new test.generated.pg_catalog.routines.TsMatchTt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_match_vq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsMatchVq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsMatchVq f = new test.generated.pg_catalog.routines.TsMatchVq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_match_vq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsMatchVq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsMatchVq f = new test.generated.pg_catalog.routines.TsMatchVq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_match_vq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsMatchVq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsMatchVq f = new test.generated.pg_catalog.routines.TsMatchVq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_parse
	 *
	 * @param parserName IN parameter
	 * @param txt IN parameter
	 * @param tokid OUT parameter
	 * @param token OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.TsParse2 tsParse2(org.jooq.Configuration configuration, java.lang.String parserName, java.lang.String txt) {
		test.generated.pg_catalog.routines.TsParse2 p = new test.generated.pg_catalog.routines.TsParse2();
		p.setParserName(parserName);
		p.setTxt(txt);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.ts_parse
	 *
	 * @param parserOid IN parameter
	 * @param txt IN parameter
	 * @param tokid OUT parameter
	 * @param token OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.TsParse1 tsParse1(org.jooq.Configuration configuration, java.lang.Long parserOid, java.lang.String txt) {
		test.generated.pg_catalog.routines.TsParse1 p = new test.generated.pg_catalog.routines.TsParse1();
		p.setParserOid(parserOid);
		p.setTxt(txt);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.ts_rank
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float tsRank3(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TsRank3 f = new test.generated.pg_catalog.routines.TsRank3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_rank as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Float> tsRank3(java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TsRank3 f = new test.generated.pg_catalog.routines.TsRank3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_rank as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Float> tsRank3(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.TsRank3 f = new test.generated.pg_catalog.routines.TsRank3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_rank
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float tsRank1(org.jooq.Configuration configuration, java.lang.Float[] __1, java.lang.Object __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.TsRank1 f = new test.generated.pg_catalog.routines.TsRank1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_rank as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Float> tsRank1(java.lang.Float[] __1, java.lang.Object __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.TsRank1 f = new test.generated.pg_catalog.routines.TsRank1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_rank as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Float> tsRank1(org.jooq.Field<java.lang.Float[]> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.TsRank1 f = new test.generated.pg_catalog.routines.TsRank1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_rank
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float tsRank2(org.jooq.Configuration configuration, java.lang.Float[] __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.TsRank2 f = new test.generated.pg_catalog.routines.TsRank2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_rank as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Float> tsRank2(java.lang.Float[] __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.TsRank2 f = new test.generated.pg_catalog.routines.TsRank2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_rank as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Float> tsRank2(org.jooq.Field<java.lang.Float[]> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.TsRank2 f = new test.generated.pg_catalog.routines.TsRank2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_rank
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float tsRank4(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsRank4 f = new test.generated.pg_catalog.routines.TsRank4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_rank as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> tsRank4(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsRank4 f = new test.generated.pg_catalog.routines.TsRank4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_rank as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> tsRank4(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsRank4 f = new test.generated.pg_catalog.routines.TsRank4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_rank_cd
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float tsRankCd3(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TsRankCd3 f = new test.generated.pg_catalog.routines.TsRankCd3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_rank_cd as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Float> tsRankCd3(java.lang.Object __1, java.lang.Object __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.TsRankCd3 f = new test.generated.pg_catalog.routines.TsRankCd3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_rank_cd as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Float> tsRankCd3(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.TsRankCd3 f = new test.generated.pg_catalog.routines.TsRankCd3();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_rank_cd
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float tsRankCd4(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsRankCd4 f = new test.generated.pg_catalog.routines.TsRankCd4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_rank_cd as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> tsRankCd4(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsRankCd4 f = new test.generated.pg_catalog.routines.TsRankCd4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_rank_cd as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Float> tsRankCd4(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsRankCd4 f = new test.generated.pg_catalog.routines.TsRankCd4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_rank_cd
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float tsRankCd1(org.jooq.Configuration configuration, java.lang.Float[] __1, java.lang.Object __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.TsRankCd1 f = new test.generated.pg_catalog.routines.TsRankCd1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_rank_cd as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Float> tsRankCd1(java.lang.Float[] __1, java.lang.Object __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.TsRankCd1 f = new test.generated.pg_catalog.routines.TsRankCd1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_rank_cd as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Float> tsRankCd1(org.jooq.Field<java.lang.Float[]> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.TsRankCd1 f = new test.generated.pg_catalog.routines.TsRankCd1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_rank_cd
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Float tsRankCd2(org.jooq.Configuration configuration, java.lang.Float[] __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.TsRankCd2 f = new test.generated.pg_catalog.routines.TsRankCd2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_rank_cd as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Float> tsRankCd2(java.lang.Float[] __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.TsRankCd2 f = new test.generated.pg_catalog.routines.TsRankCd2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_rank_cd as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Float> tsRankCd2(org.jooq.Field<java.lang.Float[]> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.TsRankCd2 f = new test.generated.pg_catalog.routines.TsRankCd2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_rewrite
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsRewrite1(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.TsRewrite1 f = new test.generated.pg_catalog.routines.TsRewrite1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_rewrite as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> tsRewrite1(java.lang.Object __1, java.lang.Object __2, java.lang.Object __3) {
		test.generated.pg_catalog.routines.TsRewrite1 f = new test.generated.pg_catalog.routines.TsRewrite1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_rewrite as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object> tsRewrite1(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.Object> __3) {
		test.generated.pg_catalog.routines.TsRewrite1 f = new test.generated.pg_catalog.routines.TsRewrite1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_rewrite
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsRewrite2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TsRewrite2 f = new test.generated.pg_catalog.routines.TsRewrite2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_rewrite as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> tsRewrite2(java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.TsRewrite2 f = new test.generated.pg_catalog.routines.TsRewrite2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_rewrite as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> tsRewrite2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.TsRewrite2 f = new test.generated.pg_catalog.routines.TsRewrite2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.ts_stat
	 *
	 * @param query IN parameter
	 * @param word OUT parameter
	 * @param ndoc OUT parameter
	 * @param nentry OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.TsStat1 tsStat1(org.jooq.Configuration configuration, java.lang.String query) {
		test.generated.pg_catalog.routines.TsStat1 p = new test.generated.pg_catalog.routines.TsStat1();
		p.setQuery(query);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.ts_stat
	 *
	 * @param query IN parameter
	 * @param weights IN parameter
	 * @param word OUT parameter
	 * @param ndoc OUT parameter
	 * @param nentry OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.TsStat2 tsStat2(org.jooq.Configuration configuration, java.lang.String query, java.lang.String weights) {
		test.generated.pg_catalog.routines.TsStat2 p = new test.generated.pg_catalog.routines.TsStat2();
		p.setQuery(query);
		p.setWeights(weights);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.ts_token_type
	 *
	 * @param parserOid IN parameter
	 * @param tokid OUT parameter
	 * @param alias OUT parameter
	 * @param description OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.TsTokenType1 tsTokenType1(org.jooq.Configuration configuration, java.lang.Long parserOid) {
		test.generated.pg_catalog.routines.TsTokenType1 p = new test.generated.pg_catalog.routines.TsTokenType1();
		p.setParserOid(parserOid);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.ts_token_type
	 *
	 * @param parserName IN parameter
	 * @param tokid OUT parameter
	 * @param alias OUT parameter
	 * @param description OUT parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static test.generated.pg_catalog.routines.TsTokenType2 tsTokenType2(org.jooq.Configuration configuration, java.lang.String parserName) {
		test.generated.pg_catalog.routines.TsTokenType2 p = new test.generated.pg_catalog.routines.TsTokenType2();
		p.setParserName(parserName);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call pg_catalog.ts_typanalyze
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsTypanalyze(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.TsTypanalyze f = new test.generated.pg_catalog.routines.TsTypanalyze();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.ts_typanalyze as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> tsTypanalyze(java.lang.Object __1) {
		test.generated.pg_catalog.routines.TsTypanalyze f = new test.generated.pg_catalog.routines.TsTypanalyze();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.ts_typanalyze as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Boolean> tsTypanalyze(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.TsTypanalyze f = new test.generated.pg_catalog.routines.TsTypanalyze();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsmatchjoinsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double tsmatchjoinsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Tsmatchjoinsel f = new test.generated.pg_catalog.routines.Tsmatchjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsmatchjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> tsmatchjoinsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Short __4, java.lang.Object __5) {
		test.generated.pg_catalog.routines.Tsmatchjoinsel f = new test.generated.pg_catalog.routines.Tsmatchjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsmatchjoinsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @param __5
	 */
	public static org.jooq.Field<java.lang.Double> tsmatchjoinsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Short> __4, org.jooq.Field<java.lang.Object> __5) {
		test.generated.pg_catalog.routines.Tsmatchjoinsel f = new test.generated.pg_catalog.routines.Tsmatchjoinsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);
		f.set__5(__5);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsmatchsel
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double tsmatchsel(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Tsmatchsel f = new test.generated.pg_catalog.routines.Tsmatchsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsmatchsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> tsmatchsel(java.lang.Object __1, java.lang.Long __2, java.lang.Object __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.Tsmatchsel f = new test.generated.pg_catalog.routines.Tsmatchsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsmatchsel as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Double> tsmatchsel(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Object> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.Tsmatchsel f = new test.generated.pg_catalog.routines.Tsmatchsel();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsq_mcontained
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsqMcontained(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqMcontained f = new test.generated.pg_catalog.routines.TsqMcontained();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsq_mcontained as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqMcontained(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqMcontained f = new test.generated.pg_catalog.routines.TsqMcontained();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsq_mcontained as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqMcontained(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsqMcontained f = new test.generated.pg_catalog.routines.TsqMcontained();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsq_mcontains
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsqMcontains(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqMcontains f = new test.generated.pg_catalog.routines.TsqMcontains();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsq_mcontains as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqMcontains(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqMcontains f = new test.generated.pg_catalog.routines.TsqMcontains();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsq_mcontains as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqMcontains(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsqMcontains f = new test.generated.pg_catalog.routines.TsqMcontains();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsquery_and
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsqueryAnd(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryAnd f = new test.generated.pg_catalog.routines.TsqueryAnd();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsquery_and as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> tsqueryAnd(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryAnd f = new test.generated.pg_catalog.routines.TsqueryAnd();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsquery_and as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> tsqueryAnd(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsqueryAnd f = new test.generated.pg_catalog.routines.TsqueryAnd();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsquery_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer tsqueryCmp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryCmp f = new test.generated.pg_catalog.routines.TsqueryCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsquery_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> tsqueryCmp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryCmp f = new test.generated.pg_catalog.routines.TsqueryCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsquery_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> tsqueryCmp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsqueryCmp f = new test.generated.pg_catalog.routines.TsqueryCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsquery_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsqueryEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryEq f = new test.generated.pg_catalog.routines.TsqueryEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsquery_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqueryEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryEq f = new test.generated.pg_catalog.routines.TsqueryEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsquery_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqueryEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsqueryEq f = new test.generated.pg_catalog.routines.TsqueryEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsquery_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsqueryGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryGe f = new test.generated.pg_catalog.routines.TsqueryGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsquery_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqueryGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryGe f = new test.generated.pg_catalog.routines.TsqueryGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsquery_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqueryGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsqueryGe f = new test.generated.pg_catalog.routines.TsqueryGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsquery_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsqueryGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryGt f = new test.generated.pg_catalog.routines.TsqueryGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsquery_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqueryGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryGt f = new test.generated.pg_catalog.routines.TsqueryGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsquery_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqueryGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsqueryGt f = new test.generated.pg_catalog.routines.TsqueryGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsquery_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsqueryLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryLe f = new test.generated.pg_catalog.routines.TsqueryLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsquery_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqueryLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryLe f = new test.generated.pg_catalog.routines.TsqueryLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsquery_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqueryLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsqueryLe f = new test.generated.pg_catalog.routines.TsqueryLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsquery_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsqueryLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryLt f = new test.generated.pg_catalog.routines.TsqueryLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsquery_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqueryLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryLt f = new test.generated.pg_catalog.routines.TsqueryLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsquery_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqueryLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsqueryLt f = new test.generated.pg_catalog.routines.TsqueryLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsquery_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsqueryNe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryNe f = new test.generated.pg_catalog.routines.TsqueryNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsquery_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqueryNe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryNe f = new test.generated.pg_catalog.routines.TsqueryNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsquery_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsqueryNe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsqueryNe f = new test.generated.pg_catalog.routines.TsqueryNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsquery_not
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsqueryNot(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.TsqueryNot f = new test.generated.pg_catalog.routines.TsqueryNot();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsquery_not as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsqueryNot(java.lang.Object __1) {
		test.generated.pg_catalog.routines.TsqueryNot f = new test.generated.pg_catalog.routines.TsqueryNot();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsquery_not as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsqueryNot(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.TsqueryNot f = new test.generated.pg_catalog.routines.TsqueryNot();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsquery_or
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsqueryOr(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryOr f = new test.generated.pg_catalog.routines.TsqueryOr();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsquery_or as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> tsqueryOr(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsqueryOr f = new test.generated.pg_catalog.routines.TsqueryOr();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsquery_or as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> tsqueryOr(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsqueryOr f = new test.generated.pg_catalog.routines.TsqueryOr();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsqueryin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsqueryin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsqueryin f = new test.generated.pg_catalog.routines.Tsqueryin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsqueryin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsqueryin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsqueryin f = new test.generated.pg_catalog.routines.Tsqueryin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsqueryin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsqueryin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tsqueryin f = new test.generated.pg_catalog.routines.Tsqueryin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsqueryout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsqueryout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsqueryout f = new test.generated.pg_catalog.routines.Tsqueryout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsqueryout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsqueryout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsqueryout f = new test.generated.pg_catalog.routines.Tsqueryout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsqueryout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsqueryout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tsqueryout f = new test.generated.pg_catalog.routines.Tsqueryout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsqueryrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsqueryrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsqueryrecv f = new test.generated.pg_catalog.routines.Tsqueryrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsqueryrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsqueryrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsqueryrecv f = new test.generated.pg_catalog.routines.Tsqueryrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsqueryrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsqueryrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tsqueryrecv f = new test.generated.pg_catalog.routines.Tsqueryrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsquerysend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] tsquerysend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsquerysend f = new test.generated.pg_catalog.routines.Tsquerysend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsquerysend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> tsquerysend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsquerysend f = new test.generated.pg_catalog.routines.Tsquerysend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsquerysend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> tsquerysend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tsquerysend f = new test.generated.pg_catalog.routines.Tsquerysend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvector_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer tsvectorCmp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorCmp f = new test.generated.pg_catalog.routines.TsvectorCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvector_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> tsvectorCmp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorCmp f = new test.generated.pg_catalog.routines.TsvectorCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsvector_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> tsvectorCmp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsvectorCmp f = new test.generated.pg_catalog.routines.TsvectorCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvector_concat
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsvectorConcat(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorConcat f = new test.generated.pg_catalog.routines.TsvectorConcat();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvector_concat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> tsvectorConcat(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorConcat f = new test.generated.pg_catalog.routines.TsvectorConcat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsvector_concat as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> tsvectorConcat(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsvectorConcat f = new test.generated.pg_catalog.routines.TsvectorConcat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvector_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsvectorEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorEq f = new test.generated.pg_catalog.routines.TsvectorEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvector_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsvectorEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorEq f = new test.generated.pg_catalog.routines.TsvectorEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsvector_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsvectorEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsvectorEq f = new test.generated.pg_catalog.routines.TsvectorEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvector_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsvectorGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorGe f = new test.generated.pg_catalog.routines.TsvectorGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvector_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsvectorGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorGe f = new test.generated.pg_catalog.routines.TsvectorGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsvector_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsvectorGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsvectorGe f = new test.generated.pg_catalog.routines.TsvectorGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvector_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsvectorGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorGt f = new test.generated.pg_catalog.routines.TsvectorGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvector_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsvectorGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorGt f = new test.generated.pg_catalog.routines.TsvectorGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsvector_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsvectorGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsvectorGt f = new test.generated.pg_catalog.routines.TsvectorGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvector_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsvectorLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorLe f = new test.generated.pg_catalog.routines.TsvectorLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvector_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsvectorLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorLe f = new test.generated.pg_catalog.routines.TsvectorLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsvector_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsvectorLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsvectorLe f = new test.generated.pg_catalog.routines.TsvectorLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvector_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsvectorLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorLt f = new test.generated.pg_catalog.routines.TsvectorLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvector_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsvectorLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorLt f = new test.generated.pg_catalog.routines.TsvectorLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsvector_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsvectorLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsvectorLt f = new test.generated.pg_catalog.routines.TsvectorLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvector_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean tsvectorNe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorNe f = new test.generated.pg_catalog.routines.TsvectorNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvector_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsvectorNe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TsvectorNe f = new test.generated.pg_catalog.routines.TsvectorNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsvector_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> tsvectorNe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TsvectorNe f = new test.generated.pg_catalog.routines.TsvectorNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvector_update_trigger
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsvectorUpdateTrigger(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.TsvectorUpdateTrigger f = new test.generated.pg_catalog.routines.TsvectorUpdateTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvector_update_trigger as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> tsvectorUpdateTrigger() {
		test.generated.pg_catalog.routines.TsvectorUpdateTrigger f = new test.generated.pg_catalog.routines.TsvectorUpdateTrigger();

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvector_update_trigger_column
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsvectorUpdateTriggerColumn(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.TsvectorUpdateTriggerColumn f = new test.generated.pg_catalog.routines.TsvectorUpdateTriggerColumn();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvector_update_trigger_column as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> tsvectorUpdateTriggerColumn() {
		test.generated.pg_catalog.routines.TsvectorUpdateTriggerColumn f = new test.generated.pg_catalog.routines.TsvectorUpdateTriggerColumn();

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvectorin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsvectorin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsvectorin f = new test.generated.pg_catalog.routines.Tsvectorin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvectorin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsvectorin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsvectorin f = new test.generated.pg_catalog.routines.Tsvectorin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsvectorin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsvectorin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tsvectorin f = new test.generated.pg_catalog.routines.Tsvectorin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvectorout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsvectorout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsvectorout f = new test.generated.pg_catalog.routines.Tsvectorout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvectorout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsvectorout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsvectorout f = new test.generated.pg_catalog.routines.Tsvectorout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsvectorout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsvectorout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tsvectorout f = new test.generated.pg_catalog.routines.Tsvectorout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvectorrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object tsvectorrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsvectorrecv f = new test.generated.pg_catalog.routines.Tsvectorrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvectorrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsvectorrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsvectorrecv f = new test.generated.pg_catalog.routines.Tsvectorrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsvectorrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> tsvectorrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tsvectorrecv f = new test.generated.pg_catalog.routines.Tsvectorrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.tsvectorsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] tsvectorsend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsvectorsend f = new test.generated.pg_catalog.routines.Tsvectorsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.tsvectorsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> tsvectorsend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Tsvectorsend f = new test.generated.pg_catalog.routines.Tsvectorsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.tsvectorsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> tsvectorsend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Tsvectorsend f = new test.generated.pg_catalog.routines.Tsvectorsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.txid_current
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long txidCurrent(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.TxidCurrent f = new test.generated.pg_catalog.routines.TxidCurrent();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.txid_current as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Long> txidCurrent() {
		test.generated.pg_catalog.routines.TxidCurrent f = new test.generated.pg_catalog.routines.TxidCurrent();

		return f.asField();
	}

	/**
	 * Call pg_catalog.txid_current_snapshot
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object txidCurrentSnapshot(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.TxidCurrentSnapshot f = new test.generated.pg_catalog.routines.TxidCurrentSnapshot();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.txid_current_snapshot as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> txidCurrentSnapshot() {
		test.generated.pg_catalog.routines.TxidCurrentSnapshot f = new test.generated.pg_catalog.routines.TxidCurrentSnapshot();

		return f.asField();
	}

	/**
	 * Call pg_catalog.txid_snapshot_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object txidSnapshotIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotIn f = new test.generated.pg_catalog.routines.TxidSnapshotIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.txid_snapshot_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> txidSnapshotIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotIn f = new test.generated.pg_catalog.routines.TxidSnapshotIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.txid_snapshot_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> txidSnapshotIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.TxidSnapshotIn f = new test.generated.pg_catalog.routines.TxidSnapshotIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.txid_snapshot_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object txidSnapshotOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotOut f = new test.generated.pg_catalog.routines.TxidSnapshotOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.txid_snapshot_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> txidSnapshotOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotOut f = new test.generated.pg_catalog.routines.TxidSnapshotOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.txid_snapshot_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> txidSnapshotOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.TxidSnapshotOut f = new test.generated.pg_catalog.routines.TxidSnapshotOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.txid_snapshot_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object txidSnapshotRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotRecv f = new test.generated.pg_catalog.routines.TxidSnapshotRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.txid_snapshot_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> txidSnapshotRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotRecv f = new test.generated.pg_catalog.routines.TxidSnapshotRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.txid_snapshot_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> txidSnapshotRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.TxidSnapshotRecv f = new test.generated.pg_catalog.routines.TxidSnapshotRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.txid_snapshot_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] txidSnapshotSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotSend f = new test.generated.pg_catalog.routines.TxidSnapshotSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.txid_snapshot_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> txidSnapshotSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotSend f = new test.generated.pg_catalog.routines.TxidSnapshotSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.txid_snapshot_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> txidSnapshotSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.TxidSnapshotSend f = new test.generated.pg_catalog.routines.TxidSnapshotSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.txid_snapshot_xip
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long txidSnapshotXip(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotXip f = new test.generated.pg_catalog.routines.TxidSnapshotXip();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.txid_snapshot_xip as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> txidSnapshotXip(java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotXip f = new test.generated.pg_catalog.routines.TxidSnapshotXip();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.txid_snapshot_xip as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> txidSnapshotXip(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.TxidSnapshotXip f = new test.generated.pg_catalog.routines.TxidSnapshotXip();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.txid_snapshot_xmax
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long txidSnapshotXmax(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotXmax f = new test.generated.pg_catalog.routines.TxidSnapshotXmax();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.txid_snapshot_xmax as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> txidSnapshotXmax(java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotXmax f = new test.generated.pg_catalog.routines.TxidSnapshotXmax();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.txid_snapshot_xmax as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> txidSnapshotXmax(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.TxidSnapshotXmax f = new test.generated.pg_catalog.routines.TxidSnapshotXmax();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.txid_snapshot_xmin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long txidSnapshotXmin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotXmin f = new test.generated.pg_catalog.routines.TxidSnapshotXmin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.txid_snapshot_xmin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> txidSnapshotXmin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.TxidSnapshotXmin f = new test.generated.pg_catalog.routines.TxidSnapshotXmin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.txid_snapshot_xmin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> txidSnapshotXmin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.TxidSnapshotXmin f = new test.generated.pg_catalog.routines.TxidSnapshotXmin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.txid_visible_in_snapshot
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean txidVisibleInSnapshot(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TxidVisibleInSnapshot f = new test.generated.pg_catalog.routines.TxidVisibleInSnapshot();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.txid_visible_in_snapshot as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> txidVisibleInSnapshot(java.lang.Long __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.TxidVisibleInSnapshot f = new test.generated.pg_catalog.routines.TxidVisibleInSnapshot();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.txid_visible_in_snapshot as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> txidVisibleInSnapshot(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.TxidVisibleInSnapshot f = new test.generated.pg_catalog.routines.TxidVisibleInSnapshot();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.uhc_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void uhcToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.UhcToUtf8 p = new test.generated.pg_catalog.routines.UhcToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.unique_key_recheck
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object uniqueKeyRecheck(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.UniqueKeyRecheck f = new test.generated.pg_catalog.routines.UniqueKeyRecheck();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.unique_key_recheck as a field
	 *
	 */
	public static org.jooq.Field<java.lang.Object> uniqueKeyRecheck() {
		test.generated.pg_catalog.routines.UniqueKeyRecheck f = new test.generated.pg_catalog.routines.UniqueKeyRecheck();

		return f.asField();
	}

	/**
	 * Call pg_catalog.unknownin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object unknownin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Unknownin f = new test.generated.pg_catalog.routines.Unknownin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.unknownin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> unknownin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Unknownin f = new test.generated.pg_catalog.routines.Unknownin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.unknownin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> unknownin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Unknownin f = new test.generated.pg_catalog.routines.Unknownin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.unknownout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object unknownout(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Unknownout f = new test.generated.pg_catalog.routines.Unknownout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.unknownout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> unknownout(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Unknownout f = new test.generated.pg_catalog.routines.Unknownout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.unknownout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> unknownout(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Unknownout f = new test.generated.pg_catalog.routines.Unknownout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.unknownrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object unknownrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Unknownrecv f = new test.generated.pg_catalog.routines.Unknownrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.unknownrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> unknownrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Unknownrecv f = new test.generated.pg_catalog.routines.Unknownrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.unknownrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> unknownrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Unknownrecv f = new test.generated.pg_catalog.routines.Unknownrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.unknownsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] unknownsend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Unknownsend f = new test.generated.pg_catalog.routines.Unknownsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.unknownsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> unknownsend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Unknownsend f = new test.generated.pg_catalog.routines.Unknownsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.unknownsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> unknownsend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Unknownsend f = new test.generated.pg_catalog.routines.Unknownsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.unnest
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object unnest(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Unnest f = new test.generated.pg_catalog.routines.Unnest();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.unnest as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> unnest(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Unnest f = new test.generated.pg_catalog.routines.Unnest();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.unnest as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> unnest(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Unnest f = new test.generated.pg_catalog.routines.Unnest();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.upper
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String upper(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Upper f = new test.generated.pg_catalog.routines.Upper();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.upper as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> upper(java.lang.String __1) {
		test.generated.pg_catalog.routines.Upper f = new test.generated.pg_catalog.routines.Upper();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.upper as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> upper(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Upper f = new test.generated.pg_catalog.routines.Upper();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.utf8_to_ascii
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToAscii(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToAscii p = new test.generated.pg_catalog.routines.Utf8ToAscii();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_big5
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToBig5(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToBig5 p = new test.generated.pg_catalog.routines.Utf8ToBig5();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_euc_cn
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToEucCn(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToEucCn p = new test.generated.pg_catalog.routines.Utf8ToEucCn();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_euc_jis_2004
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToEucJis_2004(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToEucJis_2004 p = new test.generated.pg_catalog.routines.Utf8ToEucJis_2004();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_euc_jp
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToEucJp(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToEucJp p = new test.generated.pg_catalog.routines.Utf8ToEucJp();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_euc_kr
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToEucKr(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToEucKr p = new test.generated.pg_catalog.routines.Utf8ToEucKr();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_euc_tw
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToEucTw(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToEucTw p = new test.generated.pg_catalog.routines.Utf8ToEucTw();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_gb18030
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToGb18030(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToGb18030 p = new test.generated.pg_catalog.routines.Utf8ToGb18030();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_gbk
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToGbk(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToGbk p = new test.generated.pg_catalog.routines.Utf8ToGbk();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_iso8859
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToIso8859(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToIso8859 p = new test.generated.pg_catalog.routines.Utf8ToIso8859();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_iso8859_1
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToIso8859_1(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToIso8859_1 p = new test.generated.pg_catalog.routines.Utf8ToIso8859_1();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_johab
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToJohab(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToJohab p = new test.generated.pg_catalog.routines.Utf8ToJohab();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_koi8r
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToKoi8r(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToKoi8r p = new test.generated.pg_catalog.routines.Utf8ToKoi8r();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_koi8u
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToKoi8u(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToKoi8u p = new test.generated.pg_catalog.routines.Utf8ToKoi8u();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_shift_jis_2004
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToShiftJis_2004(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToShiftJis_2004 p = new test.generated.pg_catalog.routines.Utf8ToShiftJis_2004();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_sjis
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToSjis(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToSjis p = new test.generated.pg_catalog.routines.Utf8ToSjis();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_uhc
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToUhc(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToUhc p = new test.generated.pg_catalog.routines.Utf8ToUhc();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.utf8_to_win
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void utf8ToWin(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Utf8ToWin p = new test.generated.pg_catalog.routines.Utf8ToWin();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.uuid_cmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer uuidCmp(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidCmp f = new test.generated.pg_catalog.routines.UuidCmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.uuid_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> uuidCmp(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidCmp f = new test.generated.pg_catalog.routines.UuidCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.uuid_cmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> uuidCmp(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.UuidCmp f = new test.generated.pg_catalog.routines.UuidCmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.uuid_eq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean uuidEq(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidEq f = new test.generated.pg_catalog.routines.UuidEq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.uuid_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> uuidEq(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidEq f = new test.generated.pg_catalog.routines.UuidEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.uuid_eq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> uuidEq(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.UuidEq f = new test.generated.pg_catalog.routines.UuidEq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.uuid_ge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean uuidGe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidGe f = new test.generated.pg_catalog.routines.UuidGe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.uuid_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> uuidGe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidGe f = new test.generated.pg_catalog.routines.UuidGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.uuid_ge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> uuidGe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.UuidGe f = new test.generated.pg_catalog.routines.UuidGe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.uuid_gt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean uuidGt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidGt f = new test.generated.pg_catalog.routines.UuidGt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.uuid_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> uuidGt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidGt f = new test.generated.pg_catalog.routines.UuidGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.uuid_gt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> uuidGt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.UuidGt f = new test.generated.pg_catalog.routines.UuidGt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.uuid_hash
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer uuidHash(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.UuidHash f = new test.generated.pg_catalog.routines.UuidHash();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.uuid_hash as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> uuidHash(java.lang.Object __1) {
		test.generated.pg_catalog.routines.UuidHash f = new test.generated.pg_catalog.routines.UuidHash();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.uuid_hash as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> uuidHash(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.UuidHash f = new test.generated.pg_catalog.routines.UuidHash();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.uuid_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object uuidIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.UuidIn f = new test.generated.pg_catalog.routines.UuidIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.uuid_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> uuidIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.UuidIn f = new test.generated.pg_catalog.routines.UuidIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.uuid_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> uuidIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.UuidIn f = new test.generated.pg_catalog.routines.UuidIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.uuid_le
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean uuidLe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidLe f = new test.generated.pg_catalog.routines.UuidLe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.uuid_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> uuidLe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidLe f = new test.generated.pg_catalog.routines.UuidLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.uuid_le as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> uuidLe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.UuidLe f = new test.generated.pg_catalog.routines.UuidLe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.uuid_lt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean uuidLt(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidLt f = new test.generated.pg_catalog.routines.UuidLt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.uuid_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> uuidLt(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidLt f = new test.generated.pg_catalog.routines.UuidLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.uuid_lt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> uuidLt(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.UuidLt f = new test.generated.pg_catalog.routines.UuidLt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.uuid_ne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean uuidNe(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidNe f = new test.generated.pg_catalog.routines.UuidNe();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.uuid_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> uuidNe(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.UuidNe f = new test.generated.pg_catalog.routines.UuidNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.uuid_ne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> uuidNe(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.UuidNe f = new test.generated.pg_catalog.routines.UuidNe();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.uuid_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object uuidOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.UuidOut f = new test.generated.pg_catalog.routines.UuidOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.uuid_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> uuidOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.UuidOut f = new test.generated.pg_catalog.routines.UuidOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.uuid_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> uuidOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.UuidOut f = new test.generated.pg_catalog.routines.UuidOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.uuid_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object uuidRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.UuidRecv f = new test.generated.pg_catalog.routines.UuidRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.uuid_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> uuidRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.UuidRecv f = new test.generated.pg_catalog.routines.UuidRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.uuid_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> uuidRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.UuidRecv f = new test.generated.pg_catalog.routines.UuidRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.uuid_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] uuidSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.UuidSend f = new test.generated.pg_catalog.routines.UuidSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.uuid_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> uuidSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.UuidSend f = new test.generated.pg_catalog.routines.UuidSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.uuid_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> uuidSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.UuidSend f = new test.generated.pg_catalog.routines.UuidSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.var_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double varPop5(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.VarPop5 f = new test.generated.pg_catalog.routines.VarPop5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> varPop5(java.lang.Double __1) {
		test.generated.pg_catalog.routines.VarPop5 f = new test.generated.pg_catalog.routines.VarPop5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> varPop5(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.VarPop5 f = new test.generated.pg_catalog.routines.VarPop5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.var_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal varPop6(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.VarPop6 f = new test.generated.pg_catalog.routines.VarPop6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varPop6(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.VarPop6 f = new test.generated.pg_catalog.routines.VarPop6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varPop6(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.VarPop6 f = new test.generated.pg_catalog.routines.VarPop6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.var_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal varPop3(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.VarPop3 f = new test.generated.pg_catalog.routines.VarPop3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varPop3(java.lang.Short __1) {
		test.generated.pg_catalog.routines.VarPop3 f = new test.generated.pg_catalog.routines.VarPop3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varPop3(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.VarPop3 f = new test.generated.pg_catalog.routines.VarPop3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.var_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double varPop4(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.VarPop4 f = new test.generated.pg_catalog.routines.VarPop4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> varPop4(java.lang.Float __1) {
		test.generated.pg_catalog.routines.VarPop4 f = new test.generated.pg_catalog.routines.VarPop4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> varPop4(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.VarPop4 f = new test.generated.pg_catalog.routines.VarPop4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.var_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal varPop2(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.VarPop2 f = new test.generated.pg_catalog.routines.VarPop2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varPop2(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.VarPop2 f = new test.generated.pg_catalog.routines.VarPop2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varPop2(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.VarPop2 f = new test.generated.pg_catalog.routines.VarPop2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.var_pop
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal varPop1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.VarPop1 f = new test.generated.pg_catalog.routines.VarPop1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varPop1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.VarPop1 f = new test.generated.pg_catalog.routines.VarPop1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.var_pop as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varPop1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.VarPop1 f = new test.generated.pg_catalog.routines.VarPop1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.var_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double varSamp5(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.VarSamp5 f = new test.generated.pg_catalog.routines.VarSamp5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> varSamp5(java.lang.Double __1) {
		test.generated.pg_catalog.routines.VarSamp5 f = new test.generated.pg_catalog.routines.VarSamp5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> varSamp5(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.VarSamp5 f = new test.generated.pg_catalog.routines.VarSamp5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.var_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal varSamp6(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.VarSamp6 f = new test.generated.pg_catalog.routines.VarSamp6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varSamp6(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.VarSamp6 f = new test.generated.pg_catalog.routines.VarSamp6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varSamp6(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.VarSamp6 f = new test.generated.pg_catalog.routines.VarSamp6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.var_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal varSamp2(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.VarSamp2 f = new test.generated.pg_catalog.routines.VarSamp2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varSamp2(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.VarSamp2 f = new test.generated.pg_catalog.routines.VarSamp2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varSamp2(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.VarSamp2 f = new test.generated.pg_catalog.routines.VarSamp2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.var_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal varSamp1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.VarSamp1 f = new test.generated.pg_catalog.routines.VarSamp1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varSamp1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.VarSamp1 f = new test.generated.pg_catalog.routines.VarSamp1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varSamp1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.VarSamp1 f = new test.generated.pg_catalog.routines.VarSamp1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.var_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal varSamp3(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.VarSamp3 f = new test.generated.pg_catalog.routines.VarSamp3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varSamp3(java.lang.Short __1) {
		test.generated.pg_catalog.routines.VarSamp3 f = new test.generated.pg_catalog.routines.VarSamp3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> varSamp3(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.VarSamp3 f = new test.generated.pg_catalog.routines.VarSamp3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.var_samp
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double varSamp4(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.VarSamp4 f = new test.generated.pg_catalog.routines.VarSamp4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> varSamp4(java.lang.Float __1) {
		test.generated.pg_catalog.routines.VarSamp4 f = new test.generated.pg_catalog.routines.VarSamp4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.var_samp as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> varSamp4(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.VarSamp4 f = new test.generated.pg_catalog.routines.VarSamp4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbit
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String varbit(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.Varbit f = new test.generated.pg_catalog.routines.Varbit();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbit as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> varbit(java.lang.String __1, java.lang.Integer __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.Varbit f = new test.generated.pg_catalog.routines.Varbit();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbit as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> varbit(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Boolean> __3) {
		test.generated.pg_catalog.routines.Varbit f = new test.generated.pg_catalog.routines.Varbit();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbit_in
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String varbitIn(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.VarbitIn f = new test.generated.pg_catalog.routines.VarbitIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbit_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> varbitIn(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.VarbitIn f = new test.generated.pg_catalog.routines.VarbitIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbit_in as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> varbitIn(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.VarbitIn f = new test.generated.pg_catalog.routines.VarbitIn();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbit_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object varbitOut(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.VarbitOut f = new test.generated.pg_catalog.routines.VarbitOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbit_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> varbitOut(java.lang.String __1) {
		test.generated.pg_catalog.routines.VarbitOut f = new test.generated.pg_catalog.routines.VarbitOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbit_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> varbitOut(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.VarbitOut f = new test.generated.pg_catalog.routines.VarbitOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbit_recv
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String varbitRecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.VarbitRecv f = new test.generated.pg_catalog.routines.VarbitRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbit_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> varbitRecv(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.VarbitRecv f = new test.generated.pg_catalog.routines.VarbitRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbit_recv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> varbitRecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.VarbitRecv f = new test.generated.pg_catalog.routines.VarbitRecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbit_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] varbitSend(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.VarbitSend f = new test.generated.pg_catalog.routines.VarbitSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbit_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> varbitSend(java.lang.String __1) {
		test.generated.pg_catalog.routines.VarbitSend f = new test.generated.pg_catalog.routines.VarbitSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbit_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> varbitSend(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.VarbitSend f = new test.generated.pg_catalog.routines.VarbitSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbitcmp
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer varbitcmp(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbitcmp f = new test.generated.pg_catalog.routines.Varbitcmp();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbitcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> varbitcmp(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbitcmp f = new test.generated.pg_catalog.routines.Varbitcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbitcmp as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Integer> varbitcmp(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Varbitcmp f = new test.generated.pg_catalog.routines.Varbitcmp();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbiteq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean varbiteq(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbiteq f = new test.generated.pg_catalog.routines.Varbiteq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbiteq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> varbiteq(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbiteq f = new test.generated.pg_catalog.routines.Varbiteq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbiteq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> varbiteq(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Varbiteq f = new test.generated.pg_catalog.routines.Varbiteq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbitge
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean varbitge(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbitge f = new test.generated.pg_catalog.routines.Varbitge();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbitge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> varbitge(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbitge f = new test.generated.pg_catalog.routines.Varbitge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbitge as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> varbitge(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Varbitge f = new test.generated.pg_catalog.routines.Varbitge();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbitgt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean varbitgt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbitgt f = new test.generated.pg_catalog.routines.Varbitgt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbitgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> varbitgt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbitgt f = new test.generated.pg_catalog.routines.Varbitgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbitgt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> varbitgt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Varbitgt f = new test.generated.pg_catalog.routines.Varbitgt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbitle
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean varbitle(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbitle f = new test.generated.pg_catalog.routines.Varbitle();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbitle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> varbitle(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbitle f = new test.generated.pg_catalog.routines.Varbitle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbitle as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> varbitle(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Varbitle f = new test.generated.pg_catalog.routines.Varbitle();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbitlt
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean varbitlt(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbitlt f = new test.generated.pg_catalog.routines.Varbitlt();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbitlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> varbitlt(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbitlt f = new test.generated.pg_catalog.routines.Varbitlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbitlt as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> varbitlt(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Varbitlt f = new test.generated.pg_catalog.routines.Varbitlt();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbitne
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean varbitne(org.jooq.Configuration configuration, java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbitne f = new test.generated.pg_catalog.routines.Varbitne();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbitne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> varbitne(java.lang.String __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Varbitne f = new test.generated.pg_catalog.routines.Varbitne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbitne as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> varbitne(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Varbitne f = new test.generated.pg_catalog.routines.Varbitne();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbittypmodin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer varbittypmodin(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Varbittypmodin f = new test.generated.pg_catalog.routines.Varbittypmodin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbittypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> varbittypmodin(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Varbittypmodin f = new test.generated.pg_catalog.routines.Varbittypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbittypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> varbittypmodin(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Varbittypmodin f = new test.generated.pg_catalog.routines.Varbittypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varbittypmodout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object varbittypmodout(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Varbittypmodout f = new test.generated.pg_catalog.routines.Varbittypmodout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varbittypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> varbittypmodout(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Varbittypmodout f = new test.generated.pg_catalog.routines.Varbittypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varbittypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> varbittypmodout(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Varbittypmodout f = new test.generated.pg_catalog.routines.Varbittypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varchar
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String varchar2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Integer __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.Varchar2 f = new test.generated.pg_catalog.routines.Varchar2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varchar as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> varchar2(java.lang.String __1, java.lang.Integer __2, java.lang.Boolean __3) {
		test.generated.pg_catalog.routines.Varchar2 f = new test.generated.pg_catalog.routines.Varchar2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varchar as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> varchar2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Integer> __2, org.jooq.Field<java.lang.Boolean> __3) {
		test.generated.pg_catalog.routines.Varchar2 f = new test.generated.pg_catalog.routines.Varchar2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varchar
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String varchar1(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Varchar1 f = new test.generated.pg_catalog.routines.Varchar1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varchar as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> varchar1(java.lang.String __1) {
		test.generated.pg_catalog.routines.Varchar1 f = new test.generated.pg_catalog.routines.Varchar1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varchar as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.String> varchar1(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Varchar1 f = new test.generated.pg_catalog.routines.Varchar1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varcharin
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String varcharin(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Varcharin f = new test.generated.pg_catalog.routines.Varcharin();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varcharin as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> varcharin(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Varcharin f = new test.generated.pg_catalog.routines.Varcharin();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varcharin as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> varcharin(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.Varcharin f = new test.generated.pg_catalog.routines.Varcharin();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varcharout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object varcharout(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Varcharout f = new test.generated.pg_catalog.routines.Varcharout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varcharout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> varcharout(java.lang.String __1) {
		test.generated.pg_catalog.routines.Varcharout f = new test.generated.pg_catalog.routines.Varcharout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varcharout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> varcharout(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Varcharout f = new test.generated.pg_catalog.routines.Varcharout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varcharrecv
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String varcharrecv(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Varcharrecv f = new test.generated.pg_catalog.routines.Varcharrecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varcharrecv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> varcharrecv(java.lang.Object __1, java.lang.Long __2, java.lang.Integer __3) {
		test.generated.pg_catalog.routines.Varcharrecv f = new test.generated.pg_catalog.routines.Varcharrecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varcharrecv as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.String> varcharrecv(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Long> __2, org.jooq.Field<java.lang.Integer> __3) {
		test.generated.pg_catalog.routines.Varcharrecv f = new test.generated.pg_catalog.routines.Varcharrecv();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varcharsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] varcharsend(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Varcharsend f = new test.generated.pg_catalog.routines.Varcharsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varcharsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> varcharsend(java.lang.String __1) {
		test.generated.pg_catalog.routines.Varcharsend f = new test.generated.pg_catalog.routines.Varcharsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varcharsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> varcharsend(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Varcharsend f = new test.generated.pg_catalog.routines.Varcharsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varchartypmodin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer varchartypmodin(org.jooq.Configuration configuration, java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Varchartypmodin f = new test.generated.pg_catalog.routines.Varchartypmodin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varchartypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> varchartypmodin(java.lang.Object[] __1) {
		test.generated.pg_catalog.routines.Varchartypmodin f = new test.generated.pg_catalog.routines.Varchartypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varchartypmodin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Integer> varchartypmodin(org.jooq.Field<java.lang.Object[]> __1) {
		test.generated.pg_catalog.routines.Varchartypmodin f = new test.generated.pg_catalog.routines.Varchartypmodin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.varchartypmodout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object varchartypmodout(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Varchartypmodout f = new test.generated.pg_catalog.routines.Varchartypmodout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.varchartypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> varchartypmodout(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Varchartypmodout f = new test.generated.pg_catalog.routines.Varchartypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.varchartypmodout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> varchartypmodout(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Varchartypmodout f = new test.generated.pg_catalog.routines.Varchartypmodout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.variance
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal variance6(org.jooq.Configuration configuration, java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Variance6 f = new test.generated.pg_catalog.routines.Variance6();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.variance as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> variance6(java.math.BigDecimal __1) {
		test.generated.pg_catalog.routines.Variance6 f = new test.generated.pg_catalog.routines.Variance6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.variance as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> variance6(org.jooq.Field<java.math.BigDecimal> __1) {
		test.generated.pg_catalog.routines.Variance6 f = new test.generated.pg_catalog.routines.Variance6();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.variance
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double variance4(org.jooq.Configuration configuration, java.lang.Float __1) {
		test.generated.pg_catalog.routines.Variance4 f = new test.generated.pg_catalog.routines.Variance4();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.variance as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> variance4(java.lang.Float __1) {
		test.generated.pg_catalog.routines.Variance4 f = new test.generated.pg_catalog.routines.Variance4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.variance as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> variance4(org.jooq.Field<java.lang.Float> __1) {
		test.generated.pg_catalog.routines.Variance4 f = new test.generated.pg_catalog.routines.Variance4();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.variance
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal variance1(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Variance1 f = new test.generated.pg_catalog.routines.Variance1();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.variance as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> variance1(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Variance1 f = new test.generated.pg_catalog.routines.Variance1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.variance as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> variance1(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Variance1 f = new test.generated.pg_catalog.routines.Variance1();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.variance
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal variance3(org.jooq.Configuration configuration, java.lang.Short __1) {
		test.generated.pg_catalog.routines.Variance3 f = new test.generated.pg_catalog.routines.Variance3();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.variance as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> variance3(java.lang.Short __1) {
		test.generated.pg_catalog.routines.Variance3 f = new test.generated.pg_catalog.routines.Variance3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.variance as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> variance3(org.jooq.Field<java.lang.Short> __1) {
		test.generated.pg_catalog.routines.Variance3 f = new test.generated.pg_catalog.routines.Variance3();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.variance
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double variance5(org.jooq.Configuration configuration, java.lang.Double __1) {
		test.generated.pg_catalog.routines.Variance5 f = new test.generated.pg_catalog.routines.Variance5();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.variance as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> variance5(java.lang.Double __1) {
		test.generated.pg_catalog.routines.Variance5 f = new test.generated.pg_catalog.routines.Variance5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.variance as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> variance5(org.jooq.Field<java.lang.Double> __1) {
		test.generated.pg_catalog.routines.Variance5 f = new test.generated.pg_catalog.routines.Variance5();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.variance
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.math.BigDecimal variance2(org.jooq.Configuration configuration, java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Variance2 f = new test.generated.pg_catalog.routines.Variance2();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.variance as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> variance2(java.lang.Integer __1) {
		test.generated.pg_catalog.routines.Variance2 f = new test.generated.pg_catalog.routines.Variance2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.variance as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.math.BigDecimal> variance2(org.jooq.Field<java.lang.Integer> __1) {
		test.generated.pg_catalog.routines.Variance2 f = new test.generated.pg_catalog.routines.Variance2();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.version
	 *
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.String version(org.jooq.Configuration configuration) {
		test.generated.pg_catalog.routines.Version f = new test.generated.pg_catalog.routines.Version();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.version as a field
	 *
	 */
	public static org.jooq.Field<java.lang.String> version() {
		test.generated.pg_catalog.routines.Version f = new test.generated.pg_catalog.routines.Version();

		return f.asField();
	}

	/**
	 * Call pg_catalog.void_in
	 *
	 * @param __1 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void voidIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.VoidIn p = new test.generated.pg_catalog.routines.VoidIn();
		p.set__1(__1);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.void_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object voidOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.VoidOut f = new test.generated.pg_catalog.routines.VoidOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.void_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> voidOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.VoidOut f = new test.generated.pg_catalog.routines.VoidOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.void_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> voidOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.VoidOut f = new test.generated.pg_catalog.routines.VoidOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.width
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Double width(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Width f = new test.generated.pg_catalog.routines.Width();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.width as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> width(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Width f = new test.generated.pg_catalog.routines.Width();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.width as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Double> width(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Width f = new test.generated.pg_catalog.routines.Width();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.width_bucket
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer widthBucket1(org.jooq.Configuration configuration, java.math.BigDecimal __1, java.math.BigDecimal __2, java.math.BigDecimal __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.WidthBucket1 f = new test.generated.pg_catalog.routines.WidthBucket1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.width_bucket as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Integer> widthBucket1(java.math.BigDecimal __1, java.math.BigDecimal __2, java.math.BigDecimal __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.WidthBucket1 f = new test.generated.pg_catalog.routines.WidthBucket1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.width_bucket as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Integer> widthBucket1(org.jooq.Field<java.math.BigDecimal> __1, org.jooq.Field<java.math.BigDecimal> __2, org.jooq.Field<java.math.BigDecimal> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.WidthBucket1 f = new test.generated.pg_catalog.routines.WidthBucket1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.width_bucket
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Integer widthBucket2(org.jooq.Configuration configuration, java.lang.Double __1, java.lang.Double __2, java.lang.Double __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.WidthBucket2 f = new test.generated.pg_catalog.routines.WidthBucket2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.width_bucket as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Integer> widthBucket2(java.lang.Double __1, java.lang.Double __2, java.lang.Double __3, java.lang.Integer __4) {
		test.generated.pg_catalog.routines.WidthBucket2 f = new test.generated.pg_catalog.routines.WidthBucket2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Get pg_catalog.width_bucket as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @param __4
	 */
	public static org.jooq.Field<java.lang.Integer> widthBucket2(org.jooq.Field<java.lang.Double> __1, org.jooq.Field<java.lang.Double> __2, org.jooq.Field<java.lang.Double> __3, org.jooq.Field<java.lang.Integer> __4) {
		test.generated.pg_catalog.routines.WidthBucket2 f = new test.generated.pg_catalog.routines.WidthBucket2();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);
		f.set__4(__4);

		return f.asField();
	}

	/**
	 * Call pg_catalog.win_to_utf8
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void winToUtf8(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.WinToUtf8 p = new test.generated.pg_catalog.routines.WinToUtf8();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.win1250_to_latin2
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void win1250ToLatin2(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Win1250ToLatin2 p = new test.generated.pg_catalog.routines.Win1250ToLatin2();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.win1250_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void win1250ToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Win1250ToMic p = new test.generated.pg_catalog.routines.Win1250ToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.win1251_to_iso
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void win1251ToIso(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Win1251ToIso p = new test.generated.pg_catalog.routines.Win1251ToIso();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.win1251_to_koi8r
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void win1251ToKoi8r(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Win1251ToKoi8r p = new test.generated.pg_catalog.routines.Win1251ToKoi8r();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.win1251_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void win1251ToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Win1251ToMic p = new test.generated.pg_catalog.routines.Win1251ToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.win1251_to_win866
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void win1251ToWin866(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Win1251ToWin866 p = new test.generated.pg_catalog.routines.Win1251ToWin866();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.win866_to_iso
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void win866ToIso(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Win866ToIso p = new test.generated.pg_catalog.routines.Win866ToIso();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.win866_to_koi8r
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void win866ToKoi8r(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Win866ToKoi8r p = new test.generated.pg_catalog.routines.Win866ToKoi8r();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.win866_to_mic
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void win866ToMic(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Win866ToMic p = new test.generated.pg_catalog.routines.Win866ToMic();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.win866_to_win1251
	 *
	 * @param __1 IN parameter
	 * @param __2 IN parameter
	 * @param __3 IN parameter
	 * @param __4 IN parameter
	 * @param __5 IN parameter
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static void win866ToWin1251(org.jooq.Configuration configuration, java.lang.Integer __1, java.lang.Integer __2, java.lang.Object __3, java.lang.Object __4, java.lang.Integer __5) {
		test.generated.pg_catalog.routines.Win866ToWin1251 p = new test.generated.pg_catalog.routines.Win866ToWin1251();
		p.set__1(__1);
		p.set__2(__2);
		p.set__3(__3);
		p.set__4(__4);
		p.set__5(__5);

		p.execute(configuration);
	}

	/**
	 * Call pg_catalog.xideq
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean xideq(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Xideq f = new test.generated.pg_catalog.routines.Xideq();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xideq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> xideq(java.lang.Long __1, java.lang.Long __2) {
		test.generated.pg_catalog.routines.Xideq f = new test.generated.pg_catalog.routines.Xideq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xideq as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> xideq(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Long> __2) {
		test.generated.pg_catalog.routines.Xideq f = new test.generated.pg_catalog.routines.Xideq();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xideqint4
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean xideqint4(org.jooq.Configuration configuration, java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Xideqint4 f = new test.generated.pg_catalog.routines.Xideqint4();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xideqint4 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> xideqint4(java.lang.Long __1, java.lang.Integer __2) {
		test.generated.pg_catalog.routines.Xideqint4 f = new test.generated.pg_catalog.routines.Xideqint4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xideqint4 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> xideqint4(org.jooq.Field<java.lang.Long> __1, org.jooq.Field<java.lang.Integer> __2) {
		test.generated.pg_catalog.routines.Xideqint4 f = new test.generated.pg_catalog.routines.Xideqint4();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xidin
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long xidin(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Xidin f = new test.generated.pg_catalog.routines.Xidin();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xidin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> xidin(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Xidin f = new test.generated.pg_catalog.routines.Xidin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xidin as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> xidin(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Xidin f = new test.generated.pg_catalog.routines.Xidin();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xidout
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object xidout(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Xidout f = new test.generated.pg_catalog.routines.Xidout();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xidout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xidout(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Xidout f = new test.generated.pg_catalog.routines.Xidout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xidout as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xidout(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Xidout f = new test.generated.pg_catalog.routines.Xidout();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xidrecv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Long xidrecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Xidrecv f = new test.generated.pg_catalog.routines.Xidrecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xidrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> xidrecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Xidrecv f = new test.generated.pg_catalog.routines.Xidrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xidrecv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Long> xidrecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Xidrecv f = new test.generated.pg_catalog.routines.Xidrecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xidsend
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] xidsend(org.jooq.Configuration configuration, java.lang.Long __1) {
		test.generated.pg_catalog.routines.Xidsend f = new test.generated.pg_catalog.routines.Xidsend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xidsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> xidsend(java.lang.Long __1) {
		test.generated.pg_catalog.routines.Xidsend f = new test.generated.pg_catalog.routines.Xidsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xidsend as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> xidsend(org.jooq.Field<java.lang.Long> __1) {
		test.generated.pg_catalog.routines.Xidsend f = new test.generated.pg_catalog.routines.Xidsend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xml
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object xml(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Xml f = new test.generated.pg_catalog.routines.Xml();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xml as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xml(java.lang.String __1) {
		test.generated.pg_catalog.routines.Xml f = new test.generated.pg_catalog.routines.Xml();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xml as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xml(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Xml f = new test.generated.pg_catalog.routines.Xml();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xml_in
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object xmlIn(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.XmlIn f = new test.generated.pg_catalog.routines.XmlIn();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xml_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xmlIn(java.lang.Object __1) {
		test.generated.pg_catalog.routines.XmlIn f = new test.generated.pg_catalog.routines.XmlIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xml_in as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xmlIn(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.XmlIn f = new test.generated.pg_catalog.routines.XmlIn();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xml_out
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object xmlOut(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.XmlOut f = new test.generated.pg_catalog.routines.XmlOut();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xml_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xmlOut(java.lang.Object __1) {
		test.generated.pg_catalog.routines.XmlOut f = new test.generated.pg_catalog.routines.XmlOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xml_out as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xmlOut(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.XmlOut f = new test.generated.pg_catalog.routines.XmlOut();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xml_recv
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object xmlRecv(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.XmlRecv f = new test.generated.pg_catalog.routines.XmlRecv();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xml_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xmlRecv(java.lang.Object __1) {
		test.generated.pg_catalog.routines.XmlRecv f = new test.generated.pg_catalog.routines.XmlRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xml_recv as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xmlRecv(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.XmlRecv f = new test.generated.pg_catalog.routines.XmlRecv();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xml_send
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static byte[] xmlSend(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.XmlSend f = new test.generated.pg_catalog.routines.XmlSend();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xml_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> xmlSend(java.lang.Object __1) {
		test.generated.pg_catalog.routines.XmlSend f = new test.generated.pg_catalog.routines.XmlSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xml_send as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<byte[]> xmlSend(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.XmlSend f = new test.generated.pg_catalog.routines.XmlSend();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xmlagg
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object xmlagg(org.jooq.Configuration configuration, java.lang.Object __1) {
		test.generated.pg_catalog.routines.Xmlagg f = new test.generated.pg_catalog.routines.Xmlagg();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xmlagg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xmlagg(java.lang.Object __1) {
		test.generated.pg_catalog.routines.Xmlagg f = new test.generated.pg_catalog.routines.Xmlagg();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xmlagg as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xmlagg(org.jooq.Field<java.lang.Object> __1) {
		test.generated.pg_catalog.routines.Xmlagg f = new test.generated.pg_catalog.routines.Xmlagg();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xmlcomment
	 *
	 * @param __1
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object xmlcomment(org.jooq.Configuration configuration, java.lang.String __1) {
		test.generated.pg_catalog.routines.Xmlcomment f = new test.generated.pg_catalog.routines.Xmlcomment();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xmlcomment as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xmlcomment(java.lang.String __1) {
		test.generated.pg_catalog.routines.Xmlcomment f = new test.generated.pg_catalog.routines.Xmlcomment();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xmlcomment as a field
	 *
	 * @param __1
	 */
	public static org.jooq.Field<java.lang.Object> xmlcomment(org.jooq.Field<java.lang.String> __1) {
		test.generated.pg_catalog.routines.Xmlcomment f = new test.generated.pg_catalog.routines.Xmlcomment();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xmlconcat2
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object xmlconcat2(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Xmlconcat2 f = new test.generated.pg_catalog.routines.Xmlconcat2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xmlconcat2 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> xmlconcat2(java.lang.Object __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Xmlconcat2 f = new test.generated.pg_catalog.routines.Xmlconcat2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xmlconcat2 as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object> xmlconcat2(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Xmlconcat2 f = new test.generated.pg_catalog.routines.Xmlconcat2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xmlvalidate
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Boolean xmlvalidate(org.jooq.Configuration configuration, java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Xmlvalidate f = new test.generated.pg_catalog.routines.Xmlvalidate();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xmlvalidate as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> xmlvalidate(java.lang.Object __1, java.lang.String __2) {
		test.generated.pg_catalog.routines.Xmlvalidate f = new test.generated.pg_catalog.routines.Xmlvalidate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xmlvalidate as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Boolean> xmlvalidate(org.jooq.Field<java.lang.Object> __1, org.jooq.Field<java.lang.String> __2) {
		test.generated.pg_catalog.routines.Xmlvalidate f = new test.generated.pg_catalog.routines.Xmlvalidate();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xpath
	 *
	 * @param __1
	 * @param __2
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object[] xpath2(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Xpath2 f = new test.generated.pg_catalog.routines.Xpath2();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xpath as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object[]> xpath2(java.lang.String __1, java.lang.Object __2) {
		test.generated.pg_catalog.routines.Xpath2 f = new test.generated.pg_catalog.routines.Xpath2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xpath as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static org.jooq.Field<java.lang.Object[]> xpath2(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Object> __2) {
		test.generated.pg_catalog.routines.Xpath2 f = new test.generated.pg_catalog.routines.Xpath2();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Call pg_catalog.xpath
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 * @throws org.jooq.exception.DataAccessException if something went wrong executing the query
	 */
	public static java.lang.Object[] xpath1(org.jooq.Configuration configuration, java.lang.String __1, java.lang.Object __2, java.lang.String[] __3) {
		test.generated.pg_catalog.routines.Xpath1 f = new test.generated.pg_catalog.routines.Xpath1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get pg_catalog.xpath as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object[]> xpath1(java.lang.String __1, java.lang.Object __2, java.lang.String[] __3) {
		test.generated.pg_catalog.routines.Xpath1 f = new test.generated.pg_catalog.routines.Xpath1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * Get pg_catalog.xpath as a field
	 *
	 * @param __1
	 * @param __2
	 * @param __3
	 */
	public static org.jooq.Field<java.lang.Object[]> xpath1(org.jooq.Field<java.lang.String> __1, org.jooq.Field<java.lang.Object> __2, org.jooq.Field<java.lang.String[]> __3) {
		test.generated.pg_catalog.routines.Xpath1 f = new test.generated.pg_catalog.routines.Xpath1();
		f.set__1(__1);
		f.set__2(__2);
		f.set__3(__3);

		return f.asField();
	}

	/**
	 * No instances
	 */
	private Routines() {}
}
