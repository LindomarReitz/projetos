/**
 * This class is generated by jOOQ
 */
package test.generated.pg_catalog.routines;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class PgPreparedStatement extends org.jooq.impl.AbstractRoutine<java.lang.Void> {

	private static final long serialVersionUID = -1788366191;


	/**
	 * The procedure parameter <code>pg_catalog.pg_prepared_statement.name</code>
	 */
	public static final org.jooq.Parameter<java.lang.String> NAME = createParameter("name", org.jooq.impl.SQLDataType.CLOB);

	/**
	 * The procedure parameter <code>pg_catalog.pg_prepared_statement.statement</code>
	 */
	public static final org.jooq.Parameter<java.lang.String> STATEMENT = createParameter("statement", org.jooq.impl.SQLDataType.CLOB);

	/**
	 * The procedure parameter <code>pg_catalog.pg_prepared_statement.prepare_time</code>
	 */
	public static final org.jooq.Parameter<java.sql.Timestamp> PREPARE_TIME = createParameter("prepare_time", org.jooq.impl.SQLDataType.TIMESTAMP);

	/**
	 * The procedure parameter <code>pg_catalog.pg_prepared_statement.parameter_types</code>
	 * <p>
	 * The SQL type of this item (ARRAY, _regtype) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final org.jooq.Parameter<java.lang.Object[]> PARAMETER_TYPES = createParameter("parameter_types", org.jooq.util.postgres.PostgresDataType.getDefaultDataType("regtype").getArrayDataType());

	/**
	 * The procedure parameter <code>pg_catalog.pg_prepared_statement.from_sql</code>
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> FROM_SQL = createParameter("from_sql", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * Create a new routine call instance
	 */
	public PgPreparedStatement() {
		super("pg_prepared_statement", test.generated.pg_catalog.PgCatalog.PG_CATALOG);

		addOutParameter(NAME);
		addOutParameter(STATEMENT);
		addOutParameter(PREPARE_TIME);
		addOutParameter(PARAMETER_TYPES);
		addOutParameter(FROM_SQL);
	}

	/**
	 * Get the <code>name</code> parameter OUT value from the routine
	 */
	public java.lang.String getName_() {
		return getValue(NAME);
	}

	/**
	 * Get the <code>statement</code> parameter OUT value from the routine
	 */
	public java.lang.String getStatement() {
		return getValue(STATEMENT);
	}

	/**
	 * Get the <code>prepare_time</code> parameter OUT value from the routine
	 */
	public java.sql.Timestamp getPrepareTime() {
		return getValue(PREPARE_TIME);
	}

	/**
	 * Get the <code>parameter_types</code> parameter OUT value from the routine
	 */
	public java.lang.Object[] getParameterTypes() {
		return getValue(PARAMETER_TYPES);
	}

	/**
	 * Get the <code>from_sql</code> parameter OUT value from the routine
	 */
	public java.lang.Boolean getFromSql() {
		return getValue(FROM_SQL);
	}
}
