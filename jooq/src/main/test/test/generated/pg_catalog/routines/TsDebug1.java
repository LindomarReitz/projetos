/**
 * This class is generated by jOOQ
 */
package test.generated.pg_catalog.routines;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class TsDebug1 extends org.jooq.impl.AbstractRoutine<java.lang.Void> {

	private static final long serialVersionUID = 359686623;


	/**
	 * The procedure parameter <code>pg_catalog.ts_debug.config</code>
	 * <p>
	 * The SQL type of this item (regconfig) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final org.jooq.Parameter<java.lang.Object> CONFIG = createParameter("config", org.jooq.util.postgres.PostgresDataType.getDefaultDataType("regconfig"));

	/**
	 * The procedure parameter <code>pg_catalog.ts_debug.document</code>
	 */
	public static final org.jooq.Parameter<java.lang.String> DOCUMENT = createParameter("document", org.jooq.impl.SQLDataType.CLOB);

	/**
	 * The procedure parameter <code>pg_catalog.ts_debug.alias</code>
	 */
	public static final org.jooq.Parameter<java.lang.String> ALIAS = createParameter("alias", org.jooq.impl.SQLDataType.CLOB);

	/**
	 * The procedure parameter <code>pg_catalog.ts_debug.description</code>
	 */
	public static final org.jooq.Parameter<java.lang.String> DESCRIPTION = createParameter("description", org.jooq.impl.SQLDataType.CLOB);

	/**
	 * The procedure parameter <code>pg_catalog.ts_debug.token</code>
	 */
	public static final org.jooq.Parameter<java.lang.String> TOKEN = createParameter("token", org.jooq.impl.SQLDataType.CLOB);

	/**
	 * The procedure parameter <code>pg_catalog.ts_debug.dictionaries</code>
	 * <p>
	 * The SQL type of this item (ARRAY, _regdictionary) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final org.jooq.Parameter<java.lang.Object[]> DICTIONARIES = createParameter("dictionaries", org.jooq.util.postgres.PostgresDataType.getDefaultDataType("regdictionary").getArrayDataType());

	/**
	 * The procedure parameter <code>pg_catalog.ts_debug.dictionary</code>
	 * <p>
	 * The SQL type of this item (regdictionary) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final org.jooq.Parameter<java.lang.Object> DICTIONARY = createParameter("dictionary", org.jooq.util.postgres.PostgresDataType.getDefaultDataType("regdictionary"));

	/**
	 * The procedure parameter <code>pg_catalog.ts_debug.lexemes</code>
	 */
	public static final org.jooq.Parameter<java.lang.String[]> LEXEMES = createParameter("lexemes", org.jooq.impl.SQLDataType.CLOB.getArrayDataType());

	/**
	 * Create a new routine call instance
	 */
	public TsDebug1() {
		super("ts_debug", test.generated.pg_catalog.PgCatalog.PG_CATALOG);

		addInParameter(CONFIG);
		addInParameter(DOCUMENT);
		addOutParameter(ALIAS);
		addOutParameter(DESCRIPTION);
		addOutParameter(TOKEN);
		addOutParameter(DICTIONARIES);
		addOutParameter(DICTIONARY);
		addOutParameter(LEXEMES);
		setOverloaded(true);
	}

	/**
	 * Set the <code>config</code> parameter IN value to the routine
	 */
	public void setConfig(java.lang.Object value) {
		setValue(test.generated.pg_catalog.routines.TsDebug1.CONFIG, value);
	}

	/**
	 * Set the <code>document</code> parameter IN value to the routine
	 */
	public void setDocument(java.lang.String value) {
		setValue(test.generated.pg_catalog.routines.TsDebug1.DOCUMENT, value);
	}

	/**
	 * Get the <code>alias</code> parameter OUT value from the routine
	 */
	public java.lang.String getAlias() {
		return getValue(ALIAS);
	}

	/**
	 * Get the <code>description</code> parameter OUT value from the routine
	 */
	public java.lang.String getDescription() {
		return getValue(DESCRIPTION);
	}

	/**
	 * Get the <code>token</code> parameter OUT value from the routine
	 */
	public java.lang.String getToken() {
		return getValue(TOKEN);
	}

	/**
	 * Get the <code>dictionaries</code> parameter OUT value from the routine
	 */
	public java.lang.Object[] getDictionaries() {
		return getValue(DICTIONARIES);
	}

	/**
	 * Get the <code>dictionary</code> parameter OUT value from the routine
	 */
	public java.lang.Object getDictionary() {
		return getValue(DICTIONARY);
	}

	/**
	 * Get the <code>lexemes</code> parameter OUT value from the routine
	 */
	public java.lang.String[] getLexemes() {
		return getValue(LEXEMES);
	}
}
