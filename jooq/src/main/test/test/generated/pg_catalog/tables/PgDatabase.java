/**
 * This class is generated by jOOQ
 */
package test.generated.pg_catalog.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class PgDatabase extends org.jooq.impl.TableImpl<test.generated.pg_catalog.tables.records.PgDatabaseRecord> {

	private static final long serialVersionUID = -451952791;

	/**
	 * The singleton instance of pg_catalog.pg_database
	 */
	public static final test.generated.pg_catalog.tables.PgDatabase PG_DATABASE = new test.generated.pg_catalog.tables.PgDatabase();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<test.generated.pg_catalog.tables.records.PgDatabaseRecord> getRecordType() {
		return test.generated.pg_catalog.tables.records.PgDatabaseRecord.class;
	}

	/**
	 * The table column <code>pg_catalog.pg_database.datname</code>
	 */
	public final org.jooq.TableField<test.generated.pg_catalog.tables.records.PgDatabaseRecord, java.lang.String> DATNAME = createField("datname", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>pg_catalog.pg_database.datdba</code>
	 */
	public final org.jooq.TableField<test.generated.pg_catalog.tables.records.PgDatabaseRecord, java.lang.Long> DATDBA = createField("datdba", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The table column <code>pg_catalog.pg_database.encoding</code>
	 */
	public final org.jooq.TableField<test.generated.pg_catalog.tables.records.PgDatabaseRecord, java.lang.Integer> ENCODING = createField("encoding", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The table column <code>pg_catalog.pg_database.datcollate</code>
	 */
	public final org.jooq.TableField<test.generated.pg_catalog.tables.records.PgDatabaseRecord, java.lang.String> DATCOLLATE = createField("datcollate", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>pg_catalog.pg_database.datctype</code>
	 */
	public final org.jooq.TableField<test.generated.pg_catalog.tables.records.PgDatabaseRecord, java.lang.String> DATCTYPE = createField("datctype", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>pg_catalog.pg_database.datistemplate</code>
	 */
	public final org.jooq.TableField<test.generated.pg_catalog.tables.records.PgDatabaseRecord, java.lang.Boolean> DATISTEMPLATE = createField("datistemplate", org.jooq.impl.SQLDataType.BOOLEAN, this);

	/**
	 * The table column <code>pg_catalog.pg_database.datallowconn</code>
	 */
	public final org.jooq.TableField<test.generated.pg_catalog.tables.records.PgDatabaseRecord, java.lang.Boolean> DATALLOWCONN = createField("datallowconn", org.jooq.impl.SQLDataType.BOOLEAN, this);

	/**
	 * The table column <code>pg_catalog.pg_database.datconnlimit</code>
	 */
	public final org.jooq.TableField<test.generated.pg_catalog.tables.records.PgDatabaseRecord, java.lang.Integer> DATCONNLIMIT = createField("datconnlimit", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The table column <code>pg_catalog.pg_database.datlastsysoid</code>
	 */
	public final org.jooq.TableField<test.generated.pg_catalog.tables.records.PgDatabaseRecord, java.lang.Long> DATLASTSYSOID = createField("datlastsysoid", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The table column <code>pg_catalog.pg_database.datfrozenxid</code>
	 */
	public final org.jooq.TableField<test.generated.pg_catalog.tables.records.PgDatabaseRecord, java.lang.Long> DATFROZENXID = createField("datfrozenxid", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The table column <code>pg_catalog.pg_database.dattablespace</code>
	 */
	public final org.jooq.TableField<test.generated.pg_catalog.tables.records.PgDatabaseRecord, java.lang.Long> DATTABLESPACE = createField("dattablespace", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The table column <code>pg_catalog.pg_database.datacl</code>
	 */
	public final org.jooq.TableField<test.generated.pg_catalog.tables.records.PgDatabaseRecord, java.lang.String[]> DATACL = createField("datacl", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this);

	public PgDatabase() {
		super("pg_database", test.generated.pg_catalog.PgCatalog.PG_CATALOG);
	}

	public PgDatabase(java.lang.String alias) {
		super(alias, test.generated.pg_catalog.PgCatalog.PG_CATALOG, test.generated.pg_catalog.tables.PgDatabase.PG_DATABASE);
	}

	@Override
	public test.generated.pg_catalog.tables.PgDatabase as(java.lang.String alias) {
		return new test.generated.pg_catalog.tables.PgDatabase(alias);
	}
}
