/**
 * This class is generated by jOOQ
 */
package test.generated.information_schema.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class AdministrableRoleAuthorizations extends org.jooq.impl.TableImpl<test.generated.information_schema.tables.records.AdministrableRoleAuthorizationsRecord> {

	private static final long serialVersionUID = -1342465443;

	/**
	 * The singleton instance of information_schema.administrable_role_authorizations
	 */
	public static final test.generated.information_schema.tables.AdministrableRoleAuthorizations ADMINISTRABLE_ROLE_AUTHORIZATIONS = new test.generated.information_schema.tables.AdministrableRoleAuthorizations();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<test.generated.information_schema.tables.records.AdministrableRoleAuthorizationsRecord> getRecordType() {
		return test.generated.information_schema.tables.records.AdministrableRoleAuthorizationsRecord.class;
	}

	/**
	 * The table column <code>information_schema.administrable_role_authorizations.grantee</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.AdministrableRoleAuthorizationsRecord, java.lang.String> GRANTEE = createField("grantee", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.administrable_role_authorizations.role_name</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.AdministrableRoleAuthorizationsRecord, java.lang.String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.administrable_role_authorizations.is_grantable</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.AdministrableRoleAuthorizationsRecord, java.lang.String> IS_GRANTABLE = createField("is_grantable", org.jooq.impl.SQLDataType.VARCHAR, this);

	public AdministrableRoleAuthorizations() {
		super("administrable_role_authorizations", test.generated.information_schema.InformationSchema.INFORMATION_SCHEMA);
	}

	public AdministrableRoleAuthorizations(java.lang.String alias) {
		super(alias, test.generated.information_schema.InformationSchema.INFORMATION_SCHEMA, test.generated.information_schema.tables.AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS);
	}

	@Override
	public test.generated.information_schema.tables.AdministrableRoleAuthorizations as(java.lang.String alias) {
		return new test.generated.information_schema.tables.AdministrableRoleAuthorizations(alias);
	}
}
