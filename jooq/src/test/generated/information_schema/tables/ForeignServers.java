/**
 * This class is generated by jOOQ
 */
package test.generated.information_schema.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class ForeignServers extends org.jooq.impl.TableImpl<test.generated.information_schema.tables.records.ForeignServersRecord> {

	private static final long serialVersionUID = -915249501;

	/**
	 * The singleton instance of information_schema.foreign_servers
	 */
	public static final test.generated.information_schema.tables.ForeignServers FOREIGN_SERVERS = new test.generated.information_schema.tables.ForeignServers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<test.generated.information_schema.tables.records.ForeignServersRecord> getRecordType() {
		return test.generated.information_schema.tables.records.ForeignServersRecord.class;
	}

	/**
	 * The table column <code>information_schema.foreign_servers.foreign_server_catalog</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ForeignServersRecord, java.lang.String> FOREIGN_SERVER_CATALOG = createField("foreign_server_catalog", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.foreign_servers.foreign_server_name</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ForeignServersRecord, java.lang.String> FOREIGN_SERVER_NAME = createField("foreign_server_name", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.foreign_servers.foreign_data_wrapper_catalog</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ForeignServersRecord, java.lang.String> FOREIGN_DATA_WRAPPER_CATALOG = createField("foreign_data_wrapper_catalog", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.foreign_servers.foreign_data_wrapper_name</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ForeignServersRecord, java.lang.String> FOREIGN_DATA_WRAPPER_NAME = createField("foreign_data_wrapper_name", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.foreign_servers.foreign_server_type</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ForeignServersRecord, java.lang.String> FOREIGN_SERVER_TYPE = createField("foreign_server_type", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.foreign_servers.foreign_server_version</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ForeignServersRecord, java.lang.String> FOREIGN_SERVER_VERSION = createField("foreign_server_version", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.foreign_servers.authorization_identifier</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.ForeignServersRecord, java.lang.String> AUTHORIZATION_IDENTIFIER = createField("authorization_identifier", org.jooq.impl.SQLDataType.VARCHAR, this);

	public ForeignServers() {
		super("foreign_servers", test.generated.information_schema.InformationSchema.INFORMATION_SCHEMA);
	}

	public ForeignServers(java.lang.String alias) {
		super(alias, test.generated.information_schema.InformationSchema.INFORMATION_SCHEMA, test.generated.information_schema.tables.ForeignServers.FOREIGN_SERVERS);
	}

	@Override
	public test.generated.information_schema.tables.ForeignServers as(java.lang.String alias) {
		return new test.generated.information_schema.tables.ForeignServers(alias);
	}
}
