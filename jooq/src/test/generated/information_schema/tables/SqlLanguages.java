/**
 * This class is generated by jOOQ
 */
package test.generated.information_schema.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class SqlLanguages extends org.jooq.impl.TableImpl<test.generated.information_schema.tables.records.SqlLanguagesRecord> {

	private static final long serialVersionUID = 1950875488;

	/**
	 * The singleton instance of information_schema.sql_languages
	 */
	public static final test.generated.information_schema.tables.SqlLanguages SQL_LANGUAGES = new test.generated.information_schema.tables.SqlLanguages();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<test.generated.information_schema.tables.records.SqlLanguagesRecord> getRecordType() {
		return test.generated.information_schema.tables.records.SqlLanguagesRecord.class;
	}

	/**
	 * The table column <code>information_schema.sql_languages.sql_language_source</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.SqlLanguagesRecord, java.lang.String> SQL_LANGUAGE_SOURCE = createField("sql_language_source", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.sql_languages.sql_language_year</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.SqlLanguagesRecord, java.lang.String> SQL_LANGUAGE_YEAR = createField("sql_language_year", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.sql_languages.sql_language_conformance</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.SqlLanguagesRecord, java.lang.String> SQL_LANGUAGE_CONFORMANCE = createField("sql_language_conformance", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.sql_languages.sql_language_integrity</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.SqlLanguagesRecord, java.lang.String> SQL_LANGUAGE_INTEGRITY = createField("sql_language_integrity", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.sql_languages.sql_language_implementation</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.SqlLanguagesRecord, java.lang.String> SQL_LANGUAGE_IMPLEMENTATION = createField("sql_language_implementation", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.sql_languages.sql_language_binding_style</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.SqlLanguagesRecord, java.lang.String> SQL_LANGUAGE_BINDING_STYLE = createField("sql_language_binding_style", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>information_schema.sql_languages.sql_language_programming_language</code>
	 */
	public final org.jooq.TableField<test.generated.information_schema.tables.records.SqlLanguagesRecord, java.lang.String> SQL_LANGUAGE_PROGRAMMING_LANGUAGE = createField("sql_language_programming_language", org.jooq.impl.SQLDataType.VARCHAR, this);

	public SqlLanguages() {
		super("sql_languages", test.generated.information_schema.InformationSchema.INFORMATION_SCHEMA);
	}

	public SqlLanguages(java.lang.String alias) {
		super(alias, test.generated.information_schema.InformationSchema.INFORMATION_SCHEMA, test.generated.information_schema.tables.SqlLanguages.SQL_LANGUAGES);
	}

	@Override
	public test.generated.information_schema.tables.SqlLanguages as(java.lang.String alias) {
		return new test.generated.information_schema.tables.SqlLanguages(alias);
	}
}
