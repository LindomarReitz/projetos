/**
 * This class is generated by jOOQ
 */
package test.generated.pg_catalog.routines;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class PgLockStatus extends org.jooq.impl.AbstractRoutine<java.lang.Void> {

	private static final long serialVersionUID = 650528813;


	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.locktype</code>
	 */
	public static final org.jooq.Parameter<java.lang.String> LOCKTYPE = createParameter("locktype", org.jooq.impl.SQLDataType.CLOB);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.database</code>
	 */
	public static final org.jooq.Parameter<java.lang.Long> DATABASE = createParameter("database", org.jooq.impl.SQLDataType.BIGINT);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.relation</code>
	 */
	public static final org.jooq.Parameter<java.lang.Long> RELATION = createParameter("relation", org.jooq.impl.SQLDataType.BIGINT);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.page</code>
	 */
	public static final org.jooq.Parameter<java.lang.Integer> PAGE = createParameter("page", org.jooq.impl.SQLDataType.INTEGER);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.tuple</code>
	 */
	public static final org.jooq.Parameter<java.lang.Short> TUPLE = createParameter("tuple", org.jooq.impl.SQLDataType.SMALLINT);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.virtualxid</code>
	 */
	public static final org.jooq.Parameter<java.lang.String> VIRTUALXID = createParameter("virtualxid", org.jooq.impl.SQLDataType.CLOB);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.transactionid</code>
	 */
	public static final org.jooq.Parameter<java.lang.Long> TRANSACTIONID = createParameter("transactionid", org.jooq.impl.SQLDataType.BIGINT);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.classid</code>
	 */
	public static final org.jooq.Parameter<java.lang.Long> CLASSID = createParameter("classid", org.jooq.impl.SQLDataType.BIGINT);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.objid</code>
	 */
	public static final org.jooq.Parameter<java.lang.Long> OBJID = createParameter("objid", org.jooq.impl.SQLDataType.BIGINT);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.objsubid</code>
	 */
	public static final org.jooq.Parameter<java.lang.Short> OBJSUBID = createParameter("objsubid", org.jooq.impl.SQLDataType.SMALLINT);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.virtualtransaction</code>
	 */
	public static final org.jooq.Parameter<java.lang.String> VIRTUALTRANSACTION = createParameter("virtualtransaction", org.jooq.impl.SQLDataType.CLOB);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.pid</code>
	 */
	public static final org.jooq.Parameter<java.lang.Integer> PID = createParameter("pid", org.jooq.impl.SQLDataType.INTEGER);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.mode</code>
	 */
	public static final org.jooq.Parameter<java.lang.String> MODE = createParameter("mode", org.jooq.impl.SQLDataType.CLOB);

	/**
	 * The procedure parameter <code>pg_catalog.pg_lock_status.granted</code>
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> GRANTED = createParameter("granted", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * Create a new routine call instance
	 */
	public PgLockStatus() {
		super("pg_lock_status", test.generated.pg_catalog.PgCatalog.PG_CATALOG);

		addOutParameter(LOCKTYPE);
		addOutParameter(DATABASE);
		addOutParameter(RELATION);
		addOutParameter(PAGE);
		addOutParameter(TUPLE);
		addOutParameter(VIRTUALXID);
		addOutParameter(TRANSACTIONID);
		addOutParameter(CLASSID);
		addOutParameter(OBJID);
		addOutParameter(OBJSUBID);
		addOutParameter(VIRTUALTRANSACTION);
		addOutParameter(PID);
		addOutParameter(MODE);
		addOutParameter(GRANTED);
	}

	/**
	 * Get the <code>locktype</code> parameter OUT value from the routine
	 */
	public java.lang.String getLocktype() {
		return getValue(LOCKTYPE);
	}

	/**
	 * Get the <code>database</code> parameter OUT value from the routine
	 */
	public java.lang.Long getDatabase() {
		return getValue(DATABASE);
	}

	/**
	 * Get the <code>relation</code> parameter OUT value from the routine
	 */
	public java.lang.Long getRelation() {
		return getValue(RELATION);
	}

	/**
	 * Get the <code>page</code> parameter OUT value from the routine
	 */
	public java.lang.Integer getPage() {
		return getValue(PAGE);
	}

	/**
	 * Get the <code>tuple</code> parameter OUT value from the routine
	 */
	public java.lang.Short getTuple() {
		return getValue(TUPLE);
	}

	/**
	 * Get the <code>virtualxid</code> parameter OUT value from the routine
	 */
	public java.lang.String getVirtualxid() {
		return getValue(VIRTUALXID);
	}

	/**
	 * Get the <code>transactionid</code> parameter OUT value from the routine
	 */
	public java.lang.Long getTransactionid() {
		return getValue(TRANSACTIONID);
	}

	/**
	 * Get the <code>classid</code> parameter OUT value from the routine
	 */
	public java.lang.Long getClassid() {
		return getValue(CLASSID);
	}

	/**
	 * Get the <code>objid</code> parameter OUT value from the routine
	 */
	public java.lang.Long getObjid() {
		return getValue(OBJID);
	}

	/**
	 * Get the <code>objsubid</code> parameter OUT value from the routine
	 */
	public java.lang.Short getObjsubid() {
		return getValue(OBJSUBID);
	}

	/**
	 * Get the <code>virtualtransaction</code> parameter OUT value from the routine
	 */
	public java.lang.String getVirtualtransaction() {
		return getValue(VIRTUALTRANSACTION);
	}

	/**
	 * Get the <code>pid</code> parameter OUT value from the routine
	 */
	public java.lang.Integer getPid() {
		return getValue(PID);
	}

	/**
	 * Get the <code>mode</code> parameter OUT value from the routine
	 */
	public java.lang.String getMode() {
		return getValue(MODE);
	}

	/**
	 * Get the <code>granted</code> parameter OUT value from the routine
	 */
	public java.lang.Boolean getGranted() {
		return getValue(GRANTED);
	}
}
